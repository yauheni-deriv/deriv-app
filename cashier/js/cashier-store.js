/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["@deriv/components", "@deriv/shared", "@deriv/translations", "mobx", "react"], factory);
	else if(typeof exports === 'object')
		exports["@deriv/cashier"] = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"));
	else
		root["@deriv/cashier"] = factory(root["@deriv/components"], root["@deriv/shared"], root["@deriv/translations"], root["mobx"], root["react"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__) {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./stores/cashier-store.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ CashierStore)\n});\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ./stores/account-prompt-dialog-store.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar AccountPromptDialogStore = /*#__PURE__*/function () {\n  function AccountPromptDialogStore(root_store) {\n    _classCallCheck(this, AccountPromptDialogStore);\n\n    this.should_show = false;\n    this.is_confirmed = false;\n    this.last_location = null;\n    this.current_location = null;\n    (0,external_mobx_.makeObservable)(this, {\n      should_show: external_mobx_.observable,\n      is_confirmed: external_mobx_.observable,\n      last_location: external_mobx_.observable,\n      current_location: external_mobx_.observable,\n      shouldNavigateAfterPrompt: external_mobx_.action.bound,\n      resetLastLocation: external_mobx_.action.bound,\n      resetIsConfirmed: external_mobx_.action.bound,\n      onConfirm: external_mobx_.action.bound,\n      onCancel: external_mobx_.action.bound,\n      continueRoute: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n  }\n\n  _createClass(AccountPromptDialogStore, [{\n    key: \"shouldNavigateAfterPrompt\",\n    value: function shouldNavigateAfterPrompt(next_location, current_location) {\n      if (!this.is_confirmed) {\n        this.last_location = next_location;\n        this.should_show = true;\n        this.current_location = current_location;\n      }\n    }\n  }, {\n    key: \"resetLastLocation\",\n    value: function resetLastLocation() {\n      this.last_location = null;\n    }\n  }, {\n    key: \"resetIsConfirmed\",\n    value: function resetIsConfirmed() {\n      this.is_confirmed = false;\n    }\n  }, {\n    key: \"onConfirm\",\n    value: function () {\n      var _onConfirm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var client, has_fiat_account;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                client = this.root_store.client;\n                this.should_show = false;\n                this.is_confirmed = true;\n                has_fiat_account = Object.values(client.accounts).some(function (acc_settings) {\n                  return !acc_settings.is_virtual && !(0,shared_.isCryptocurrency)(acc_settings.currency);\n                });\n\n                if (!((0,shared_.isCryptocurrency)(client === null || client === void 0 ? void 0 : client.currency) && has_fiat_account)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.doSwitch();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onConfirm() {\n        return _onConfirm.apply(this, arguments);\n      }\n\n      return onConfirm;\n    }()\n  }, {\n    key: \"doSwitch\",\n    value: function () {\n      var _doSwitch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this$root_store, client, modules, general_store, non_crypto_account_loginid;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$root_store = this.root_store, client = _this$root_store.client, modules = _this$root_store.modules;\n                general_store = modules.cashier.general_store;\n                non_crypto_account_loginid = Object.entries(client.accounts).reduce(function (initial_value, _ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      loginid = _ref2[0],\n                      settings = _ref2[1];\n\n                  return !settings.is_virtual && !(0,shared_.isCryptocurrency)(settings.currency) ? loginid : initial_value;\n                }, '');\n                _context2.next = 5;\n                return client.switchAccount(non_crypto_account_loginid);\n\n              case 5:\n                if (this.current_location === 'deposit') {\n                  general_store.setIsDeposit(true);\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function doSwitch() {\n        return _doSwitch.apply(this, arguments);\n      }\n\n      return doSwitch;\n    }()\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.should_show = false;\n    }\n  }, {\n    key: \"continueRoute\",\n    value: function continueRoute() {\n      if (this.is_confirmed && this.last_location) {\n        this.root_store.common.routeTo(this.last_location);\n      }\n    }\n  }]);\n\n  return AccountPromptDialogStore;\n}();\n\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n;// CONCATENATED MODULE: ./constants/constants.js\nvar containers = {\n  account_transfer: 'account_transfer',\n  deposit: 'deposit',\n  payment_agent: 'payment_agent',\n  payment_agent_transfer: 'payment_agent_transfer',\n  withdraw: 'withdraw'\n};\nvar map_action = {\n  withdraw: 'payment_withdraw',\n  payment_agent: 'payment_agent_withdraw'\n};\nvar icon_payment_methods = {\n  Alipay: ['alipay'],\n  Bank: ['bank', 'bankdeposit', 'banks', 'banktransfer', 'bankwire', 'bankwiretransfer', 'localbankwire', 'localbank', 'localbanks', 'localbanktransfer'],\n  Bankbri: ['bri', 'bankbri'],\n  Bca: ['bca', 'grupbca'],\n  Bch: ['bch'],\n  Bni: ['bni'],\n  Bitcoin: ['bitcoin', 'btc'],\n  Card: ['card', 'cards', 'visa', 'mastercard'],\n  Cimbniaga: ['cimbniaga'],\n  Crypto: ['crypto', 'cryptos', 'cryptocurrencies', 'cryptocurrency', 'weacceptcrypto'],\n  Dai: ['dai'],\n  Diamondbank: ['diamondbank'],\n  Eth: ['eth', 'ethd', 'ethereum'],\n  Ewallet: ['ewallet', 'ewallets', 'ewalletpayment', 'skrill'],\n  Firstbank: ['firstbank'],\n  Gtbank: ['gtbank'],\n  Icbc: ['icbc'],\n  Libertyreserve: ['libertyreserve'],\n  LiteCoin: ['ltc', 'litecoin'],\n  Mandiri: ['mandiri'],\n  Mandirisyariah: ['mandirisyariah'],\n  Moneygram: ['moneygram'],\n  Paypal: ['paypal'],\n  PerfectMoney: ['perfectmoneyandwebmoney', 'perfectmoney'],\n  Permatabank: ['permatabank'],\n  Tether: ['tether'],\n  Verve: ['verve'],\n  WebMoney: ['perfectmoneyandwebmoney', 'webmoney'],\n  Wechatpay: ['wechatpay'],\n  Zenithbank: ['zenithbank']\n};\nvar payment_methods = {\n  AbokiFX: ['AbokiFX', 'A BOKI FX'],\n  'ABSA Bank': ['Absa', 'ABSA', 'ABSA Bank', 'ABSABank', 'ABSABANK', 'Absabank', 'ABSA Bank Transfer', 'ABSA Cash Send', 'Absa fund transfer and orange money services', 'ABSA GHANA LIMITED', 'Direct deposit FNB and ABSA'],\n  'Access bank': ['Access bank', 'Access Bank', 'Accessbank', 'AccessBank', 'ACCESS BANK', 'Acess Bank'],\n  'Access forex': ['Access Forex', 'ACCESS FOREX', 'Access forex'],\n  'Afriland First Bank': ['Afriland First Bank', 'AFRILAND FIRST BANK'],\n  'Airtel Mobile money': ['Airtel Mobile money', 'airtel', 'Airtel', 'AIRTEL MOBILE MONEY', 'airtel money', 'Airtel money', 'Airtelmoney', 'Airtel Money', 'AirtelMoney', 'AIRTELMONEY', 'AIRTEL MONEY', 'Airtel Tigo', 'AirtelTigo cash', 'all mobile money'],\n  Airtm: ['airtm', 'Airtm'],\n  AlfalahBank: ['AlfalahBank', 'bank alfalfa', 'Alflah Bank'],\n  'All banks': ['All banks', 'All local banks', 'All local Banks', 'All local banks ZWL', 'All Local Bank transfer', 'bank', 'Bank', 'BANK', 'banks', 'Banks', 'local banks', 'Local banks', 'Local Banks', 'Pakistani Local All banks', 'Local Indian banks', 'LocalBanks'],\n  Astropay: ['astropay', 'Astropay', 'Astro Pay'],\n  'ATM transfer': ['ATM', 'ATMDeposits', 'ATMdeposit', 'ATM transfer', 'ATM Transfer', 'BanktransferATM', 'FNB ATM deposit'],\n  AzamPesa: ['AzamPesa', 'Azampesa'],\n  'Banco Bradesco': ['Banco Bradesco', 'Bradesco'],\n  'Banco de Pichincha': ['Banco de Pichincha', 'BANCO DE PICHINCHA', 'Pichincha'],\n  'Banco de Produbanco': ['Banco de Produbanco', 'BANCO DE PRODUBANCO'],\n  'Banco del Pacifico': ['Banco del Pacifico', 'BANCO DE PACIFICO', 'Pacifico'],\n  'Banco Internacional': ['Banco Internacional', 'BANCO INTERNACIONAL'],\n  'Banco Internacional de Moçambique (BIM)': ['Banco Internacional de Moçambique (BIM)', 'Bim', 'Transferencia Bim'],\n  'Bancobu Bank eNoti': ['Bancobu Bank eNoti', 'Bancobu e-noti'],\n  'Bank AL Habib': ['Bank AL Habib', 'bank al habib', 'Bank Alhabib'],\n  'Bank Negara Indonesia (BNI)': ['Bank Negara Indonesia (BNI)', 'BNI', 'BankBNI'],\n  'Bank Of Ceylon (BOC)': ['Bank Of Ceylon (BOC)', 'Bankofceylon', 'Boc Peoples Bank'],\n  'Bank Rakyat Indonesia (BRI)': ['Bank Rakyat Indonesia (BRI)', 'BankBri', 'BankBRI', 'BRI', 'BRI dan Ewallet'],\n  'Bank transfer': ['All Local Bank payment Accept', 'All local bank payments', 'All Local Bank transfer', 'bank', 'Bank', 'BANK', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Bank and E-wallet', 'bank deposit', 'Bank deposit', 'Bankdeposit', 'Bank Deposit', 'Bank deposits', 'bank ewallet', 'bank payment', 'banks', 'Banks', 'Bank to Bank account transfer', 'bank transfer', 'Bank transfer', 'Banktransfer', 'Bank Transfer', 'BankTransfer', 'BANK TRANSFER', 'BANKTRANSFER', 'bank transfer and all form of E-payments', 'Bank Transfer and all Forms of E-payments', 'BanktransferATM', 'bank transfers', 'Bank transfers', 'Bank Transfers', 'Ban transfer', 'Depositos direto em conta', 'Direct deposit FNB and ABSA', 'E-wallet Bank transfer', 'Internet Banking', 'Internet transfer', 'Internet Transfer', 'LocalBank', 'local banks', 'Local banks', 'Local Banks', 'Local bank transfer', 'Local bank Transfers', 'Local deposits', 'Local deposit', 'local deposits', 'BANKTRANSFERS', 'Bank Deposits', 'Bank deposit and transfer', 'Bank transfer and e-wallets', 'BankDeposit', 'Fiat', 'LOCALBANK', 'OnlineTransfer', 'ZWbanktransfers', 'localbanktransfer', 'Bank transfer Bank wire'],\n  'Bank wire': ['bank', 'Bank', 'BANK', 'bank payment', 'banks', 'Banks', 'bank wire', 'bankwire', 'Bank wire', 'Bankwire', 'Bank Wire', 'BankWire', 'BANKWIRE', 'Bank wire and e-wallets', 'Bank wire and E-wallets', 'Bank wires', 'Bankwires', 'bank wires and e-wallet', 'Bank wires and e-wallets', 'BankWire transfer', 'E-wallets and bank wires', 'local bank wire', 'LocalBankWire', 'LocalBankwire', 'Wire Bank Transfer', 'WIRE TRANSFER', 'Bank Wire transfer', 'Fiat', 'OnlineTransfer', 'Bank transfer Bank wire'],\n  BankABC: ['BankABC', 'BANCABC BANK'],\n  'Bank BTN': ['Bank BTN', 'BTN'],\n  'Bank of the Philippine Islands (BPI)': ['Bank of the Philippine Islands (BPI)', 'BPI'],\n  'BCA bank': ['BCA bank', 'BCA', 'BankBCA', 'bca'],\n  'BDO Unibank': ['BDO Unibank', 'BDO'],\n  BHIM: ['BHIM', 'Bhim', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe'],\n  'BMCE Bank': ['BMCE Bank', 'Bmce Bank'],\n  'CABS Bank': ['CABS Bank', 'Cabs bank', 'CABS transfer'],\n  Card: ['Card', 'card', 'cards', 'Cards', 'Credit card', 'Debit Card', 'Mastercard', 'MasterCard', 'visa', 'Visa', 'VISA', 'Visa card', 'Bank cards', 'Carteiras Electronicas', 'Fiat', 'Master card'],\n  Cash: ['cash', 'Cash', 'Cash deposit', 'Cash deposits', 'Cash in USD or Local', 'electronic transfers and cash deposits', 'FNB cash deposit', 'physical local and foreign bank notes', 'USD', 'USD cash', 'Cash Deposit', 'Fiat', 'INR', 'USDCash', 'Zwcash'],\n  'Cash send ABSA bank': ['Cash send ABSA bank', 'ABSA Cash Send', 'Cashsend', 'Cash Send', 'CashSend', 'cash send Absa', 'Cash send Absa bank'],\n  'Chipper Cash': ['Chipper Cash', 'Chipper', 'Chippercash', 'Chipperchash'],\n  'CIH Bank': ['CIH Bank', 'Cih Bank'],\n  CIMB: ['CIMB', 'CIMBNIAGA', 'NIAGA'],\n  'City Hopper': ['City hopper', 'City Hopper'],\n  'Co-operative Bank of Kenya': ['Co-operative Bank of Kenya', 'cooperativebank'],\n  'Commercial Bank': ['Commercial Bank', 'Commercialbank'],\n  'CRDB Bank': ['CRDB Bank', 'CRDBBANK'],\n  Crypto: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'bitcoin', 'Bitcoin', 'BITCOIN', 'bitcoins', 'Bitcoins', 'btc', 'BTC', 'btc smega', 'Cripto', 'crypto', 'Crypto', 'Cyptocurrency', 'cryptocurrencies', 'Cryptocurrencies', 'Crypto Currencies', 'CRYPTOCURRENCIES', 'cryptocurrency', 'Cryptocurrency', 'CRYPTOCURRENCY', 'Cryptos', 'ETH', 'eUSDT', 'EUSDT', 'LTC', 'Tether', 'TRON', 'USDC', 'USDT', 'UST', 'We accept Crypto', 'BCH', 'Btc', 'Criptomoedas', 'Crypto Payment', 'Crypto transfer', 'CryptoTransfer', 'E-Wallets and Crypto', 'E-wallets and Crypto', 'Ethereum', 'Etherium', 'Litecoin', 'Skrill Neteller Crypto', 'SkrillCrypto', 'Tether ERC20', 'Tether Omni', 'Thether', 'Usdt', 'cryptos', 'ethereum', 'litecoin'],\n  'Diamond Bank': ['Diamond bank', 'Diamond Bank', 'DiamondBank'],\n  'E-Mola': ['E-Mola', 'E-mola', 'Emola'],\n  'E-money': ['E-money', 'e money'],\n  'E-payment': ['E-payment', 'all form of E-payments', 'All form of E-payments', 'all forms of E-payments', 'and all other forms of Epayment', 'bank transfer and all form of E-payments', 'Bank Transfer and all Forms of E-payments', 'E-payments', 'Epayments', 'All forms of E-Payments', 'DigitalPayment', 'OnlineTransfer', 'all forms of E-Payment'],\n  'E-transfer': ['E-transfer', 'electronic transfers and cash deposits', 'E-Transfers', 'OnlineTransfer'],\n  'E-wallet': ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Bank and E-wallet', 'bank ewallet', 'Bank wire and e-wallets', 'Bank wire and E-wallets', 'bank wires and e-wallet', 'Bank wires and e-wallets', 'Digital Wallets', 'electronic wallets', 'e-wallers', 'e-wallet', 'ewallet', 'eWallet', 'E-wallet', 'Ewallet', 'EWALLET', 'E-wallet Bank transfer', 'E wallet FNB', 'E-wallet payment', 'Ewallet payment', 'e-wallets', 'ewallets', 'e-Wallets', 'e-WALLETS', 'E- wallets', 'E-wallets', 'Ewallets', 'E-Wallets', 'E-wallets and bank wires', 'fnb ewallet', 'MY WALLET', 'wallet', 'Bank transfer and e-wallets', 'E-Wallets and Crypto', 'E-wallets and Crypto', 'E-Wallet', 'EWallets', 'Fiat', 'OnlineTransfer', 'ewalllets', 'ewalltets', 'local bank wallets and Orange money'],\n  Easypaisa: ['easypaisa', 'Easy paisa', 'Easypaisa', 'Easy Paisa', 'EasyPaisaTransfer'],\n  Ecobank: ['Ecobank', 'Eco Bank', 'ECO BANK', 'Eco bank Transfers'],\n  EcoCash: ['Eco cash', 'Ecocash', 'EcoCash', 'ECOCASH', 'Ecocash FCA', 'Ecocash method', 'ECOCASH WALLET', 'Ecocash ZWL', 'EcocashMobileMoney', 'Zwecocash'],\n  'Electronic Funds Transfer (EFT)': ['Electronic Funds Transfer (EFT)', 'EFT'],\n  'Equity Bank': ['Equity bank', 'Equity Bank', 'equitybankmoneytransfer'],\n  'EU Mobile Money': ['EU Mobile Money', 'all mobile money', 'EU MONEY'],\n  EzyPesa: ['EzyPesa', 'Ezypesa', 'Ezzy pesa', 'Ezzy Pesa', 'EzzyPesa'],\n  FasaPay: ['fasapay', 'Fasa pay', 'FasaPay'],\n  'Fast Payment': ['Fast payment', 'Fast Payment'],\n  'Faysal Bank': ['Faysal Bank', 'FaysalBank'],\n  'FBC Bank': ['FBC Bank', 'FBC BANK'],\n  'Fidelity Bank': ['Fidelity Bank', 'fidelitybank'],\n  Finbank: ['Finbank', 'Fin bank', 'FinBank'],\n  'First Bank of Nigeria': ['First Bank of Nigeria', 'First bank', 'First Bank', 'FirstBank', 'FIRST BANK', 'Firstbank'],\n  'First City Monument Bank (FCMB)': ['First City Monument Bank (FCMB)', 'FCMB', 'fcmb'],\n  'First MicroFinanceBank (FMFB)': ['First MicroFinanceBank (FMFB)', 'FMFB'],\n  'First National Bank (FNB)': ['First National Bank (FNB)', 'Direct deposit FNB and ABSA', 'E wallet FNB', 'First National Bank', 'fnb', 'FNB', 'FNB ATM deposit', 'Fnbbank', 'FNB Bank', 'FNBB Bank Transfer', 'FNB cash deposit', 'fnb ewallet', 'FNB First National Bank', 'FNB pay2cell', 'FNB pay to cell', 'FNB pay to sell', 'Pay to cell FNB', 'FNB bank transfer', 'FNBB', 'FNBBank', 'FirNationalBank', 'First National Bank of Botswana', 'Firstnationalbank', 'Fnb'],\n  Gmoney: ['Gmoney', 'GMONEY'],\n  'Google Pay': ['Google Pay', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Google pay', 'gpay', 'Gpay', 'GPay'],\n  'Grup BCA': ['Grup BCA', 'GrupBCA'],\n  'GT bank': ['GT bank', 'Gtb', 'GTB', 'Gt Bank', 'GT Bank', 'GTBank', 'GT BANK', 'Gtbank', 'Guarantee Trust Bank', 'GuarantyTrustBank'],\n  Halopesa: ['halopesa', 'Halo pesa', 'Halopesa', 'Halo Pesa', 'HaloPesa', 'HALOPESA'],\n  'Hatton National Bank': ['Hatton National Bank', 'HattonNationalBank'],\n  HBL: ['HBL', 'HBLMFB', 'KONNET HBL'],\n  Help2Pay: ['Help2Pay', 'help2pay'],\n  'HNB Bank': ['HNB Bank', 'HNB'],\n  'IMPS Transfer': ['imps', 'Imps', 'IMPS', 'IMPS Transfer'],\n  'ING Bank': ['ING Bank', 'ING'],\n  Innbucks: ['Innbucks', 'INNBUCKS'],\n  'Instant Money': ['Instant Money', 'InstantMoney', 'Instant money stambic bank', 'Instant money stanbic', 'Instant money'],\n  'Inter Bank Fund Transfer': ['Inter Bank Fund Transfer', 'InterBankfundtransfer', 'Interbank Transfer'],\n  'Itau Bank': ['Itau Bank', 'Itau'],\n  IZI: ['IZI', 'Izzy'],\n  JazzCash: ['JazzCash', 'jazzcash', 'Jazz cash', 'Jazzcash', 'Jazz-Cash', 'JazzCashTransfer'],\n  JENIUS: ['JENIUS', 'Jenius'],\n  Jeton: ['Jeton', 'jeton', 'JetonWallet'],\n  'Key Stone Bank': ['Key Stone Bank', 'Keystone'],\n  'Kuda Bank': ['Kuda Bank', 'KUDA BANK', 'Kuda MFB', 'KudaMFB', 'KUDA MICROFINANCE BANK 2014563937', 'Kuda Microfinance', 'KUDA'],\n  'Luno Wallet': ['Luno Wallet', 'Luno', 'Luno crypto wallet', 'Luno e-wallet', 'Luno ewallet', 'luno'],\n  'Mandiri Bank': ['Mandiri Bank', 'Mandiri', 'MANDIRI', 'MandiriSyariah', 'BankMandiri'],\n  'Meezan Bank': ['Meezan Bank', 'MeezanBank'],\n  'Millenium Bim Visa': ['Millenium Bim Visa', 'Millenium Bim'],\n  MIX: ['mix', 'Mix', 'MIX', 'Mixed'],\n  'Mobile money': ['all mobile money', 'mobile banking', 'Mobile banking', 'Mobile money', 'Mobile Money', 'MobileMoney', 'Mobile money MTN', 'Mobile Money transfer', 'MOBILE MONEY TRANSFER', 'Mobile money transfers', 'Mobilemoneyoption', 'OnlineTransfer'],\n  'Mojo Mula': ['Mojo money', 'Mojo Mula', 'MOJO MULA', 'MoMo pay', 'Mojo Moolah'],\n  MoMo: ['MoMo', 'MOMO', 'MoMo pay', 'MTN MOMO', 'MTNMOMO'],\n  MoneyGram: ['Moneygram', 'Money Gram', 'MoneyGram', 'Money grame'],\n  'M-PESA': ['AbesafaricomMpesa Transfers', 'mpesa', 'M pesa', 'M-pesa', 'Mpesa', 'M Pesa', 'M-Pesa', 'MPesa', 'M PESA', 'M-PESA', 'MPESA', 'M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'safaricom mpesa', 'MPESA 0710393947 Albert Kyalo', 'VodacomMpesa'],\n  'MTN MOMO': ['all mobile money', 'Mobile money MTN', 'MoMo', 'MOMO', 'MTN', 'MTN mobile money', 'MTN Mobile money', 'MTN Mobile Money', 'MTN MOBILE MONEY', 'MTNMOBILEMONEY', 'MTN MOMO', 'MTNMOMO', 'MTN MONEY'],\n  'Mukuru money transfers': ['Mukuru', 'Mukuru money transfers', 'MukuruMoneyTransfer', 'USDMukurutransfer'],\n  'MyZaka Mascom Money': ['MyZaka Mascom Money', 'mascom', 'mascom myZaka', 'Mascom MyZaka', 'myzaka', 'My zaka', 'Myzaka', 'MyZaka', 'My zaka mascom money', 'my Zaka', 'myzaaka'],\n  Neft: ['neft', 'Neft', 'NEFT'],\n  Nequi: ['Nequi', 'Nequi o Daviplata al 300 6839026'],\n  Neteller: ['neTeller', 'Neteller', 'NETELLER', 'NETelle', 'Skrill Neteller Crypto', 'neteller', 'netteller'],\n  'Nigeria local bank': ['Nigeria Local', 'Nigeria local bank', 'NIGERIA LOCAL BANK'],\n  'NMB Bank': ['NMB Bank', 'NATIONALMICROFINANCEBANK', 'Nmb bank'],\n  'One Money': ['OM', 'Onemoney', 'One Money', 'One money service', 'OneMoney', 'OneMoneyMobileMoney'],\n  Opay: ['Opay', 'OPAY'],\n  'Orange Money Transfer': ['Absa fund transfer and orange money services', 'Orange Cameroon', 'orange money', 'orangemoney', 'Orange money', 'Orangemoney', 'Orange Money', 'OrangeMoney', 'ORANGE MONEY', 'Orange Money Transfer', 'local bank wallets and Orange money'],\n  PalmPay: ['PalmPay', 'PALMPAY'],\n  'Pay safe Card': ['paysafecard', 'Pay safe Card'],\n  Pay2Cell: ['FNB pay2cell', 'FNB pay to cell', 'FNB pay to sell', 'Pay2cell', 'Pay2Cell', 'PAY2CELL', 'pay to cell', 'Pay to cell', 'Paytocell', 'Pay to Cell', 'Pay to cell FNB', 'PayToCell', 'pay2cell'],\n  'Payment Checks': ['Payment checks', 'Payment Checks'],\n  PayPal: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Paypal', 'PayPal', 'PAYPAL', 'paypal'],\n  PayTM: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Paytm', 'PayTM'],\n  'Perfect Money': ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'perfect money', 'perfectmoney', 'Perfect money', 'Perfectmoney', 'Perfect Money', 'PerfectMoney', 'PERFECT MONEY', 'Perfect Money and Webmoney', 'PM', 'PERFECTMONEY', 'PERFECT'],\n  'Permata Bank': ['Permata Bank', 'PermataBank', 'PERMATA'],\n  PhonePhe: ['PhonePhe', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Phonepay', 'phonepe', 'Phonepe', 'PhonePe', 'Phone pay', 'PhonePay'],\n  Pix: ['Pix', 'PIX'],\n  'Polaris Bank': ['Polaris Bank', 'Polaris'],\n  'Ponto 24': ['Conta movel', 'Conta Movel', 'ContamovelBCI', 'Ponto 24', 'Ponto24'],\n  'Pos deposit': ['Pos', 'POS', 'Pos deposit'],\n  'Postal transfer': ['Postal transfer', 'Egyptian postal transfers'],\n  RIA: ['Ria', 'RIA'],\n  'RTGS Transfers': ['RTGS Transfers', 'rtgs', 'RTGS', 'Rtgs bank transfer', 'RTGS transfers', 'Rtgs'],\n  Safaricom: ['Safaricom', 'AbesafaricomMpesa Transfers', 'AbeSafaricomMpesaTransfers', 'safaricom mpesa'],\n  'Sama Money': ['Sama Money', 'Sama money'],\n  ShopeePay: ['ShopeePay', 'SHOPEEPAY'],\n  Skrill: ['Skrill', 'Skill', 'Skril', 'skrill', 'SKRILL', 'skrillpayments', 'Skrll', 'SkrillCrypto', 'Skrill Neteller Crypto'],\n  Smega: ['btc smega', 'smega', 'Smega'],\n  'Standard Bank Namibia': ['Standard Bank Namibia', 'Standard Bank', 'StandardBank'],\n  'Stanbic Bank': ['Instant money stambic bank', 'Instant money stanbic', 'stanbic', 'Stanbic', 'Stanbic Bank', 'StanbicBank', 'Stanbic Bank Transfer', 'Stanbic Money Transfer', 'Standbic', 'Stanbic IBTC', 'Stanbic bank'],\n  'Standard Charted Bank': ['STANCHART', 'Standard Charted Bank', 'Standard chartered', 'Standard chartered bank', 'Standard Chartered Bank Transfer', 'Standard Chatterd Bank'],\n  'Steward remit': ['Steward remit', 'Steward Remmitt'],\n  'T-pesa': ['M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'T-pesa', 'Tpesa', 'T PESA', 'TTCLpesa'],\n  'Tigo Cash': ['Tigo', 'Tigo Cash', 'AirtelTigo cash'],\n  'Tigo Mobile Money': ['Tigo Mobile Money', 'Airtel Tigo', 'all mobile money', 'Tigo', 'TIGO MOBILE MONEY', 'TIGOMOBILEMONEY', 'AirtelTigo cash'],\n  'Tigo Pesa': ['M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'Tigo', 'tigopesa', 'Tigo pesa', 'Tigopesa', 'Tigo Pesa', 'TigoPesa', 'TIGO PESA', 'TTCLpesa', 'TIGOPESA'],\n  'Transferencia bancaria': ['Transferencia bancaria', 'Transferencia Eletronica TED', 'Transferencias bancarias', 'Ted', 'Transferencia Bancaria'],\n  'UBA Bank': ['UBA', 'UBA Bank', 'UBA BANK'],\n  'Union Bank': ['Union Bank', 'Unionbank', 'Union'],\n  'United Bank Limited (UBL)': ['United Bank Limited (UBL)', 'UBL Bank'],\n  UPI: ['All UPI Transfer', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'upi', 'UPI', 'UPI transfer', 'AmazonUPI', 'PaytmUPI', 'Upi'],\n  'USSD code transfer': ['USSD code transfer', 'Or USSD transfer from all Nigeria banks', 'USSD Code', 'USSD CODE', 'Ussd code Transfer from all Nigerian banks', 'Ussd transfer', 'USSD transfer', 'USSD Transfer', 'ussd transfer'],\n  Vodacom: ['Vodacom', 'VodacomMpesa'],\n  'Vodafone Cash': ['Vodafon Cash Methods', 'Vodafone cash', 'Vodafone Cash', 'VODAFONE CASH', 'VODAFONECASH'],\n  Webmoney: ['Perfect Money and Webmoney', 'Webmoney', 'WebMoney', 'Web Money', 'Web money'],\n  'WeChat Pay': ['WeChat Pay', 'WeChatPay'],\n  'Wema Bank': ['Wema Bank', 'Wema'],\n  WesternUnion: ['Western union', 'Western Union', 'WesternUnion', 'westernunion'],\n  Wise: ['Wise', 'transferwise'],\n  'World Remit': ['World remit', 'World Remit', 'CoinbaseworldRemit'],\n  'Zanaco bank': ['ZANACO', 'Zanaco bank'],\n  'Zenith bank': ['Zenith bank', 'Zenithbank', 'Zenith Bank', 'ZenithBank', 'ZENITH BANK', 'Zenith', 'zenithbank'],\n  Zipit: ['Zipit', 'ZIPIT', 'ZIPIT bank transfers']\n};\n/* harmony default export */ const constants = ({\n  containers: containers,\n  map_action: map_action,\n  icon_payment_methods: icon_payment_methods,\n  payment_methods: payment_methods\n});\n;// CONCATENATED MODULE: ./stores/error-store.ts\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction error_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction error_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction error_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) error_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) error_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar ErrorStore = /*#__PURE__*/function () {\n  function ErrorStore() {\n    error_store_classCallCheck(this, ErrorStore);\n\n    this.message = '';\n    this.code = '';\n    this.fields = '';\n    this.is_show_full_page = false;\n    this.onClickButton = null;\n    this.is_ask_uk_funds_protection = false;\n    this.is_self_exclusion_max_turnover_set = false;\n    this.is_ask_authentication = false;\n    this.is_ask_financial_risk_approval = false;\n    (0,external_mobx_.makeObservable)(this, {\n      message: external_mobx_.observable,\n      code: external_mobx_.observable,\n      fields: external_mobx_.observable,\n      is_show_full_page: external_mobx_.observable,\n      onClickButton: external_mobx_.observable,\n      is_ask_uk_funds_protection: external_mobx_.observable,\n      is_self_exclusion_max_turnover_set: external_mobx_.observable,\n      is_ask_authentication: external_mobx_.observable,\n      is_ask_financial_risk_approval: external_mobx_.observable,\n      setErrorMessage: external_mobx_.action.bound,\n      handleCashierError: external_mobx_.action.bound,\n      setMessage: external_mobx_.action.bound,\n      setIsAskUkFundsProtection: external_mobx_.action.bound,\n      setIsSelfExclusionMaxTurnoverSet: external_mobx_.action.bound,\n      setIsAskAuthentication: external_mobx_.action.bound,\n      setIsAskFinancialRiskApproval: external_mobx_.action.bound\n    });\n  }\n\n  error_store_createClass(ErrorStore, [{\n    key: \"setErrorMessage\",\n    value: function setErrorMessage(error, onClickButton, is_show_full_page) {\n      var _error$details;\n\n      // for errors that need to show a button, reset the form\n      var error_object = _objectSpread({\n        onClickButton: onClickButton,\n        code: error.code,\n        message: error.message,\n        is_show_full_page: is_show_full_page || /InvalidToken|WrongResponse/.test(error.code)\n      }, (0,shared_.getPropertyValue)(error, ['details', 'fields']) && {\n        fields: (_error$details = error.details) === null || _error$details === void 0 ? void 0 : _error$details.fields\n      });\n\n      this.onClickButton = error_object.onClickButton;\n      this.code = error_object.code;\n      this.message = error_object.message;\n      this.is_show_full_page = error_object.is_show_full_page;\n      this.fields = error_object.fields;\n      this.is_ask_uk_funds_protection = error_object === null || error_object === void 0 ? void 0 : error_object.is_ask_uk_funds_protection;\n      this.is_self_exclusion_max_turnover_set = error_object === null || error_object === void 0 ? void 0 : error_object.is_self_exclusion_max_turnover_set;\n      this.is_ask_authentication = error_object === null || error_object === void 0 ? void 0 : error_object.is_ask_authentication;\n      this.is_ask_financial_risk_approval = error_object === null || error_object === void 0 ? void 0 : error_object.is_ask_financial_risk_approval;\n    }\n  }, {\n    key: \"handleCashierError\",\n    value: function handleCashierError(error) {\n      switch (error.code) {\n        case 'ASK_TNC_APPROVAL':\n          this.setErrorMessage(error, null, true);\n          break;\n\n        case 'ASK_FIX_DETAILS':\n          this.setErrorMessage(error, null, true);\n          break;\n\n        case 'ASK_UK_FUNDS_PROTECTION':\n          this.setIsAskUkFundsProtection(true);\n          break;\n\n        case 'ASK_SELF_EXCLUSION_MAX_TURNOVER_SET':\n          this.setIsSelfExclusionMaxTurnoverSet(true);\n          break;\n\n        case 'ASK_AUTHENTICATE':\n        case 'ASK_AGE_VERIFICATION':\n          this.setIsAskAuthentication(true);\n          break;\n\n        case 'ASK_FINANCIAL_RISK_APPROVAL':\n          this.setIsAskFinancialRiskApproval(true);\n          break;\n\n        default:\n          this.setErrorMessage(error);\n          this.setIsAskUkFundsProtection(false);\n          this.setIsSelfExclusionMaxTurnoverSet(false);\n          this.setIsAskAuthentication(false);\n          this.setIsAskFinancialRiskApproval(false);\n      }\n    }\n  }, {\n    key: \"setMessage\",\n    value: function setMessage(value) {\n      this.message = value;\n    }\n  }, {\n    key: \"setIsAskUkFundsProtection\",\n    value: function setIsAskUkFundsProtection(value) {\n      this.is_ask_uk_funds_protection = value;\n    }\n  }, {\n    key: \"setIsSelfExclusionMaxTurnoverSet\",\n    value: function setIsSelfExclusionMaxTurnoverSet(value) {\n      this.is_self_exclusion_max_turnover_set = value;\n    }\n  }, {\n    key: \"setIsAskAuthentication\",\n    value: function setIsAskAuthentication(value) {\n      this.is_ask_authentication = value;\n    }\n  }, {\n    key: \"setIsAskFinancialRiskApproval\",\n    value: function setIsAskFinancialRiskApproval(value) {\n      this.is_ask_financial_risk_approval = value;\n    }\n  }]);\n\n  return ErrorStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/account-transfer-store.js\nfunction account_transfer_store_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction account_transfer_store_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? account_transfer_store_ownKeys(Object(source), !0).forEach(function (key) { account_transfer_store_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : account_transfer_store_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction account_transfer_store_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction account_transfer_store_slicedToArray(arr, i) { return account_transfer_store_arrayWithHoles(arr) || account_transfer_store_iterableToArrayLimit(arr, i) || account_transfer_store_unsupportedIterableToArray(arr, i) || account_transfer_store_nonIterableRest(); }\n\nfunction account_transfer_store_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction account_transfer_store_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return account_transfer_store_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return account_transfer_store_arrayLikeToArray(o, minLen); }\n\nfunction account_transfer_store_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction account_transfer_store_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction account_transfer_store_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction account_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction account_transfer_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { account_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { account_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction account_transfer_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction account_transfer_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction account_transfer_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) account_transfer_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) account_transfer_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\nvar hasTransferNotAllowedLoginid = function hasTransferNotAllowedLoginid(loginid) {\n  return loginid.startsWith('MX');\n};\n\nvar getSelectedError = function getSelectedError(selected_value, is_from_account) {\n  if (is_from_account) {\n    return /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Transfer from {{selected_value}} is not allowed, Please choose another account from dropdown\",\n      values: {\n        selected_value: selected_value\n      }\n    });\n  }\n\n  return /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Transfer to {{selected_value}} is not allowed, Please choose another account from dropdown\",\n    values: {\n      selected_value: selected_value\n    }\n  });\n};\n\nvar AccountTransferStore = /*#__PURE__*/function () {\n  function AccountTransferStore(_ref) {\n    var _this = this;\n\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    account_transfer_store_classCallCheck(this, AccountTransferStore);\n\n    this.accounts_list = [];\n    this.container = constants.containers.account_transfer;\n    this.error = new ErrorStore();\n    this.has_no_account = false;\n    this.has_no_accounts_balance = false;\n    this.is_transfer_confirm = false;\n    this.is_transfer_successful = false;\n    this.is_mt5_transfer_in_progress = false;\n    this.minimum_fee = null;\n    this.receipt = {};\n    this.selected_from = {};\n    this.selected_to = {};\n    this.account_transfer_amount = '';\n    this.transfer_fee = null;\n    this.transfer_limit = {};\n\n    this.requestTransferBetweenAccounts = /*#__PURE__*/function () {\n      var _ref3 = account_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n        var amount, _this$root_store, client, modules, common, setLoading, is_from_derivgo, is_logged_in, responseMt5LoginList, responseTradingPlatformAccountsList, setAccountStatus, setBalanceOtherAccounts, is_mt_transfer, currency, transfer_between_accounts, account_status_response;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                amount = _ref2.amount;\n                _this$root_store = _this.root_store, client = _this$root_store.client, modules = _this$root_store.modules, common = _this$root_store.common;\n                setLoading = modules.cashier.general_store.setLoading;\n                is_from_derivgo = common.is_from_derivgo;\n                is_logged_in = client.is_logged_in, responseMt5LoginList = client.responseMt5LoginList, responseTradingPlatformAccountsList = client.responseTradingPlatformAccountsList, setAccountStatus = client.setAccountStatus, setBalanceOtherAccounts = client.setBalanceOtherAccounts;\n\n                if (is_logged_in) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 7:\n                setLoading(true);\n\n                _this.error.setErrorMessage('');\n\n                is_mt_transfer = _this.selected_from.is_mt || _this.selected_to.is_mt;\n                if (is_mt_transfer) _this.setIsMT5TransferInProgress(true);\n                currency = _this.selected_from.currency;\n                _context.next = 14;\n                return _this.WS.authorized.transferBetweenAccounts(_this.selected_from.value, _this.selected_to.value, currency, amount);\n\n              case 14:\n                transfer_between_accounts = _context.sent;\n\n                if (!is_from_derivgo && transfer_between_accounts && Array.isArray(transfer_between_accounts.accounts)) {\n                  transfer_between_accounts.accounts = transfer_between_accounts.accounts.filter(function (account) {\n                    return account.account_type !== shared_.CFD_PLATFORMS.DERIVEZ;\n                  });\n                }\n\n                if (is_mt_transfer) _this.setIsMT5TransferInProgress(false);\n\n                if (!transfer_between_accounts.error) {\n                  _context.next = 26;\n                  break;\n                }\n\n                if (!(transfer_between_accounts.error.code === 'Fiat2CryptoTransferOverLimit')) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 21;\n                return _this.WS.authorized.getAccountStatus();\n\n              case 21:\n                account_status_response = _context.sent;\n\n                if (!account_status_response.error) {\n                  setAccountStatus(account_status_response.get_account_status);\n                }\n\n              case 23:\n                _this.error.setErrorMessage(transfer_between_accounts.error);\n\n                _context.next = 30;\n                break;\n\n              case 26:\n                _this.setReceiptTransfer({\n                  amount: (0,shared_.formatMoney)(currency, amount, true)\n                });\n\n                transfer_between_accounts.accounts.forEach(function (account) {\n                  _this.setBalanceByLoginId(account.loginid, account.balance);\n\n                  if (account.loginid === _this.selected_from.value) {\n                    _this.setBalanceSelectedFrom(account.balance);\n                  } else if (account.loginid === _this.selected_to.value) {\n                    _this.setBalanceSelectedTo(account.balance);\n                  } // if one of the accounts was mt5\n\n\n                  if (account.account_type === shared_.CFD_PLATFORMS.MT5) {\n                    Promise.all([_this.WS.mt5LoginList(), _this.WS.balanceAll()]).then(function (_ref4) {\n                      var _ref5 = account_transfer_store_slicedToArray(_ref4, 2),\n                          mt5_login_list_response = _ref5[0],\n                          balance_response = _ref5[1];\n\n                      // update the balance for account switcher by renewing the mt5_login_list response\n                      responseMt5LoginList(mt5_login_list_response); // update total balance since MT5 total only comes in non-stream balance call\n\n                      setBalanceOtherAccounts(balance_response.balance);\n                    });\n                  } // if one of the accounts was dxtrade\n\n\n                  if (account.account_type === shared_.CFD_PLATFORMS.DXTRADE) {\n                    Promise.all([_this.WS.tradingPlatformAccountsList(shared_.CFD_PLATFORMS.DXTRADE), _this.WS.balanceAll()]).then(function (_ref6) {\n                      var _ref7 = account_transfer_store_slicedToArray(_ref6, 2),\n                          dxtrade_login_list_response = _ref7[0],\n                          balance_response = _ref7[1];\n\n                      // update the balance for account switcher by renewing the dxtrade_login_list_response\n                      responseTradingPlatformAccountsList(dxtrade_login_list_response); // update total balance since Dxtrade total only comes in non-stream balance call\n\n                      setBalanceOtherAccounts(balance_response.balance);\n                    });\n                  }\n                });\n\n                _this.setAccountTransferAmount(null);\n\n                _this.setIsTransferConfirm(true);\n\n              case 30:\n                setLoading(false);\n                return _context.abrupt(\"return\", transfer_between_accounts);\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.resetAccountTransfer = /*#__PURE__*/account_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setIsTransferConfirm(false);\n\n              _this.setTransferLimit();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    (0,external_mobx_.makeObservable)(this, {\n      accounts_list: external_mobx_.observable,\n      container: external_mobx_.observable,\n      error: external_mobx_.observable,\n      has_no_account: external_mobx_.observable,\n      has_no_accounts_balance: external_mobx_.observable,\n      is_transfer_confirm: external_mobx_.observable,\n      is_transfer_successful: external_mobx_.observable,\n      is_mt5_transfer_in_progress: external_mobx_.observable,\n      minimum_fee: external_mobx_.observable,\n      receipt: external_mobx_.observable,\n      selected_from: external_mobx_.observable,\n      selected_to: external_mobx_.observable,\n      account_transfer_amount: external_mobx_.observable,\n      transfer_fee: external_mobx_.observable,\n      transfer_limit: external_mobx_.observable,\n      is_account_transfer_visible: external_mobx_.computed,\n      is_transfer_locked: external_mobx_.computed,\n      setBalanceByLoginId: external_mobx_.action.bound,\n      setBalanceSelectedFrom: external_mobx_.action.bound,\n      setBalanceSelectedTo: external_mobx_.action.bound,\n      onMountAccountTransfer: external_mobx_.action.bound,\n      setHasNoAccountsBalance: external_mobx_.action.bound,\n      setHasNoAccount: external_mobx_.action.bound,\n      setTransferFee: external_mobx_.action.bound,\n      setMinimumFee: external_mobx_.action.bound,\n      setTransferLimit: external_mobx_.action.bound,\n      sortAccountsTransfer: external_mobx_.action.bound,\n      setSelectedFrom: external_mobx_.action.bound,\n      setSelectedTo: external_mobx_.action.bound,\n      setAccounts: external_mobx_.action.bound,\n      setIsTransferConfirm: external_mobx_.action.bound,\n      setAccountTransferAmount: external_mobx_.action.bound,\n      setIsTransferSuccessful: external_mobx_.action.bound,\n      setIsMT5TransferInProgress: external_mobx_.action.bound,\n      setReceiptTransfer: external_mobx_.action.bound,\n      onChangeTransferFrom: external_mobx_.action.bound,\n      onChangeTransferTo: external_mobx_.action.bound,\n      resetAccountTransfer: external_mobx_.action.bound,\n      setTransferPercentageSelectorResult: external_mobx_.action.bound,\n      validateTransferFromAmount: external_mobx_.action.bound,\n      validateTransferToAmount: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  account_transfer_store_createClass(AccountTransferStore, [{\n    key: \"is_account_transfer_visible\",\n    get: function get() {\n      var _this$root_store$clie = this.root_store.client,\n          has_maltainvest_account = _this$root_store$clie.has_maltainvest_account,\n          landing_company_shortcode = _this$root_store$clie.landing_company_shortcode,\n          residence = _this$root_store$clie.residence; // cashier Transfer account tab is hidden for iom clients\n      // check for residence to hide the tab before creating a real money account\n\n      return residence !== 'im' && (landing_company_shortcode !== 'malta' || has_maltainvest_account);\n    }\n  }, {\n    key: \"is_transfer_locked\",\n    get: function get() {\n      var _this$root_store$clie2 = this.root_store.client,\n          is_financial_account = _this$root_store$clie2.is_financial_account,\n          is_financial_information_incomplete = _this$root_store$clie2.is_financial_information_incomplete,\n          is_trading_experience_incomplete = _this$root_store$clie2.is_trading_experience_incomplete,\n          account_status = _this$root_store$clie2.account_status;\n      if (!account_status.status) return false;\n      var need_financial_assessment = is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n      return need_financial_assessment && this.error.is_ask_financial_risk_approval;\n    }\n  }, {\n    key: \"setBalanceByLoginId\",\n    value: function setBalanceByLoginId(loginid, balance) {\n      this.accounts_list.find(function (acc) {\n        return loginid === acc.value;\n      }).balance = balance;\n    }\n  }, {\n    key: \"setBalanceSelectedFrom\",\n    value: function setBalanceSelectedFrom(balance) {\n      this.selected_from.balance = balance;\n    }\n  }, {\n    key: \"setBalanceSelectedTo\",\n    value: function setBalanceSelectedTo(balance) {\n      this.selected_to.balance = balance;\n    } // possible transfers:\n    // 1. fiat to crypto & vice versa\n    // 2. fiat to mt & vice versa\n    // 3. crypto to mt & vice versa\n\n  }, {\n    key: \"onMountAccountTransfer\",\n    value: function () {\n      var _onMountAccountTransfer = account_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this$root_store2, client, common, modules, _modules$cashier$gene, onMountCommon, setLoading, setOnRemount, active_accounts, is_logged_in, is_from_derivgo, has_updated_account_balance, _this$accounts_list, transfer_between_accounts, cfd_transfer_to_login_id, obj_values;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$root_store2 = this.root_store, client = _this$root_store2.client, common = _this$root_store2.common, modules = _this$root_store2.modules;\n                _modules$cashier$gene = modules.cashier.general_store, onMountCommon = _modules$cashier$gene.onMountCommon, setLoading = _modules$cashier$gene.setLoading, setOnRemount = _modules$cashier$gene.setOnRemount;\n                active_accounts = client.active_accounts, is_logged_in = client.is_logged_in;\n                is_from_derivgo = common.is_from_derivgo;\n                setLoading(true);\n                setOnRemount(this.onMountAccountTransfer);\n                _context3.next = 8;\n                return onMountCommon();\n\n              case 8:\n                _context3.next = 10;\n                return this.WS.wait('website_status');\n\n              case 10:\n                // check if some balance update has come in since the last mount\n                has_updated_account_balance = this.has_no_accounts_balance && Object.keys(active_accounts).find(function (account) {\n                  return !active_accounts[account].is_virtual && active_accounts[account].balance;\n                });\n\n                if (has_updated_account_balance) {\n                  this.setHasNoAccountsBalance(false);\n                } // various issues happen when loading from cache\n                // e.g. new account may have been created, transfer may have been done elsewhere, etc\n                // so on load of this page just call it again\n\n\n                if (!is_logged_in) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 15;\n                return this.WS.authorized.transferBetweenAccounts();\n\n              case 15:\n                transfer_between_accounts = _context3.sent;\n\n                if (!transfer_between_accounts.error) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                this.error.setErrorMessage(transfer_between_accounts.error, this.onMountAccountTransfer);\n                setLoading(false);\n                return _context3.abrupt(\"return\");\n\n              case 20:\n                if (!is_from_derivgo) {\n                  transfer_between_accounts.accounts = transfer_between_accounts.accounts.filter(function (account) {\n                    return account.account_type !== shared_.CFD_PLATFORMS.DERIVEZ;\n                  });\n                }\n\n                if (this.canDoAccountTransfer(transfer_between_accounts.accounts)) {\n                  _context3.next = 23;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 23:\n                _context3.next = 25;\n                return this.sortAccountsTransfer(transfer_between_accounts, is_from_derivgo);\n\n              case 25:\n                this.setTransferFee();\n                this.setMinimumFee();\n                this.setTransferLimit();\n\n                if (((_this$accounts_list = this.accounts_list) === null || _this$accounts_list === void 0 ? void 0 : _this$accounts_list.length) > 0) {\n                  cfd_transfer_to_login_id = sessionStorage.getItem('cfd_transfer_to_login_id');\n                  sessionStorage.removeItem('cfd_transfer_to_login_id');\n                  obj_values = this.accounts_list.find(function (account) {\n                    return account.value === cfd_transfer_to_login_id;\n                  });\n\n                  if (obj_values) {\n                    if (hasTransferNotAllowedLoginid(obj_values.value)) {\n                      // check if selected to is not allowed account\n                      obj_values.error = getSelectedError(obj_values.value);\n                    }\n\n                    this.setSelectedTo(obj_values);\n                  }\n                }\n\n              case 29:\n                setLoading(false);\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onMountAccountTransfer() {\n        return _onMountAccountTransfer.apply(this, arguments);\n      }\n\n      return onMountAccountTransfer;\n    }()\n  }, {\n    key: \"canDoAccountTransfer\",\n    value: function canDoAccountTransfer(accounts) {\n      var can_transfer = true; // should have at least one account with balance\n\n      if (!accounts.find(function (account) {\n        return +account.balance > 0;\n      })) {\n        can_transfer = false;\n        this.setHasNoAccountsBalance(true);\n      } else {\n        this.setHasNoAccountsBalance(false);\n      } // should have at least two real-money accounts\n\n\n      if (accounts.length <= 1) {\n        can_transfer = false;\n        this.setHasNoAccount(true);\n      } else {\n        this.setHasNoAccount(false);\n      }\n\n      if (!can_transfer) {\n        this.root_store.modules.cashier.general_store.setLoading(false);\n      }\n\n      return can_transfer;\n    }\n  }, {\n    key: \"setHasNoAccountsBalance\",\n    value: function setHasNoAccountsBalance(has_no_accounts_balance) {\n      this.has_no_accounts_balance = has_no_accounts_balance;\n    }\n  }, {\n    key: \"setHasNoAccount\",\n    value: function setHasNoAccount(has_no_account) {\n      this.has_no_account = has_no_account;\n    }\n  }, {\n    key: \"setTransferFee\",\n    value: function setTransferFee() {\n      var transfer_fee = (0,shared_.getPropertyValue)((0,shared_.getCurrencies)(), [this.selected_from.currency, 'transfer_between_accounts', 'fees', this.selected_to.currency]);\n      this.transfer_fee = Number(transfer_fee || 0);\n    }\n  }, {\n    key: \"setMinimumFee\",\n    value: function setMinimumFee() {\n      var decimals = (0,shared_.getDecimalPlaces)(this.selected_from.currency); // we need .toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n\n      this.minimum_fee = (1 / Math.pow(10, decimals)).toFixed(decimals);\n    }\n  }, {\n    key: \"setTransferLimit\",\n    value: function setTransferLimit() {\n      var is_mt_transfer = this.selected_from.is_mt || this.selected_to.is_mt;\n      var is_dxtrade_transfer = this.selected_from.is_dxtrade || this.selected_to.is_dxtrade;\n      var is_derivez_transfer = this.selected_from.is_derivez || this.selected_to.is_derivez;\n      var limits_key;\n\n      if (is_mt_transfer) {\n        limits_key = 'limits_mt5';\n      } else if (is_dxtrade_transfer) {\n        limits_key = 'limits_dxtrade';\n      } else if (is_derivez_transfer) {\n        limits_key = 'limits_derivez';\n      } else {\n        limits_key = 'limits';\n      }\n\n      var transfer_limit = (0,shared_.getPropertyValue)((0,shared_.getCurrencies)(), [this.selected_from.currency, 'transfer_between_accounts', limits_key]);\n      var balance = this.selected_from.balance;\n      var decimal_places = (0,shared_.getDecimalPlaces)(this.selected_from.currency); // we need .toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n\n      this.transfer_limit = {\n        max: !(transfer_limit !== null && transfer_limit !== void 0 && transfer_limit.max) || +balance >= ((transfer_limit === null || transfer_limit === void 0 ? void 0 : transfer_limit.min) || 0) && +balance <= (transfer_limit === null || transfer_limit === void 0 ? void 0 : transfer_limit.max) ? balance : transfer_limit === null || transfer_limit === void 0 ? void 0 : transfer_limit.max.toFixed(decimal_places),\n        min: transfer_limit !== null && transfer_limit !== void 0 && transfer_limit.min ? (+(transfer_limit === null || transfer_limit === void 0 ? void 0 : transfer_limit.min)).toFixed(decimal_places) : null\n      };\n    }\n  }, {\n    key: \"sortAccountsTransfer\",\n    value: function () {\n      var _sortAccountsTransfer = account_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(response_accounts, is_from_derivgo) {\n        var _yield$this$WS$storag,\n            _yield$this$WS$tradin,\n            _yield$this$WS$tradin2,\n            _this2 = this;\n\n        var transfer_between_accounts, mt5_login_list, dxtrade_accounts_list, derivez_accounts_list, accounts, arr_accounts;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.t0 = response_accounts;\n\n                if (_context4.t0) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 4;\n                return this.WS.authorized.transferBetweenAccounts();\n\n              case 4:\n                _context4.t0 = _context4.sent;\n\n              case 5:\n                transfer_between_accounts = _context4.t0;\n\n                if (this.accounts_list.length) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                if (!transfer_between_accounts.error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!is_from_derivgo && transfer_between_accounts && Array.isArray(transfer_between_accounts.accounts)) {\n                  transfer_between_accounts.accounts = transfer_between_accounts.accounts.filter(function (account) {\n                    return account.account_type !== shared_.CFD_PLATFORMS.DERIVEZ;\n                  });\n                }\n\n                _context4.next = 12;\n                return this.WS.storage.mt5LoginList();\n\n              case 12:\n                _context4.t2 = _yield$this$WS$storag = _context4.sent;\n                _context4.t1 = _context4.t2 === null;\n\n                if (_context4.t1) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _context4.t1 = _yield$this$WS$storag === void 0;\n\n              case 16:\n                if (!_context4.t1) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                _context4.t3 = void 0;\n                _context4.next = 21;\n                break;\n\n              case 20:\n                _context4.t3 = _yield$this$WS$storag.mt5_login_list;\n\n              case 21:\n                mt5_login_list = _context4.t3;\n                _context4.next = 24;\n                return this.WS.tradingPlatformAccountsList(shared_.CFD_PLATFORMS.DXTRADE);\n\n              case 24:\n                _context4.t5 = _yield$this$WS$tradin = _context4.sent;\n                _context4.t4 = _context4.t5 === null;\n\n                if (_context4.t4) {\n                  _context4.next = 28;\n                  break;\n                }\n\n                _context4.t4 = _yield$this$WS$tradin === void 0;\n\n              case 28:\n                if (!_context4.t4) {\n                  _context4.next = 32;\n                  break;\n                }\n\n                _context4.t6 = void 0;\n                _context4.next = 33;\n                break;\n\n              case 32:\n                _context4.t6 = _yield$this$WS$tradin.trading_platform_accounts;\n\n              case 33:\n                dxtrade_accounts_list = _context4.t6;\n                _context4.next = 36;\n                return this.WS.tradingPlatformAccountsList(shared_.CFD_PLATFORMS.DERIVEZ);\n\n              case 36:\n                _context4.t8 = _yield$this$WS$tradin2 = _context4.sent;\n                _context4.t7 = _context4.t8 === null;\n\n                if (_context4.t7) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                _context4.t7 = _yield$this$WS$tradin2 === void 0;\n\n              case 40:\n                if (!_context4.t7) {\n                  _context4.next = 44;\n                  break;\n                }\n\n                _context4.t9 = void 0;\n                _context4.next = 45;\n                break;\n\n              case 44:\n                _context4.t9 = _yield$this$WS$tradin2.trading_platform_accounts;\n\n              case 45:\n                derivez_accounts_list = _context4.t9;\n                // TODO: remove this temporary mapping when API adds market_type and sub_account_type to transfer_between_accounts\n                accounts = transfer_between_accounts.accounts.map(function (account) {\n                  if (account.account_type === shared_.CFD_PLATFORMS.MT5 && Array.isArray(mt5_login_list) && mt5_login_list.length) {\n                    // account_type in transfer_between_accounts (mt5|binary)\n                    // gets overridden by account_type in mt5_login_list (demo|real)\n                    // since in cashier all these are real accounts, the mt5 account type is what we want to keep\n                    var found_account = mt5_login_list.find(function (acc) {\n                      return acc.login === account.loginid;\n                    });\n                    if (found_account === undefined) return account;\n                    return account_transfer_store_objectSpread(account_transfer_store_objectSpread(account_transfer_store_objectSpread({}, account), found_account), {}, {\n                      account_type: shared_.CFD_PLATFORMS.MT5\n                    });\n                  }\n\n                  if (account.account_type === shared_.CFD_PLATFORMS.DXTRADE && Array.isArray(dxtrade_accounts_list) && dxtrade_accounts_list.length) {\n                    // account_type in transfer_between_accounts (mt5|binary)\n                    // gets overridden by account_type in dxtrade_accounts_list (demo|real)\n                    // since in cashier all these are real accounts, the mt5 account type is what we want to keep\n                    var _found_account = dxtrade_accounts_list.find(function (acc) {\n                      return acc.account_id === account.loginid;\n                    });\n\n                    if (_found_account === undefined) return account;\n                    return account_transfer_store_objectSpread(account_transfer_store_objectSpread(account_transfer_store_objectSpread({}, account), _found_account), {}, {\n                      account_type: shared_.CFD_PLATFORMS.DXTRADE\n                    });\n                  }\n\n                  if (account.account_type === shared_.CFD_PLATFORMS.DERIVEZ && Array.isArray(derivez_accounts_list) && derivez_accounts_list.length) {\n                    var _found_account2 = derivez_accounts_list.find(function (acc) {\n                      return acc.login === account.loginid;\n                    });\n\n                    if (_found_account2 === undefined) return account;\n                    return account_transfer_store_objectSpread(account_transfer_store_objectSpread(account_transfer_store_objectSpread({}, account), _found_account2), {}, {\n                      account_type: shared_.CFD_PLATFORMS.DERIVEZ\n                    });\n                  }\n\n                  return account;\n                }); // sort accounts as follows:\n                // for MT5, synthetic, financial, financial stp\n                // for non-MT5, fiat, crypto (alphabetically by currency)\n                // should have more than one account\n\n                if (transfer_between_accounts.accounts.length > 1) {\n                  accounts.sort(function (a, b) {\n                    var a_is_mt = a.account_type === shared_.CFD_PLATFORMS.MT5;\n                    var b_is_mt = b.account_type === shared_.CFD_PLATFORMS.MT5;\n                    var a_is_derivez = a.account_type === shared_.CFD_PLATFORMS.DERIVEZ;\n                    var b_is_derivez = b.account_type === shared_.CFD_PLATFORMS.DERIVEZ;\n                    var a_is_crypto = !a_is_mt && (0,shared_.isCryptocurrency)(a.currency);\n                    var b_is_crypto = !b_is_mt && (0,shared_.isCryptocurrency)(b.currency);\n                    var a_is_fiat = !a_is_mt && !a_is_crypto;\n                    var b_is_fiat = !b_is_mt && !b_is_crypto;\n\n                    if (a_is_mt && b_is_mt) {\n                      if (a.market_type === 'gaming' || a.market_type === 'synthetic') {\n                        return -1;\n                      }\n\n                      if (a.sub_account_type === 'financial') {\n                        return b.market_type === 'gaming' || b.market_type === 'synthetic' ? 1 : -1;\n                      }\n\n                      return 1;\n                    } else if (a_is_crypto && b_is_derivez || a_is_fiat && b_is_derivez || a_is_derivez && b_is_mt) {\n                      return -1;\n                    } else if (a_is_crypto && b_is_crypto || a_is_fiat && b_is_fiat) {\n                      return a.currency < b.currency ? -1 : 1;\n                    } else if (a_is_crypto && b_is_mt || a_is_fiat && b_is_crypto || a_is_fiat && b_is_mt) {\n                      return -1;\n                    }\n\n                    return a_is_mt ? -1 : 1;\n                  });\n                }\n\n                arr_accounts = [];\n                this.setSelectedTo({}); // set selected to empty each time so we can redetermine its value on reload\n\n                accounts.forEach(function (account) {\n                  var _cfd_platforms$accoun, _cfd_platforms$accoun2, _cfd_platforms$accoun3, _account$landing_comp, _account$landing_comp2, _account$landing_comp3;\n\n                  var cfd_platforms = {\n                    mt5: {\n                      name: 'Deriv MT5',\n                      icon: 'IcMt5'\n                    },\n                    dxtrade: {\n                      name: 'Deriv X',\n                      icon: 'IcDxtrade'\n                    },\n                    derivez: {\n                      name: 'Deriv EZ',\n                      icon: 'IcDerivez'\n                    }\n                  };\n                  var is_cfd = Object.keys(cfd_platforms).includes(account.account_type);\n                  var cfd_text_display = (_cfd_platforms$accoun = cfd_platforms[account.account_type]) === null || _cfd_platforms$accoun === void 0 ? void 0 : _cfd_platforms$accoun.name;\n                  var cfd_icon_display = account.account_type === shared_.CFD_PLATFORMS.DERIVEZ ? \"\".concat((_cfd_platforms$accoun2 = cfd_platforms[account.account_type]) === null || _cfd_platforms$accoun2 === void 0 ? void 0 : _cfd_platforms$accoun2.icon) : \"\".concat((_cfd_platforms$accoun3 = cfd_platforms[account.account_type]) === null || _cfd_platforms$accoun3 === void 0 ? void 0 : _cfd_platforms$accoun3.icon, \"-\").concat((0,shared_.getCFDAccount)({\n                    market_type: account.market_type,\n                    sub_account_type: account.sub_account_type,\n                    platform: account.account_type,\n                    is_eu: _this2.root_store.client.is_eu\n                  }));\n                  var non_eu_accounts = account.landing_company_short && account.landing_company_short !== 'svg' && account.landing_company_short !== 'bvi' ? ((_account$landing_comp = account.landing_company_short) === null || _account$landing_comp === void 0 ? void 0 : _account$landing_comp.charAt(0).toUpperCase()) + ((_account$landing_comp2 = account.landing_company_short) === null || _account$landing_comp2 === void 0 ? void 0 : _account$landing_comp2.slice(1)) : (_account$landing_comp3 = account.landing_company_short) === null || _account$landing_comp3 === void 0 ? void 0 : _account$landing_comp3.toUpperCase();\n                  var account_text_display = is_cfd ? account.account_type === 'mt5' ? \"\".concat((0,shared_.getCFDAccountDisplay)({\n                    market_type: account.market_type,\n                    sub_account_type: account.sub_account_type,\n                    platform: account.account_type,\n                    is_eu: _this2.root_store.client.is_eu\n                  }), \" \").concat(_this2.root_store.client.is_eu ? '' : non_eu_accounts) : \"\".concat(cfd_text_display, \" \").concat((0,shared_.getCFDAccountDisplay)({\n                    market_type: account.market_type,\n                    sub_account_type: account.sub_account_type,\n                    platform: account.account_type,\n                    is_eu: _this2.root_store.client.is_eu,\n                    is_transfer_form: true\n                  })) : (0,shared_.getCurrencyDisplayCode)(account.currency !== 'eUSDT' ? account.currency.toUpperCase() : account.currency);\n\n                  var obj_values = account_transfer_store_objectSpread({\n                    text: account_text_display,\n                    value: account.loginid,\n                    balance: account.balance,\n                    currency: account.currency,\n                    is_crypto: (0,shared_.isCryptocurrency)(account.currency),\n                    is_mt: account.account_type === shared_.CFD_PLATFORMS.MT5,\n                    is_dxtrade: account.account_type === shared_.CFD_PLATFORMS.DXTRADE,\n                    is_derivez: account.account_type === shared_.CFD_PLATFORMS.DERIVEZ\n                  }, is_cfd && {\n                    platform_icon: cfd_icon_display,\n                    status: account === null || account === void 0 ? void 0 : account.status,\n                    market_type: (0,shared_.getCFDAccount)({\n                      market_type: account.market_type,\n                      sub_account_type: account.sub_account_type,\n                      platform: account.account_type,\n                      is_eu: _this2.root_store.client.is_eu\n                    })\n                  }); // set current logged in client as the default transfer from account\n\n\n                  if (account.loginid === _this2.root_store.client.loginid) {\n                    // check if selected from is not allowed account\n                    if (hasTransferNotAllowedLoginid(obj_values.value)) {\n                      obj_values.error = getSelectedError(obj_values.value, true);\n                    }\n\n                    _this2.setSelectedFrom(obj_values);\n                  } else if ((0,shared_.isEmptyObject)(_this2.selected_to)) {\n                    if (hasTransferNotAllowedLoginid(obj_values.value)) {\n                      // check if selected to is not allowed account\n                      obj_values.error = getSelectedError(obj_values.value);\n                    } // set the first available account as the default transfer to account\n\n\n                    _this2.setSelectedTo(obj_values);\n                  }\n\n                  arr_accounts.push(obj_values);\n                });\n                this.setAccounts(arr_accounts);\n\n              case 52:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function sortAccountsTransfer(_x2, _x3) {\n        return _sortAccountsTransfer.apply(this, arguments);\n      }\n\n      return sortAccountsTransfer;\n    }()\n  }, {\n    key: \"setSelectedFrom\",\n    value: function setSelectedFrom(obj_values) {\n      this.selected_from = obj_values;\n    }\n  }, {\n    key: \"setSelectedTo\",\n    value: function setSelectedTo(obj_values) {\n      this.selected_to = obj_values;\n    }\n  }, {\n    key: \"setAccounts\",\n    value: function setAccounts(arr_accounts) {\n      this.accounts_list = arr_accounts;\n    }\n  }, {\n    key: \"setIsTransferConfirm\",\n    value: function setIsTransferConfirm(is_transfer_confirm) {\n      this.is_transfer_confirm = is_transfer_confirm;\n    }\n  }, {\n    key: \"setAccountTransferAmount\",\n    value: function setAccountTransferAmount(amount) {\n      this.account_transfer_amount = amount;\n    }\n  }, {\n    key: \"setIsTransferSuccessful\",\n    value: function setIsTransferSuccessful(is_transfer_successful) {\n      this.is_transfer_successful = is_transfer_successful;\n    }\n  }, {\n    key: \"setIsMT5TransferInProgress\",\n    value: function setIsMT5TransferInProgress(is_mt5_transfer_in_progress) {\n      this.is_mt5_transfer_in_progress = is_mt5_transfer_in_progress;\n    }\n  }, {\n    key: \"setReceiptTransfer\",\n    value: function setReceiptTransfer(_ref9) {\n      var amount = _ref9.amount;\n      this.receipt = {\n        amount_transferred: amount\n      };\n    }\n  }, {\n    key: \"onChangeTransferFrom\",\n    value: function onChangeTransferFrom(_ref10) {\n      var target = _ref10.target;\n      this.error.setErrorMessage('');\n      this.selected_from.error = '';\n      var accounts = this.accounts_list;\n      var selected_from = accounts.find(function (account) {\n        return account.value === target.value;\n      }); // if new value of selected_from is the same as the current selected_to\n      // switch the value of selected_from and selected_to\n\n      if (selected_from.value === this.selected_to.value) {\n        this.onChangeTransferTo({\n          target: {\n            value: this.selected_from.value\n          }\n        });\n      } else if (selected_from.is_mt && this.selected_to.is_mt || selected_from.is_dxtrade && this.selected_to.is_dxtrade || selected_from.is_dxtrade && (this.selected_to.is_mt || this.selected_to.is_derivez) || selected_from.is_mt && (this.selected_to.is_dxtrade || this.selected_to.is_derivez) || selected_from.is_derivez && this.selected_to.is_derivez || selected_from.is_derivez && (this.selected_to.is_dxtrade || this.selected_to.is_mt)) {\n        // not allowed to transfer from MT to MT\n        // not allowed to transfer from Dxtrade to Dxtrade\n        // not allowed to transfer between MT and Dxtrade\n        var first_non_cfd = this.accounts_list.find(function (account) {\n          return !account.is_mt && !account.is_dxtrade && !account.is_derivez;\n        });\n        this.onChangeTransferTo({\n          target: {\n            value: first_non_cfd.value\n          }\n        });\n      }\n\n      if (hasTransferNotAllowedLoginid(selected_from.value)) {\n        selected_from.error = getSelectedError(selected_from.value, true);\n      }\n\n      this.selected_from = selected_from;\n      this.setTransferFee();\n      this.setMinimumFee();\n      this.setTransferLimit();\n    }\n  }, {\n    key: \"onChangeTransferTo\",\n    value: function onChangeTransferTo(_ref11) {\n      var target = _ref11.target;\n      this.error.setErrorMessage('');\n      this.selected_to.error = '';\n      var accounts = this.accounts_list;\n      this.selected_to = accounts.find(function (account) {\n        return account.value === target.value;\n      }) || {};\n\n      if (hasTransferNotAllowedLoginid(this.selected_to.value)) {\n        this.selected_to.error = getSelectedError(this.selected_to.value);\n      }\n\n      this.setTransferFee();\n      this.setMinimumFee();\n      this.setTransferLimit();\n    }\n  }, {\n    key: \"setTransferPercentageSelectorResult\",\n    value: function setTransferPercentageSelectorResult(amount) {\n      var _this$root_store$modu = this.root_store.modules.cashier,\n          crypto_fiat_converter = _this$root_store$modu.crypto_fiat_converter,\n          general_store = _this$root_store$modu.general_store;\n      var selected_from_currency = this.selected_from.currency;\n      var selected_to_currency = this.selected_to.currency;\n\n      if (amount > 0 || +this.selected_from.balance === 0) {\n        crypto_fiat_converter.setConverterFromAmount(amount);\n        this.validateTransferFromAmount();\n        crypto_fiat_converter.onChangeConverterFromAmount({\n          target: {\n            value: amount\n          }\n        }, selected_from_currency, selected_to_currency);\n      } else {\n        crypto_fiat_converter.resetConverter();\n      }\n\n      crypto_fiat_converter.setIsTimerVisible(false);\n      general_store.percentageSelectorSelectionStatus(false);\n    }\n  }, {\n    key: \"validateTransferFromAmount\",\n    value: function validateTransferFromAmount() {\n      var _this$root_store$modu2 = this.root_store.modules.cashier.crypto_fiat_converter,\n          converter_from_amount = _this$root_store$modu2.converter_from_amount,\n          setConverterFromError = _this$root_store$modu2.setConverterFromError;\n\n      if (!converter_from_amount) {\n        setConverterFromError((0,translations_.localize)('This field is required.'));\n      } else {\n        var _validNumber = (0,shared_.validNumber)(converter_from_amount, {\n          type: 'float',\n          decimals: (0,shared_.getDecimalPlaces)(this.selected_from.currency),\n          min: this.transfer_limit.min,\n          max: this.transfer_limit.max\n        }),\n            is_ok = _validNumber.is_ok,\n            message = _validNumber.message;\n\n        if (!is_ok) {\n          setConverterFromError(message);\n        } else if (+this.selected_from.balance < +converter_from_amount) {\n          setConverterFromError((0,translations_.localize)('Insufficient funds'));\n        } else {\n          setConverterFromError('');\n        }\n      }\n    }\n  }, {\n    key: \"validateTransferToAmount\",\n    value: function validateTransferToAmount() {\n      var _this$root_store$modu3 = this.root_store.modules.cashier.crypto_fiat_converter,\n          converter_to_amount = _this$root_store$modu3.converter_to_amount,\n          setConverterToError = _this$root_store$modu3.setConverterToError;\n\n      if (converter_to_amount) {\n        var currency = this.selected_to.currency;\n\n        var _validNumber2 = (0,shared_.validNumber)(converter_to_amount, {\n          type: 'float',\n          decimals: (0,shared_.getDecimalPlaces)(currency)\n        }),\n            is_ok = _validNumber2.is_ok,\n            message = _validNumber2.message;\n\n        if (!is_ok) {\n          setConverterToError(message);\n        } else {\n          setConverterToError('');\n        }\n      }\n    }\n  }]);\n\n  return AccountTransferStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/crypto-fiat-converter-store.js\nfunction crypto_fiat_converter_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction crypto_fiat_converter_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { crypto_fiat_converter_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { crypto_fiat_converter_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction crypto_fiat_converter_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction crypto_fiat_converter_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction crypto_fiat_converter_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) crypto_fiat_converter_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) crypto_fiat_converter_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar CryptoFiatConverterStore = /*#__PURE__*/function () {\n  function CryptoFiatConverterStore(_ref) {\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    crypto_fiat_converter_store_classCallCheck(this, CryptoFiatConverterStore);\n\n    this.converter_from_amount = '';\n    this.converter_to_amount = '';\n    this.converter_from_error = '';\n    this.converter_to_error = '';\n    this.is_timer_visible = false;\n    (0,external_mobx_.makeObservable)(this, {\n      converter_from_amount: external_mobx_.observable,\n      converter_to_amount: external_mobx_.observable,\n      converter_from_error: external_mobx_.observable,\n      converter_to_error: external_mobx_.observable,\n      is_timer_visible: external_mobx_.observable,\n      setConverterFromAmount: external_mobx_.action.bound,\n      setConverterToAmount: external_mobx_.action.bound,\n      setConverterFromError: external_mobx_.action.bound,\n      setConverterToError: external_mobx_.action.bound,\n      setIsTimerVisible: external_mobx_.action.bound,\n      resetTimer: external_mobx_.action.bound,\n      getExchangeRate: external_mobx_.action.bound,\n      validateFromAmount: external_mobx_.action.bound,\n      validateToAmount: external_mobx_.action.bound,\n      onChangeConverterFromAmount: external_mobx_.action.bound,\n      onChangeConverterToAmount: external_mobx_.action.bound,\n      resetConverter: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  crypto_fiat_converter_store_createClass(CryptoFiatConverterStore, [{\n    key: \"setConverterFromAmount\",\n    value: function setConverterFromAmount(amount) {\n      this.converter_from_amount = amount;\n    }\n  }, {\n    key: \"setConverterToAmount\",\n    value: function setConverterToAmount(amount) {\n      this.converter_to_amount = amount;\n    }\n  }, {\n    key: \"setConverterFromError\",\n    value: function setConverterFromError(error) {\n      this.converter_from_error = error;\n    }\n  }, {\n    key: \"setConverterToError\",\n    value: function setConverterToError(error) {\n      this.converter_to_error = error;\n    }\n  }, {\n    key: \"setIsTimerVisible\",\n    value: function setIsTimerVisible(is_timer_visible) {\n      this.is_timer_visible = is_timer_visible;\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.setIsTimerVisible(false);\n    }\n  }, {\n    key: \"getExchangeRate\",\n    value: function () {\n      var _getExchangeRate = crypto_fiat_converter_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(from_currency, to_currency) {\n        var _yield$this$WS$send, exchange_rates;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.WS.send({\n                  exchange_rates: 1,\n                  base_currency: from_currency\n                });\n\n              case 2:\n                _yield$this$WS$send = _context.sent;\n                exchange_rates = _yield$this$WS$send.exchange_rates;\n                return _context.abrupt(\"return\", exchange_rates.rates[to_currency]);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getExchangeRate(_x, _x2) {\n        return _getExchangeRate.apply(this, arguments);\n      }\n\n      return getExchangeRate;\n    }()\n  }, {\n    key: \"validateFromAmount\",\n    value: function validateFromAmount() {\n      var _this$root_store$modu = this.root_store.modules.cashier,\n          account_transfer = _this$root_store$modu.account_transfer,\n          general_store = _this$root_store$modu.general_store,\n          withdraw = _this$root_store$modu.withdraw;\n\n      if (general_store.active_container === account_transfer.container) {\n        account_transfer.validateTransferFromAmount();\n      } else {\n        withdraw.validateWithdrawFromAmount();\n      }\n    }\n  }, {\n    key: \"validateToAmount\",\n    value: function validateToAmount() {\n      var _this$root_store$modu2 = this.root_store.modules.cashier,\n          account_transfer = _this$root_store$modu2.account_transfer,\n          general_store = _this$root_store$modu2.general_store,\n          withdraw = _this$root_store$modu2.withdraw;\n\n      if (general_store.active_container === account_transfer.container) {\n        account_transfer.validateTransferToAmount();\n      } else {\n        withdraw.validateWithdrawToAmount();\n      }\n    }\n  }, {\n    key: \"onChangeConverterFromAmount\",\n    value: function () {\n      var _onChangeConverterFromAmount = crypto_fiat_converter_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, from_currency, to_currency) {\n        var target, _this$root_store$modu3, account_transfer, general_store, rate, decimals, amount;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                target = _ref2.target;\n                _this$root_store$modu3 = this.root_store.modules.cashier, account_transfer = _this$root_store$modu3.account_transfer, general_store = _this$root_store$modu3.general_store;\n                this.resetTimer();\n\n                if (!target.value) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                this.setConverterFromAmount(target.value);\n                this.validateFromAmount();\n                general_store.percentageSelectorSelectionStatus(true);\n                general_store.calculatePercentage();\n\n                if (!this.converter_from_error) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                this.setConverterToAmount('');\n                this.setConverterToError('');\n                this.setIsTimerVisible(false);\n                account_transfer.setAccountTransferAmount('');\n                _context2.next = 25;\n                break;\n\n              case 15:\n                _context2.next = 17;\n                return this.getExchangeRate(from_currency, to_currency);\n\n              case 17:\n                rate = _context2.sent;\n                decimals = (0,shared_.getDecimalPlaces)(to_currency);\n                amount = (rate * target.value).toFixed(decimals);\n\n                if (+amount || this.converter_from_amount) {\n                  this.setConverterToAmount(amount);\n                } else {\n                  this.setConverterToAmount('');\n                }\n\n                this.validateToAmount();\n                this.setConverterToError('');\n                this.setIsTimerVisible(true);\n                account_transfer.setAccountTransferAmount(target.value);\n\n              case 25:\n                _context2.next = 28;\n                break;\n\n              case 27:\n                this.resetConverter();\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onChangeConverterFromAmount(_x3, _x4, _x5) {\n        return _onChangeConverterFromAmount.apply(this, arguments);\n      }\n\n      return onChangeConverterFromAmount;\n    }()\n  }, {\n    key: \"onChangeConverterToAmount\",\n    value: function () {\n      var _onChangeConverterToAmount = crypto_fiat_converter_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, from_currency, to_currency) {\n        var target, _this$root_store$modu4, account_transfer, general_store, rate, decimals, amount;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                target = _ref3.target;\n                _this$root_store$modu4 = this.root_store.modules.cashier, account_transfer = _this$root_store$modu4.account_transfer, general_store = _this$root_store$modu4.general_store;\n                this.resetTimer();\n\n                if (!target.value) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                this.setConverterToAmount(target.value);\n                this.validateToAmount();\n\n                if (!this.converter_to_error) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                this.setConverterFromAmount('');\n                this.setConverterFromError('');\n                this.setIsTimerVisible(false);\n                account_transfer.setAccountTransferAmount('');\n                _context3.next = 23;\n                break;\n\n              case 13:\n                _context3.next = 15;\n                return this.getExchangeRate(from_currency, to_currency);\n\n              case 15:\n                rate = _context3.sent;\n                decimals = (0,shared_.getDecimalPlaces)(to_currency);\n                amount = (rate * target.value).toFixed(decimals);\n\n                if (+amount || this.converter_to_amount) {\n                  this.setConverterFromAmount(amount);\n                } else {\n                  this.setConverterFromAmount('');\n                }\n\n                general_store.percentageSelectorSelectionStatus(true);\n                general_store.calculatePercentage();\n                this.validateFromAmount();\n\n                if (this.converter_from_error) {\n                  this.setIsTimerVisible(false);\n                  account_transfer.setAccountTransferAmount('');\n                } else {\n                  this.setConverterFromError('');\n                  this.setIsTimerVisible(true);\n                  account_transfer.setAccountTransferAmount(amount);\n                }\n\n              case 23:\n                _context3.next = 26;\n                break;\n\n              case 25:\n                this.resetConverter();\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onChangeConverterToAmount(_x6, _x7, _x8) {\n        return _onChangeConverterToAmount.apply(this, arguments);\n      }\n\n      return onChangeConverterToAmount;\n    }()\n  }, {\n    key: \"resetConverter\",\n    value: function resetConverter() {\n      this.setConverterFromAmount('');\n      this.setConverterToAmount('');\n      this.setConverterFromError('');\n      this.setConverterToError('');\n      this.setIsTimerVisible(false);\n      this.root_store.modules.cashier.general_store.percentageSelectorSelectionStatus(true);\n    }\n  }]);\n\n  return CryptoFiatConverterStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/deposit-store.ts\nfunction deposit_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction deposit_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { deposit_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { deposit_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction deposit_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction deposit_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction deposit_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) deposit_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) deposit_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar DepositStore = /*#__PURE__*/function () {\n  function DepositStore(WS, root_store) {\n    deposit_store_classCallCheck(this, DepositStore);\n\n    this.WS = WS;\n    this.root_store = root_store;\n    this.container = constants.containers.deposit;\n    this.error = new ErrorStore();\n    (0,external_mobx_.makeObservable)(this, {\n      container: external_mobx_.observable,\n      error: external_mobx_.observable,\n      onMountDeposit: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  deposit_store_createClass(DepositStore, [{\n    key: \"onMountDeposit\",\n    value: function () {\n      var _onMountDeposit = deposit_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _account_status$statu;\n\n        var _this$root_store, client, modules, _modules$cashier$gene, active_container, is_crypto, onMountCommon, setLoading, setOnRemount, _modules$cashier$ifra, checkIframeLoaded, clearTimeoutCashierUrl, is_session_timeout, setContainerHeight, setIframeUrl, setSessionTimeout, setTimeoutCashierUrl, account_status, is_virtual, updateAccountStatus, current_container, response_cashier;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$root_store = this.root_store, client = _this$root_store.client, modules = _this$root_store.modules;\n                _modules$cashier$gene = modules.cashier.general_store, active_container = _modules$cashier$gene.active_container, is_crypto = _modules$cashier$gene.is_crypto, onMountCommon = _modules$cashier$gene.onMountCommon, setLoading = _modules$cashier$gene.setLoading, setOnRemount = _modules$cashier$gene.setOnRemount;\n                _modules$cashier$ifra = modules.cashier.iframe, checkIframeLoaded = _modules$cashier$ifra.checkIframeLoaded, clearTimeoutCashierUrl = _modules$cashier$ifra.clearTimeoutCashierUrl, is_session_timeout = _modules$cashier$ifra.is_session_timeout, setContainerHeight = _modules$cashier$ifra.setContainerHeight, setIframeUrl = _modules$cashier$ifra.setIframeUrl, setSessionTimeout = _modules$cashier$ifra.setSessionTimeout, setTimeoutCashierUrl = _modules$cashier$ifra.setTimeoutCashierUrl;\n                account_status = client.account_status, is_virtual = client.is_virtual, updateAccountStatus = client.updateAccountStatus;\n                current_container = active_container;\n                setOnRemount(this.onMountDeposit);\n                _context.next = 8;\n                return onMountCommon();\n\n              case 8:\n                this.error.setErrorMessage({\n                  code: '',\n                  message: ''\n                }, null, false);\n                setContainerHeight(0);\n\n                if (is_session_timeout) {\n                  _context.next = 13;\n                  break;\n                }\n\n                checkIframeLoaded();\n                return _context.abrupt(\"return\");\n\n              case 13:\n                // if session has timed out reset everything\n                setIframeUrl('');\n\n                if (!is_virtual) {\n                  _context.next = 17;\n                  break;\n                }\n\n                setLoading(false); // if virtual, clear everything and don't proceed further\n                // if no verification code, we should request again\n\n                return _context.abrupt(\"return\");\n\n              case 17:\n                if (is_crypto) {\n                  _context.next = 35;\n                  break;\n                }\n\n                _context.next = 20;\n                return this.WS.authorized.cashier(active_container, {\n                  verification_code: 'undefined'\n                });\n\n              case 20:\n                response_cashier = _context.sent;\n\n                if (!(current_container !== active_container)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                setLoading(false);\n                return _context.abrupt(\"return\");\n\n              case 24:\n                if (!response_cashier.error) {\n                  _context.next = 30;\n                  break;\n                }\n\n                this.error.handleCashierError(response_cashier.error);\n                setSessionTimeout(true);\n                clearTimeoutCashierUrl();\n                _context.next = 35;\n                break;\n\n              case 30:\n                _context.next = 32;\n                return checkIframeLoaded();\n\n              case 32:\n                setIframeUrl(response_cashier.cashier);\n                setSessionTimeout(false);\n                setTimeoutCashierUrl();\n\n              case 35:\n                if (account_status !== null && account_status !== void 0 && (_account_status$statu = account_status.status) !== null && _account_status$statu !== void 0 && _account_status$statu.includes('deposit_attempt')) {\n                  _context.next = 38;\n                  break;\n                }\n\n                _context.next = 38;\n                return updateAccountStatus();\n\n              case 38:\n                setLoading(false);\n\n              case 39:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onMountDeposit() {\n        return _onMountDeposit.apply(this, arguments);\n      }\n\n      return onMountDeposit;\n    }()\n  }]);\n\n  return DepositStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/error-dialog-store.js\nfunction error_dialog_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction error_dialog_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction error_dialog_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) error_dialog_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) error_dialog_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar ErrorDialogStore = /*#__PURE__*/function () {\n  function ErrorDialogStore() {\n    error_dialog_store_classCallCheck(this, ErrorDialogStore);\n\n    this.confirm_button_text = '';\n    this.error_message = '';\n    this.has_no_close_icon = false;\n    this.should_show = false;\n    this.should_not_show_title = false;\n    (0,external_mobx_.makeObservable)(this, {\n      confirm_button_text: external_mobx_.observable,\n      error_message: external_mobx_.observable,\n      has_no_close_icon: external_mobx_.observable,\n      should_show: external_mobx_.observable,\n      should_not_show_title: external_mobx_.observable,\n      setShouldShow: external_mobx_.action.bound,\n      setErrorMessage: external_mobx_.action.bound,\n      setConfirmButtonText: external_mobx_.action.bound,\n      setShouldNotShowTitle: external_mobx_.action.bound,\n      setHasNoCloseIcon: external_mobx_.action.bound,\n      openReadMoreDialog: external_mobx_.action.bound,\n      reset: external_mobx_.action.bound\n    });\n  }\n\n  error_dialog_store_createClass(ErrorDialogStore, [{\n    key: \"setShouldShow\",\n    value: function setShouldShow(value) {\n      this.should_show = value;\n    }\n  }, {\n    key: \"setErrorMessage\",\n    value: function setErrorMessage(message) {\n      this.error_message = message;\n      this.setShouldShow(true);\n    }\n  }, {\n    key: \"setConfirmButtonText\",\n    value: function setConfirmButtonText(text) {\n      this.confirm_button_text = text;\n    }\n  }, {\n    key: \"setShouldNotShowTitle\",\n    value: function setShouldNotShowTitle(value) {\n      this.should_not_show_title = value;\n    }\n  }, {\n    key: \"setHasNoCloseIcon\",\n    value: function setHasNoCloseIcon(value) {\n      this.has_no_close_icon = value;\n    }\n  }, {\n    key: \"openReadMoreDialog\",\n    value: function openReadMoreDialog(error_content, confirm_button_text) {\n      this.setErrorMessage(error_content);\n      this.setConfirmButtonText(confirm_button_text);\n      this.setHasNoCloseIcon(true);\n      this.setShouldNotShowTitle(true);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setConfirmButtonText('');\n      this.setShouldNotShowTitle(false);\n      this.setHasNoCloseIcon(false);\n    }\n  }]);\n\n  return ErrorDialogStore;\n}();\n\n\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n;// CONCATENATED MODULE: ./components/cashier-notifications/cashier-notifications.tsx\n\n\n\nvar CashierNotifications = function CashierNotifications(_ref) {\n  var p2p_notification_count = _ref.p2p_notification_count;\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"IcCashier\",\n    className: \"header__icon\"\n  }), !!p2p_notification_count && /*#__PURE__*/external_react_default().createElement(components_.Counter, {\n    className: \"cashier__counter\",\n    count: p2p_notification_count\n  }));\n};\n\n/* harmony default export */ const cashier_notifications = (CashierNotifications);\n;// CONCATENATED MODULE: ./components/cashier-notifications/index.ts\n\n/* harmony default export */ const components_cashier_notifications = (cashier_notifications);\n;// CONCATENATED MODULE: ./utils/utility.js\nfunction utility_slicedToArray(arr, i) { return utility_arrayWithHoles(arr) || utility_iterableToArrayLimit(arr, i) || utility_unsupportedIterableToArray(arr, i) || utility_nonIterableRest(); }\n\nfunction utility_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction utility_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return utility_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return utility_arrayLikeToArray(o, minLen); }\n\nfunction utility_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction utility_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction utility_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction utility_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction utility_createClass(Constructor, protoProps, staticProps) { if (protoProps) utility_defineProperties(Constructor.prototype, protoProps); if (staticProps) utility_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction utility_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar template = function template(string, content) {\n  var to_replace = content;\n\n  if (content && !Array.isArray(content)) {\n    to_replace = [content];\n  }\n\n  return string.replace(/\\[_(\\d+)]/g, function (s, index) {\n    return to_replace[+index - 1];\n  });\n};\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\n\n\nvar createElement = function createElement(tag_name) {\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var el = document.createElement(tag_name);\n  Object.keys(attributes).forEach(function (attr) {\n    var value = attributes[attr];\n\n    if (attr === 'text') {\n      el.textContent = value;\n    } else if (attr === 'html') {\n      el.html(value);\n    } else {\n      el.setAttribute(attr, value);\n    }\n  });\n  return el;\n};\n\nvar static_hash;\n\nvar getStaticHash = function getStaticHash() {\n  static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n  return static_hash;\n};\n\nvar PromiseClass = /*#__PURE__*/(/* unused pure expression or super */ null && (utility_createClass(function PromiseClass() {\n  var _this = this;\n\n  utility_classCallCheck(this, PromiseClass);\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.reject = reject;\n    _this.resolve = resolve;\n  });\n}))); // TODO: [duplicate_code] - Move this to shared package\n// eu countries to support\n\n\nvar eu_countries = (/* unused pure expression or super */ null && (['it', 'de', 'fr', 'lu', 'gr', 'mf', 'es', 'sk', 'lt', 'nl', 'at', 'bg', 'si', 'cy', 'be', 'ro', 'hr', 'pt', 'pl', 'lv', 'ee', 'cz', 'fi', 'hu', 'dk', 'se', 'ie', 'im', 'gb', 'mt'])); // TODO: [duplicate_code] - Move this to shared package\n// check if client is from EU\n\nvar isEuCountry = function isEuCountry(country) {\n  return eu_countries.includes(country);\n}; // check if mlt or dxtrade for account text\n\n\nvar getAccountText = function getAccountText(account) {\n  var account_text = '';\n\n  if (account.is_dxtrade || account.is_mt) {\n    account_text = account.text;\n  } else {\n    account_text = getCurrencyDisplayCode(account.text);\n  }\n\n  return account_text;\n};\n\nvar getNormalizedPaymentMethod = function getNormalizedPaymentMethod(payment_method, constants) {\n  var is_for_icon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var method = is_for_icon ? payment_method.replace(/[' ',-]/g, '').toLowerCase() : payment_method;\n  var normalized_payment_method = Object.entries(constants).reduce(function (pay_method, _ref) {\n    var _ref2 = utility_slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value.some(function (el) {\n      return el === method;\n    }) ? key : pay_method;\n  }, '');\n  return is_for_icon ? normalized_payment_method : normalized_payment_method || payment_method;\n};\n\n\n;// CONCATENATED MODULE: ./utils/validator/errors.js\nfunction errors_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction errors_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction errors_createClass(Constructor, protoProps, staticProps) { if (protoProps) errors_defineProperties(Constructor.prototype, protoProps); if (staticProps) errors_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Errors = /*#__PURE__*/function () {\n  function Errors() {\n    errors_classCallCheck(this, Errors);\n\n    this.errors = {};\n  }\n\n  errors_createClass(Errors, [{\n    key: \"add\",\n    value: function add(attribute, message) {\n      if (!this.has(attribute)) {\n        this.errors[attribute] = [];\n      }\n\n      if (this.errors[attribute].indexOf(message) === -1) {\n        this.errors[attribute].push(message);\n      }\n    }\n  }, {\n    key: \"all\",\n    value: function all() {\n      return this.errors;\n    }\n  }, {\n    key: \"first\",\n    value: function first(attribute) {\n      if (this.has(attribute)) {\n        return this.errors[attribute][0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"get\",\n    value: function get(attribute) {\n      if (this.has(attribute)) {\n        return this.errors[attribute];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"has\",\n    value: function has(attribute) {\n      return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n  }]);\n\n  return Errors;\n}();\n\n/* harmony default export */ const errors = (Errors);\n;// CONCATENATED MODULE: ./utils/validator/validator.js\nfunction validator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction validator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction validator_createClass(Constructor, protoProps, staticProps) { if (protoProps) validator_defineProperties(Constructor.prototype, protoProps); if (staticProps) validator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Validator = /*#__PURE__*/function () {\n  function Validator(input, rules) {\n    var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    validator_classCallCheck(this, Validator);\n\n    this.input = input;\n    this.rules = rules;\n    this.store = store;\n    this.errors = new errors();\n    this.error_count = 0;\n  }\n  /**\n   * Add failure and error message for given rule\n   *\n   * @param {string} attribute\n   * @param {object} rule\n   */\n\n\n  validator_createClass(Validator, [{\n    key: \"addFailure\",\n    value: function addFailure(attribute, rule, error_message) {\n      var message = error_message || rule.options.message || (0,shared_.getPreBuildDVRs)()[rule.name].message();\n\n      if (rule.name === 'length') {\n        message = template(message, [rule.options.min === rule.options.max ? rule.options.min : \"\".concat(rule.options.min, \"-\").concat(rule.options.max)]);\n      } else if (rule.name === 'min') {\n        message = template(message, [rule.options.min]);\n      } else if (rule.name === 'not_equal') {\n        message = template(message, [rule.options.name1, rule.options.name2]);\n      }\n\n      this.errors.add(attribute, message);\n      this.error_count++;\n    }\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      var _this = this;\n\n      Object.keys(this.input).forEach(function (attribute) {\n        if (!Object.prototype.hasOwnProperty.call(_this.rules, attribute)) {\n          return;\n        }\n\n        _this.rules[attribute].forEach(function (rule) {\n          var ruleObject = Validator.getRuleObject(rule);\n\n          if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n            return;\n          }\n\n          if (ruleObject.options.condition && !ruleObject.options.condition(_this.store)) {\n            return;\n          }\n\n          if (_this.input[attribute] === '' && ruleObject.name !== 'req') {\n            return;\n          }\n\n          var is_valid, error_message;\n\n          if (ruleObject.name === 'number') {\n            var _ruleObject$validator = ruleObject.validator(_this.input[attribute], ruleObject.options, _this.store, _this.input),\n                is_ok = _ruleObject$validator.is_ok,\n                message = _ruleObject$validator.message;\n\n            is_valid = is_ok;\n            error_message = message;\n          } else {\n            is_valid = ruleObject.validator(_this.input[attribute], ruleObject.options, _this.store, _this.input);\n          }\n\n          if (!is_valid) {\n            _this.addFailure(attribute, ruleObject, error_message);\n          }\n        });\n      });\n      return !this.error_count;\n    }\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isPassed\",\n    value: function isPassed() {\n      return this.check();\n    }\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n\n  }], [{\n    key: \"getRuleObject\",\n    value: function getRuleObject(rule) {\n      var is_rule_string = typeof rule === 'string';\n      var rule_object = {\n        name: is_rule_string ? rule : rule[0],\n        options: is_rule_string ? {} : rule[1] || {}\n      };\n      rule_object.validator = rule_object.name === 'custom' ? rule[1].func : (0,shared_.getPreBuildDVRs)()[rule_object.name].func;\n      return rule_object;\n    }\n  }]);\n\n  return Validator;\n}();\n\n/* harmony default export */ const validator_validator = (Validator);\n;// CONCATENATED MODULE: ./utils/validator/index.js\n\n\n;// CONCATENATED MODULE: ./stores/base-store.js\nfunction base_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction base_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { base_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { base_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction base_store_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction base_store_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? base_store_ownKeys(Object(source), !0).forEach(function (key) { base_store_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : base_store_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction base_store_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction base_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction base_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction base_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) base_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) base_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\n\nvar BaseStore = /*#__PURE__*/function () {\n  /**\n   * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n   */\n\n  /**\n   * Constructor of the base class that gets properties' name of child which should be saved in storages\n   *\n   * @param {Object} options - An object that contains the following properties:\n   *     @property {Object}   root_store - An object that contains the root store of the app.\n   *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n   *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n   *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n   *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n   */\n  function BaseStore() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    base_store_classCallCheck(this, BaseStore);\n\n    this.validation_errors = {};\n    this.validation_rules = {};\n    this.preSwitchAccountDisposer = null;\n    this.pre_switch_account_listener = null;\n    this.switchAccountDisposer = null;\n    this.switch_account_listener = null;\n    this.logoutDisposer = null;\n    this.logout_listener = null;\n    this.clientInitDisposer = null;\n    this.client_init_listener = null;\n    this.networkStatusChangeDisposer = null;\n    this.network_status_change_listener = null;\n    this.themeChangeDisposer = null;\n    this.theme_change_listener = null;\n    this.realAccountSignupEndedDisposer = null;\n    this.real_account_signup_ended_listener = null;\n    this.partial_fetch_time = 0;\n    (0,external_mobx_.makeObservable)(this, {\n      validation_errors: external_mobx_.observable,\n      validation_rules: external_mobx_.observable,\n      partial_fetch_time: external_mobx_.observable,\n      retrieveFromStorage: external_mobx_.action,\n      setValidationErrorMessages: external_mobx_.action,\n      setValidationRules: external_mobx_.action,\n      addRule: external_mobx_.action,\n      validateProperty: external_mobx_.action,\n      validateAllProperties: external_mobx_.action,\n      onSwitchAccount: external_mobx_.action.bound,\n      onPreSwitchAccount: external_mobx_.action.bound,\n      onLogout: external_mobx_.action.bound,\n      onClientInit: external_mobx_.action.bound,\n      onNetworkStatusChange: external_mobx_.action.bound,\n      onThemeChange: external_mobx_.action.bound,\n      onRealAccountSignupEnd: external_mobx_.action.bound,\n      disposePreSwitchAccount: external_mobx_.action.bound,\n      disposeSwitchAccount: external_mobx_.action.bound,\n      disposeLogout: external_mobx_.action.bound,\n      disposeClientInit: external_mobx_.action.bound,\n      disposeNetworkStatusChange: external_mobx_.action.bound,\n      disposeThemeChange: external_mobx_.action.bound,\n      disposeRealAccountSignupEnd: external_mobx_.action.bound,\n      onUnmount: external_mobx_.action.bound,\n      assertHasValidCache: external_mobx_.action.bound\n    });\n    var root_store = options.root_store,\n        local_storage_properties = options.local_storage_properties,\n        session_storage_properties = options.session_storage_properties,\n        validation_rules = options.validation_rules,\n        store_name = options.store_name;\n    Object.defineProperty(this, 'root_store', {\n      enumerable: false,\n      writable: true\n    });\n    Object.defineProperty(this, 'local_storage_properties', {\n      enumerable: false,\n      writable: true\n    });\n    Object.defineProperty(this, 'session_storage_properties', {\n      enumerable: false,\n      writable: true\n    });\n    var has_local_or_session_storage = local_storage_properties && local_storage_properties.length || session_storage_properties && session_storage_properties.length;\n\n    if (has_local_or_session_storage) {\n      if (!store_name) {\n        throw new Error('store_name is required for local/session storage');\n      }\n\n      Object.defineProperty(this, 'store_name', {\n        value: store_name,\n        enumerable: false,\n        writable: false\n      });\n    }\n\n    this.root_store = root_store;\n    this.local_storage_properties = local_storage_properties || [];\n    this.session_storage_properties = session_storage_properties || [];\n    setTimeout(function () {\n      _this.setValidationRules(validation_rules);\n\n      _this.setupReactionForLocalStorage();\n\n      _this.setupReactionForSessionStorage();\n\n      _this.retrieveFromStorage();\n    }, 0);\n  }\n  /**\n   * Returns an snapshot of the current store\n   *\n   * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n   *\n   * @return {Object} Returns a cloned object of the store.\n   */\n\n\n  base_store_createClass(BaseStore, [{\n    key: \"getSnapshot\",\n    value: function getSnapshot(properties) {\n      var snapshot = (0,external_mobx_.toJS)(this);\n\n      if (!(0,shared_.isEmptyObject)(this.root_store)) {\n        snapshot.root_store = this.root_store;\n      }\n\n      if (properties && properties.length) {\n        snapshot = properties.reduce(function (result, p) {\n          return Object.assign(result, base_store_defineProperty({}, p, snapshot[p]));\n        }, {});\n      }\n\n      return snapshot;\n    }\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n\n  }, {\n    key: \"setupReactionForLocalStorage\",\n    value: function setupReactionForLocalStorage() {\n      var _this2 = this;\n\n      if (this.local_storage_properties.length) {\n        (0,external_mobx_.reaction)(function () {\n          return _this2.local_storage_properties.map(function (i) {\n            return _this2[i];\n          });\n        }, function () {\n          return _this2.saveToStorage(_this2.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE);\n        });\n      }\n    }\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n\n  }, {\n    key: \"setupReactionForSessionStorage\",\n    value: function setupReactionForSessionStorage() {\n      var _this3 = this;\n\n      if (this.session_storage_properties.length) {\n        (0,external_mobx_.reaction)(function () {\n          return _this3.session_storage_properties.map(function (i) {\n            return _this3[i];\n          });\n        }, function () {\n          return _this3.saveToStorage(_this3.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE);\n        });\n      }\n    }\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n\n  }, {\n    key: \"saveToStorage\",\n    value: function saveToStorage(properties, storage) {\n      var snapshot = JSON.stringify(this.getSnapshot(properties), function (key, value) {\n        if (value !== null) return value;\n        return undefined;\n      });\n\n      if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n        localStorage.setItem(this.store_name, snapshot);\n      } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n        sessionStorage.setItem(this.store_name, snapshot);\n      }\n    }\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n\n  }, {\n    key: \"retrieveFromStorage\",\n    value: function retrieveFromStorage() {\n      var _this4 = this;\n\n      var local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n      var session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n      var snapshot = base_store_objectSpread(base_store_objectSpread({}, local_storage_snapshot), session_storage_snapshot);\n\n      Object.keys(snapshot).forEach(function (k) {\n        return _this4[k] = snapshot[k];\n      });\n    }\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n\n  }, {\n    key: \"setValidationErrorMessages\",\n    value: function setValidationErrorMessages(propertyName, messages) {\n      var _this5 = this;\n\n      var is_different = function is_different() {\n        return !!_this5.validation_errors[propertyName].filter(function (x) {\n          return !messages.includes(x);\n        }).concat(messages.filter(function (x) {\n          return !_this5.validation_errors[propertyName].includes(x);\n        })).length;\n      };\n\n      if (!this.validation_errors[propertyName] || is_different()) {\n        this.validation_errors[propertyName] = messages;\n      }\n    }\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n\n  }, {\n    key: \"setValidationRules\",\n    value: function setValidationRules() {\n      var _this6 = this;\n\n      var rules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.keys(rules).forEach(function (key) {\n        _this6.addRule(key, rules[key]);\n      });\n    }\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n\n  }, {\n    key: \"addRule\",\n    value: function addRule(property, rules) {\n      var _this7 = this;\n\n      this.validation_rules[property] = rules;\n      (0,external_mobx_.intercept)(this, property, function (change) {\n        _this7.validateProperty(property, change.newValue);\n\n        return change;\n      });\n    }\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n\n  }, {\n    key: \"validateProperty\",\n    value: function validateProperty(property, value) {\n      var _this8 = this;\n\n      var trigger = this.validation_rules[property].trigger;\n\n      var inputs = base_store_defineProperty({}, property, value !== undefined ? value : this[property]);\n\n      var validation_rules = base_store_defineProperty({}, property, this.validation_rules[property].rules || []);\n\n      if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n        inputs[trigger] = this[trigger];\n        validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n      }\n\n      var validator = new validator_validator(inputs, validation_rules, this);\n      validator.isPassed();\n      Object.keys(inputs).forEach(function (key) {\n        _this8.setValidationErrorMessages(key, validator.errors.get(key));\n      });\n    }\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n\n  }, {\n    key: \"validateAllProperties\",\n    value: function validateAllProperties() {\n      var _this9 = this;\n\n      var validation_rules = Object.keys(this.validation_rules);\n      var validation_errors = Object.keys(this.validation_errors);\n      validation_rules.forEach(function (p) {\n        _this9.validateProperty(p, _this9[p]);\n      }); // Remove keys that are present in error, but not in rules:\n\n      validation_errors.forEach(function (error) {\n        if (!validation_rules.includes(error)) {\n          delete _this9.validation_errors[error];\n        }\n      });\n    }\n  }, {\n    key: \"onSwitchAccount\",\n    value: function onSwitchAccount(listener) {\n      var _this10 = this;\n\n      if (listener) {\n        this.switch_account_listener = listener;\n        this.switchAccountDisposer = (0,external_mobx_.when)(function () {\n          return _this10.root_store.client.switch_broadcast;\n        }, function () {\n          try {\n            var result = _this10.switch_account_listener();\n\n            if (result && result.then && typeof result.then === 'function') {\n              result.then(function () {\n                _this10.root_store.client.switchEndSignal();\n\n                _this10.onSwitchAccount(_this10.switch_account_listener);\n              });\n            } else {\n              throw new Error('Switching account listeners are required to return a promise.');\n            }\n          } catch (error) {\n            // there is no listener currently active. so we can just ignore the error raised from treating\n            // a null object as a function. Although, in development mode, we throw a console error.\n            if (!(0,shared_.isProduction)()) {\n              console.error(error); // eslint-disable-line\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onPreSwitchAccount\",\n    value: function onPreSwitchAccount(listener) {\n      var _this11 = this;\n\n      if (listener) {\n        this.pre_switch_account_listener = listener;\n        this.preSwitchAccountDisposer = (0,external_mobx_.when)(function () {\n          return _this11.root_store.client.pre_switch_broadcast;\n        }, function () {\n          try {\n            var result = _this11.pre_switch_account_listener();\n\n            if (result && result.then && typeof result.then === 'function') {\n              result.then(function () {\n                _this11.root_store.client.setPreSwitchAccount(false);\n\n                _this11.onPreSwitchAccount(_this11.pre_switch_account_listener);\n              });\n            } else {\n              throw new Error('Pre-switch account listeners are required to return a promise.');\n            }\n          } catch (error) {\n            // there is no listener currently active. so we can just ignore the error raised from treating\n            // a null object as a function. Although, in development mode, we throw a console error.\n            if (!(0,shared_.isProduction)()) {\n              console.error(error); // eslint-disable-line\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onLogout\",\n    value: function onLogout(listener) {\n      var _this12 = this;\n\n      this.logoutDisposer = (0,external_mobx_.when)(function () {\n        return _this12.root_store.client.has_logged_out;\n      }, /*#__PURE__*/base_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                result = _this12.logout_listener();\n\n                if (!(result && result.then && typeof result.then === 'function')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                result.then(function () {\n                  _this12.root_store.client.setLogout(false);\n\n                  _this12.onLogout(_this12.logout_listener);\n                });\n                _context.next = 7;\n                break;\n\n              case 6:\n                throw new Error('Logout listeners are required to return a promise.');\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                // there is no listener currently active. so we can just ignore the error raised from treating\n                // a null object as a function. Although, in development mode, we throw a console error.\n                if (!(0,shared_.isProduction)()) {\n                  console.error(_context.t0); // eslint-disable-line\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      })));\n      this.logout_listener = listener;\n    }\n  }, {\n    key: \"onClientInit\",\n    value: function onClientInit(listener) {\n      var _this13 = this;\n\n      this.clientInitDisposer = (0,external_mobx_.when)(function () {\n        return _this13.root_store.client.initialized_broadcast;\n      }, /*#__PURE__*/base_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                result = _this13.client_init_listener();\n\n                if (!(result && result.then && typeof result.then === 'function')) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                result.then(function () {\n                  _this13.root_store.client.setInitialized(false);\n\n                  _this13.onClientInit(_this13.client_init_listener);\n                });\n                _context2.next = 7;\n                break;\n\n              case 6:\n                throw new Error('Client init listeners are required to return a promise.');\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                // there is no listener currently active. so we can just ignore the error raised from treating\n                // a null object as a function. Although, in development mode, we throw a console error.\n                if (!(0,shared_.isProduction)()) {\n                  console.error(_context2.t0); // eslint-disable-line\n                }\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      })));\n      this.client_init_listener = listener;\n    }\n  }, {\n    key: \"onNetworkStatusChange\",\n    value: function onNetworkStatusChange(listener) {\n      var _this14 = this;\n\n      this.networkStatusChangeDisposer = (0,external_mobx_.reaction)(function () {\n        return _this14.root_store.common.is_network_online;\n      }, function (is_online) {\n        try {\n          _this14.network_status_change_listener(is_online);\n        } catch (error) {\n          // there is no listener currently active. so we can just ignore the error raised from treating\n          // a null object as a function. Although, in development mode, we throw a console error.\n          if (!(0,shared_.isProduction)()) {\n            console.error(error); // eslint-disable-line\n          }\n        }\n      });\n      this.network_status_change_listener = listener;\n    }\n  }, {\n    key: \"onThemeChange\",\n    value: function onThemeChange(listener) {\n      var _this15 = this;\n\n      this.themeChangeDisposer = (0,external_mobx_.reaction)(function () {\n        return _this15.root_store.ui.is_dark_mode_on;\n      }, function (is_dark_mode_on) {\n        try {\n          _this15.theme_change_listener(is_dark_mode_on);\n        } catch (error) {\n          // there is no listener currently active. so we can just ignore the error raised from treating\n          // a null object as a function. Although, in development mode, we throw a console error.\n          if (!(0,shared_.isProduction)()) {\n            console.error(error); // eslint-disable-line\n          }\n        }\n      });\n      this.theme_change_listener = listener;\n    }\n  }, {\n    key: \"onRealAccountSignupEnd\",\n    value: function onRealAccountSignupEnd(listener) {\n      var _this16 = this;\n\n      this.realAccountSignupEndedDisposer = (0,external_mobx_.when)(function () {\n        return _this16.root_store.ui.has_real_account_signup_ended;\n      }, function () {\n        try {\n          var result = _this16.real_account_signup_ended_listener();\n\n          if (result && result.then && typeof result.then === 'function') {\n            result.then(function () {\n              _this16.root_store.ui.setRealAccountSignupEnd(false);\n\n              _this16.onRealAccountSignupEnd(_this16.real_account_signup_ended_listener);\n            });\n          } else {\n            throw new Error('Real account signup listeners are required to return a promise.');\n          }\n        } catch (error) {\n          // there is no listener currently active. so we can just ignore the error raised from treating\n          // a null object as a function. Although, in development mode, we throw a console error.\n          if (!(0,shared_.isProduction)()) {\n            console.error(error); // eslint-disable-line\n          }\n        }\n      });\n      this.real_account_signup_ended_listener = listener;\n    }\n  }, {\n    key: \"disposePreSwitchAccount\",\n    value: function disposePreSwitchAccount() {\n      if (typeof this.preSwitchAccountDisposer === 'function') {\n        this.preSwitchAccountDisposer();\n      }\n\n      this.pre_switch_account_listener = null;\n    }\n  }, {\n    key: \"disposeSwitchAccount\",\n    value: function disposeSwitchAccount() {\n      if (typeof this.switchAccountDisposer === 'function') {\n        this.switchAccountDisposer();\n      }\n\n      this.switch_account_listener = null;\n    }\n  }, {\n    key: \"disposeLogout\",\n    value: function disposeLogout() {\n      if (typeof this.logoutDisposer === 'function') {\n        this.logoutDisposer();\n      }\n\n      this.logout_listener = null;\n    }\n  }, {\n    key: \"disposeClientInit\",\n    value: function disposeClientInit() {\n      if (typeof this.clientInitDisposer === 'function') {\n        this.clientInitDisposer();\n      }\n\n      this.client_init_listener = null;\n    }\n  }, {\n    key: \"disposeNetworkStatusChange\",\n    value: function disposeNetworkStatusChange() {\n      if (typeof this.networkStatusChangeDisposer === 'function') {\n        this.networkStatusChangeDisposer();\n      }\n\n      this.network_status_change_listener = null;\n    }\n  }, {\n    key: \"disposeThemeChange\",\n    value: function disposeThemeChange() {\n      if (typeof this.themeChangeDisposer === 'function') {\n        this.themeChangeDisposer();\n      }\n\n      this.theme_change_listener = null;\n    }\n  }, {\n    key: \"disposeRealAccountSignupEnd\",\n    value: function disposeRealAccountSignupEnd() {\n      if (typeof this.realAccountSignupEndedDisposer === 'function') {\n        this.realAccountSignupEndedDisposer();\n      }\n\n      this.real_account_signup_ended_listener = null;\n    }\n  }, {\n    key: \"onUnmount\",\n    value: function onUnmount() {\n      this.disposePreSwitchAccount();\n      this.disposeSwitchAccount();\n      this.disposeLogout();\n      this.disposeClientInit();\n      this.disposeNetworkStatusChange();\n      this.disposeThemeChange();\n      this.disposeRealAccountSignupEnd();\n    }\n  }, {\n    key: \"assertHasValidCache\",\n    value: function assertHasValidCache(loginid) {\n      // account was changed when this was unmounted.\n      if (this.root_store.client.loginid !== loginid) {\n        for (var _len = arguments.length, reactions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          reactions[_key - 1] = arguments[_key];\n        }\n\n        reactions.forEach(function (act) {\n          return act();\n        });\n        this.partial_fetch_time = false;\n      }\n    }\n  }]);\n\n  return BaseStore;\n}();\n\nBaseStore.STORAGES = Object.freeze({\n  LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n  SESSION_STORAGE: Symbol('SESSION_STORAGE')\n});\n\n;// CONCATENATED MODULE: ./stores/general-store.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction general_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction general_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { general_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { general_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction general_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction general_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction general_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) general_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) general_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\nvar GeneralStore = /*#__PURE__*/function (_BaseStore) {\n  _inherits(GeneralStore, _BaseStore);\n\n  var _super = _createSuper(GeneralStore);\n\n  function GeneralStore(_ref) {\n    var _this;\n\n    var root_store = _ref.root_store,\n        WS = _ref.WS;\n\n    general_store_classCallCheck(this, GeneralStore);\n\n    _this = _super.call(this, {\n      root_store: root_store\n    });\n    _this.is_loading = false;\n    _this.is_p2p_visible = false;\n    _this.p2p_notification_count = 0;\n    _this.cashier_route_tab_index = 0;\n    _this.is_deposit = false;\n    _this.should_show_all_available_currencies = false;\n    _this.is_cashier_onboarding = true;\n    _this.deposit_target = '';\n    _this.should_set_currency_modal_title_change = false;\n    _this.p2p_advertiser_error = undefined;\n    _this.has_set_currency = false;\n    _this.should_percentage_reset = false;\n    _this.percentage = 0;\n    _this.show_p2p_in_cashier_onboarding = false;\n\n    _this.onRemount = function () {};\n\n    _this.p2p_completed_orders = null;\n    _this.active_container = constants.containers.deposit;\n    _this.is_populating_values = false;\n    (0,external_mobx_.makeObservable)(_assertThisInitialized(_this), {\n      is_loading: external_mobx_.observable,\n      is_p2p_visible: external_mobx_.observable,\n      p2p_notification_count: external_mobx_.observable,\n      cashier_route_tab_index: external_mobx_.observable,\n      is_deposit: external_mobx_.observable,\n      should_show_all_available_currencies: external_mobx_.observable,\n      is_cashier_onboarding: external_mobx_.observable,\n      deposit_target: external_mobx_.observable,\n      should_set_currency_modal_title_change: external_mobx_.observable,\n      p2p_advertiser_error: external_mobx_.observable,\n      has_set_currency: external_mobx_.observable,\n      should_percentage_reset: external_mobx_.observable,\n      percentage: external_mobx_.observable,\n      show_p2p_in_cashier_onboarding: external_mobx_.observable,\n      onRemount: external_mobx_.observable,\n      p2p_completed_orders: external_mobx_.observable,\n      setOnRemount: external_mobx_.action.bound,\n      is_crypto: external_mobx_.computed,\n      is_p2p_enabled: external_mobx_.computed,\n      p2p_unseen_notifications: external_mobx_.computed,\n      showP2pInCashierOnboarding: external_mobx_.action.bound,\n      attachCashierToMenu: external_mobx_.action.bound,\n      replaceCashierMenuOnclick: external_mobx_.action.bound,\n      setHasSetCurrency: external_mobx_.action.bound,\n      changeSetCurrencyModalTitle: external_mobx_.action.bound,\n      onMountCashierOnboarding: external_mobx_.action.bound,\n      calculatePercentage: external_mobx_.action.bound,\n      percentageSelectorSelectionStatus: external_mobx_.action.bound,\n      setIsDeposit: external_mobx_.action.bound,\n      setShouldShowAllAvailableCurrencies: external_mobx_.action.bound,\n      setIsCashierOnboarding: external_mobx_.action.bound,\n      setDepositTarget: external_mobx_.action.bound,\n      continueRoute: external_mobx_.action.bound,\n      setAccountSwitchListener: external_mobx_.action.bound,\n      init: external_mobx_.action.bound,\n      getAdvertizerError: external_mobx_.action.bound,\n      setP2pAdvertiserError: external_mobx_.action.bound,\n      checkP2pStatus: external_mobx_.action.bound,\n      setP2pCompletedOrders: external_mobx_.action.bound,\n      getP2pCompletedOrders: external_mobx_.action.bound,\n      onMountCommon: external_mobx_.action.bound,\n      setCashierTabIndex: external_mobx_.action.bound,\n      setNotificationCount: external_mobx_.action.bound,\n      setIsP2pVisible: external_mobx_.action.bound,\n      is_cashier_locked: external_mobx_.computed,\n      is_system_maintenance: external_mobx_.computed,\n      setLoading: external_mobx_.action.bound,\n      setActiveTab: external_mobx_.action.bound\n    });\n    _this.WS = WS;\n    _this.root_store = root_store;\n    (0,external_mobx_.when)(function () {\n      return _this.root_store.client.is_logged_in;\n    }, function () {\n      _this.setHasSetCurrency();\n\n      _this.attachCashierToMenu();\n    });\n\n    if (!_this.has_set_currency) {\n      _this.changeSetCurrencyModalTitle();\n    }\n\n    (0,external_mobx_.reaction)(function () {\n      return [_this.root_store.client.switched, _this.root_store.client.is_logged_in, _this.root_store.client.currency];\n    }, function () {\n      _this.init();\n    });\n    return _this;\n  }\n\n  general_store_createClass(GeneralStore, [{\n    key: \"setOnRemount\",\n    value: function setOnRemount(func) {\n      this.onRemount = func;\n    }\n  }, {\n    key: \"is_crypto\",\n    get: function get() {\n      var currency = this.root_store.client.currency;\n      return !!currency && (0,shared_.isCryptocurrency)(currency);\n    }\n  }, {\n    key: \"is_p2p_enabled\",\n    get: function get() {\n      return this.is_p2p_visible && !this.root_store.client.is_eu;\n    }\n    /**\n     * Gets the notifications from local storage, within p2p_settings, where it checks which notification has\n     * been seen. The number of unseen notifications is displayed in vertical tab, notifications count, for P2P.\n     *\n     * @returns {number} Notifications that have not been seen by the user.\n     */\n\n  }, {\n    key: \"p2p_unseen_notifications\",\n    get: function get() {\n      var p2p_settings = JSON.parse(localStorage.getItem('p2p_settings') || '{}');\n      var local_storage_settings = p2p_settings[this.root_store.client.loginid];\n\n      if ((0,shared_.isEmptyObject)(local_storage_settings)) {\n        return 0;\n      }\n\n      var unseen_notifications = local_storage_settings.notifications.filter(function (notification) {\n        return !notification.is_seen;\n      });\n      return unseen_notifications.length;\n    }\n  }, {\n    key: \"showP2pInCashierOnboarding\",\n    value: function showP2pInCashierOnboarding() {\n      var _this$root_store$clie = this.root_store.client,\n          account_list = _this$root_store$clie.account_list,\n          is_virtual = _this$root_store$clie.is_virtual;\n      var is_p2p_restricted = this.p2p_advertiser_error === 'RestrictedCountry';\n      var has_usd_currency = account_list.some(function (account) {\n        return account.title === 'USD';\n      });\n      var has_user_fiat_currency = account_list.some(function (account) {\n        return !(0,shared_.isCryptocurrency)(account.title) && account.title !== 'Real';\n      });\n\n      if (is_p2p_restricted || is_virtual || has_user_fiat_currency && !has_usd_currency) {\n        this.show_p2p_in_cashier_onboarding = false;\n      } else {\n        this.show_p2p_in_cashier_onboarding = true;\n      }\n    }\n  }, {\n    key: \"attachCashierToMenu\",\n    value: function attachCashierToMenu() {\n      var _this$root_store = this.root_store,\n          menu = _this$root_store.menu,\n          ui = _this$root_store.ui;\n\n      if (!this.has_set_currency) {\n        this.setHasSetCurrency();\n      }\n\n      menu.attach({\n        id: 'dt_cashier_tab',\n        icon: /*#__PURE__*/external_react_default().createElement(components_cashier_notifications, {\n          p2p_notification_count: this.p2p_notification_count\n        }),\n        text: function text() {\n          return (0,translations_.localize)('Cashier');\n        },\n        link_to: this.has_set_currency && shared_.routes.cashier,\n        onClick: !this.has_set_currency && ui.toggleSetCurrencyModal,\n        login_only: true\n      });\n    }\n  }, {\n    key: \"replaceCashierMenuOnclick\",\n    value: function replaceCashierMenuOnclick() {\n      var _this$root_store2 = this.root_store,\n          menu = _this$root_store2.menu,\n          ui = _this$root_store2.ui;\n      this.setHasSetCurrency();\n      menu.update({\n        id: 'dt_cashier_tab',\n        icon: /*#__PURE__*/external_react_default().createElement(components_cashier_notifications, {\n          p2p_notification_count: this.p2p_notification_count\n        }),\n        text: function text() {\n          return (0,translations_.localize)('Cashier');\n        },\n        link_to: this.has_set_currency && shared_.routes.cashier,\n        onClick: !this.has_set_currency ? ui.toggleSetCurrencyModal : false,\n        login_only: true\n      }, 1);\n    }\n  }, {\n    key: \"setHasSetCurrency\",\n    value: function setHasSetCurrency() {\n      var _this$root_store$clie2 = this.root_store.client,\n          account_list = _this$root_store$clie2.account_list,\n          has_active_real_account = _this$root_store$clie2.has_active_real_account;\n      this.has_set_currency = account_list.filter(function (account) {\n        return !account.is_virtual;\n      }).some(function (account) {\n        return account.title !== 'Real';\n      }) || !has_active_real_account;\n    }\n  }, {\n    key: \"changeSetCurrencyModalTitle\",\n    value: function changeSetCurrencyModalTitle() {\n      this.should_set_currency_modal_title_change = true;\n    }\n  }, {\n    key: \"onMountCashierOnboarding\",\n    value: function () {\n      var _onMountCashierOnboarding = general_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _payment_agent$all_pa, _payment_agent$all_pa2;\n\n        var _this$root_store$modu, account_prompt_dialog, payment_agent, agent_list;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$root_store$modu = this.root_store.modules.cashier, account_prompt_dialog = _this$root_store$modu.account_prompt_dialog, payment_agent = _this$root_store$modu.payment_agent;\n\n                if (!this.has_set_currency) {\n                  this.setHasSetCurrency();\n                }\n\n                this.setIsCashierOnboarding(true);\n                account_prompt_dialog.resetIsConfirmed();\n                this.setLoading(true);\n\n                if ((_payment_agent$all_pa = payment_agent.all_payment_agent_list) !== null && _payment_agent$all_pa !== void 0 && (_payment_agent$all_pa2 = _payment_agent$all_pa.paymentagent_list) !== null && _payment_agent$all_pa2 !== void 0 && _payment_agent$all_pa2.list) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 8;\n                return payment_agent.getAllPaymentAgentList();\n\n              case 8:\n                agent_list = _context.sent;\n                payment_agent.setAllPaymentAgentList(agent_list);\n\n              case 10:\n                this.setLoading(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onMountCashierOnboarding() {\n        return _onMountCashierOnboarding.apply(this, arguments);\n      }\n\n      return onMountCashierOnboarding;\n    }()\n  }, {\n    key: \"calculatePercentage\",\n    value: function calculatePercentage() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root_store.modules.cashier.crypto_fiat_converter.converter_from_amount;\n      var _this$root_store3 = this.root_store,\n          client = _this$root_store3.client,\n          modules = _this$root_store3.modules;\n      var account_transfer = modules.cashier.account_transfer;\n\n      if (this.active_container === account_transfer.container) {\n        this.percentage = +(amount / +account_transfer.selected_from.balance * 100).toFixed(0);\n      } else {\n        this.percentage = +(amount / +client.balance * 100).toFixed(0);\n      }\n\n      if (!isFinite(this.percentage)) {\n        this.percentage = 0;\n      }\n    }\n  }, {\n    key: \"percentageSelectorSelectionStatus\",\n    value: function percentageSelectorSelectionStatus(should_percentage_reset) {\n      this.should_percentage_reset = should_percentage_reset;\n\n      if (should_percentage_reset) {\n        this.percentage = 0;\n      }\n    }\n  }, {\n    key: \"setIsDeposit\",\n    value: function setIsDeposit(is_deposit) {\n      this.is_deposit = is_deposit;\n    }\n  }, {\n    key: \"setShouldShowAllAvailableCurrencies\",\n    value: function setShouldShowAllAvailableCurrencies(value) {\n      this.should_show_all_available_currencies = value;\n    }\n  }, {\n    key: \"setIsCashierOnboarding\",\n    value: function setIsCashierOnboarding(is_cashier_onboarding) {\n      this.is_cashier_onboarding = is_cashier_onboarding;\n    }\n  }, {\n    key: \"setDepositTarget\",\n    value: function setDepositTarget(target) {\n      this.deposit_target = target;\n    }\n  }, {\n    key: \"continueRoute\",\n    value: function continueRoute() {\n      this.root_store.common.routeTo(this.deposit_target);\n    }\n  }, {\n    key: \"setAccountSwitchListener\",\n    value: function setAccountSwitchListener() {\n      // cashier inits once and tries to stay active until switching account\n      // since cashier calls take a long time to respond or display in iframe\n      // so we don't have any unmount function here and everything gets reset on switch instead\n      this.disposeSwitchAccount();\n      this.onSwitchAccount(this.accountSwitcherListener);\n    } // Initialise P2P attributes on app load without mounting the entire cashier\n\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = general_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this$root_store4, _this$root_store4$cli, is_logged_in, switched, modules, _modules$cashier, payment_agent, payment_agent_transfer, withdraw;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.root_store.modules.cashier) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _this$root_store4 = this.root_store, _this$root_store4$cli = _this$root_store4.client, is_logged_in = _this$root_store4$cli.is_logged_in, switched = _this$root_store4$cli.switched, modules = _this$root_store4.modules;\n                _modules$cashier = modules.cashier, payment_agent = _modules$cashier.payment_agent, payment_agent_transfer = _modules$cashier.payment_agent_transfer, withdraw = _modules$cashier.withdraw; // wait for client settings to be populated in client-store\n\n                _context2.next = 5;\n                return this.WS.wait('get_settings');\n\n              case 5:\n                if (!is_logged_in) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _context2.next = 8;\n                return this.getAdvertizerError();\n\n              case 8:\n                if (switched) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                this.checkP2pStatus();\n                payment_agent.setPaymentAgentList().then(payment_agent.filterPaymentAgentList);\n\n                if (!payment_agent_transfer.is_payment_agent) {\n                  payment_agent_transfer.checkIsPaymentAgent();\n                } // check if withdrawal limit is reached\n                // if yes, this will trigger to show a notification\n\n\n                _context2.next = 14;\n                return withdraw.check10kLimit();\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"getAdvertizerError\",\n    value: function () {\n      var _getAdvertizerError = general_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var advertiser_info;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.WS.authorized.p2pAdvertiserInfo();\n\n              case 2:\n                advertiser_info = _context3.sent;\n                this.setP2pAdvertiserError((0,shared_.getPropertyValue)(advertiser_info, ['error', 'code']));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAdvertizerError() {\n        return _getAdvertizerError.apply(this, arguments);\n      }\n\n      return getAdvertizerError;\n    }()\n  }, {\n    key: \"setP2pAdvertiserError\",\n    value: function setP2pAdvertiserError(value) {\n      this.p2p_advertiser_error = value;\n    }\n  }, {\n    key: \"checkP2pStatus\",\n    value: function checkP2pStatus() {\n      var advertiser_error = this.p2p_advertiser_error;\n      var is_p2p_restricted = advertiser_error === 'RestrictedCountry' || advertiser_error === 'RestrictedCurrency';\n      this.setIsP2pVisible(!(is_p2p_restricted || this.root_store.client.is_virtual));\n    }\n  }, {\n    key: \"setP2pCompletedOrders\",\n    value: function setP2pCompletedOrders(p2p_completed_orders) {\n      this.p2p_completed_orders = p2p_completed_orders;\n    }\n  }, {\n    key: \"getP2pCompletedOrders\",\n    value: function () {\n      var _getP2pCompletedOrders = general_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.WS.authorized.send({\n                  p2p_order_list: 1,\n                  active: 0\n                }).then(function (response) {\n                  if (!(response !== null && response !== void 0 && response.error)) {\n                    var p2p_order_list = response.p2p_order_list;\n\n                    _this2.setP2pCompletedOrders(p2p_order_list.list);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getP2pCompletedOrders() {\n        return _getP2pCompletedOrders.apply(this, arguments);\n      }\n\n      return getP2pCompletedOrders;\n    }()\n  }, {\n    key: \"onMountCommon\",\n    value: function () {\n      var _onMountCommon = general_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(should_remount) {\n        var _this$root_store5, client, common, modules, is_from_derivgo, routeTo, _modules$cashier2, account_transfer, onramp, payment_agent, payment_agent_transfer, transaction_history;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this$root_store5 = this.root_store, client = _this$root_store5.client, common = _this$root_store5.common, modules = _this$root_store5.modules;\n                is_from_derivgo = common.is_from_derivgo, routeTo = common.routeTo;\n                _modules$cashier2 = modules.cashier, account_transfer = _modules$cashier2.account_transfer, onramp = _modules$cashier2.onramp, payment_agent = _modules$cashier2.payment_agent, payment_agent_transfer = _modules$cashier2.payment_agent_transfer, transaction_history = _modules$cashier2.transaction_history;\n                this.setNotificationCount(this.p2p_unseen_notifications);\n\n                if (!client.is_logged_in) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                if (!this.is_populating_values) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 7:\n                this.is_populating_values = true;\n\n                if (should_remount) {\n                  this.setOnRemount(this.onMountCommon);\n                } // we need to see if client's country has PA\n                // if yes, we can show the PA tab in cashier\n\n\n                this.setLoading(true);\n                _context5.next = 12;\n                return payment_agent.setPaymentAgentList();\n\n              case 12:\n                _context5.next = 14;\n                return payment_agent.filterPaymentAgentList();\n\n              case 14:\n                this.setLoading(false);\n\n                if (!payment_agent_transfer.is_payment_agent) {\n                  payment_agent_transfer.checkIsPaymentAgent();\n                }\n\n                if (!account_transfer.accounts_list.length) {\n                  account_transfer.sortAccountsTransfer(null, is_from_derivgo);\n                }\n\n                if (!payment_agent.is_payment_agent_visible && window.location.pathname.endsWith(shared_.routes.cashier_pa)) {\n                  routeTo(shared_.routes.cashier_deposit);\n                }\n\n                if (!onramp.is_onramp_tab_visible && window.location.pathname.endsWith(shared_.routes.cashier_onramp)) {\n                  routeTo(shared_.routes.cashier_deposit);\n                }\n\n                if (!transaction_history.is_crypto_transactions_visible && window.location.pathname.endsWith(shared_.routes.cashier_crypto_transactions)) {\n                  routeTo(shared_.routes.cashier_deposit);\n                  transaction_history.setIsCryptoTransactionsVisible(true);\n                  transaction_history.onMount();\n                }\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onMountCommon(_x) {\n        return _onMountCommon.apply(this, arguments);\n      }\n\n      return onMountCommon;\n    }()\n  }, {\n    key: \"setCashierTabIndex\",\n    value: function setCashierTabIndex(index) {\n      this.cashier_route_tab_index = index;\n    }\n  }, {\n    key: \"setNotificationCount\",\n    value: function setNotificationCount(notification_count) {\n      this.p2p_notification_count = notification_count;\n    }\n  }, {\n    key: \"setIsP2pVisible\",\n    value: function setIsP2pVisible(is_p2p_visible) {\n      this.is_p2p_visible = is_p2p_visible;\n\n      if (!is_p2p_visible && window.location.pathname.endsWith(shared_.routes.cashier_p2p)) {\n        var _this$root_store$modu2;\n\n        this.root_store.common.routeTo((_this$root_store$modu2 = this.root_store.modules.cashier.account_prompt_dialog.last_location) !== null && _this$root_store$modu2 !== void 0 ? _this$root_store$modu2 : shared_.routes.cashier_deposit);\n      }\n    }\n  }, {\n    key: \"is_cashier_locked\",\n    get: function get() {\n      var account_status = this.root_store.client.account_status;\n      if (!(account_status !== null && account_status !== void 0 && account_status.status)) return false;\n      return account_status.status.some(function (status_name) {\n        return status_name === 'cashier_locked';\n      });\n    }\n  }, {\n    key: \"is_system_maintenance\",\n    get: function get() {\n      var account_status = this.root_store.client.account_status;\n      if (!(account_status !== null && account_status !== void 0 && account_status.cashier_validation)) return false;\n      return account_status.cashier_validation.some(function (validation) {\n        return validation === 'system_maintenance';\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(is_loading) {\n      this.is_loading = is_loading;\n    }\n  }, {\n    key: \"setActiveTab\",\n    value: function setActiveTab(container) {\n      this.active_container = container;\n    }\n  }, {\n    key: \"accountSwitcherListener\",\n    value: function accountSwitcherListener() {\n      var _this$root_store6 = this.root_store,\n          client = _this$root_store6.client,\n          modules = _this$root_store6.modules;\n      var _modules$cashier3 = modules.cashier,\n          iframe = _modules$cashier3.iframe,\n          payment_agent = _modules$cashier3.payment_agent,\n          general_store = _modules$cashier3.general_store;\n      var active_container = general_store.active_container;\n      var container = constants.map_action[active_container];\n      client.setVerificationCode('', container);\n      iframe.clearIframe();\n      this.payment_agent = payment_agent;\n\n      if (payment_agent.active_tab_index === 1 && window.location.pathname.endsWith(shared_.routes.cashier_pa)) {\n        payment_agent.setActiveTab(1);\n      }\n\n      this.is_populating_values = false;\n      this.onRemount();\n      return Promise.resolve();\n    }\n  }]);\n\n  return GeneralStore;\n}(BaseStore);\n\n\n;// CONCATENATED MODULE: ./stores/iframe-store.ts\nfunction iframe_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction iframe_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { iframe_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { iframe_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction iframe_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction iframe_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction iframe_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) iframe_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) iframe_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar IframeStore = /*#__PURE__*/function () {\n  function IframeStore(root_store) {\n    iframe_store_classCallCheck(this, IframeStore);\n\n    this.root_store = root_store;\n    this.iframe_height = 0;\n    this.iframe_url = '';\n    this.is_session_timeout = true;\n    this.onIframeLoaded = null;\n    this.timeout_session = null;\n    (0,external_mobx_.makeObservable)(this, {\n      iframe_height: external_mobx_.observable,\n      iframe_url: external_mobx_.observable,\n      is_session_timeout: external_mobx_.observable,\n      timeout_session: external_mobx_.observable,\n      setSessionTimeout: external_mobx_.action.bound,\n      checkIframeLoaded: external_mobx_.action.bound,\n      clearTimeoutCashierUrl: external_mobx_.action.bound,\n      setTimeoutCashierUrl: external_mobx_.action.bound,\n      setIframeUrl: external_mobx_.action.bound,\n      setContainerHeight: external_mobx_.action.bound,\n      clearIframe: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n  }\n\n  iframe_store_createClass(IframeStore, [{\n    key: \"setSessionTimeout\",\n    value: function setSessionTimeout(is_session_time_out) {\n      this.is_session_timeout = is_session_time_out;\n\n      if (is_session_time_out) {\n        this.removeOnIframeLoaded();\n      }\n    }\n  }, {\n    key: \"checkIframeLoaded\",\n    value: function () {\n      var _checkIframeLoaded = iframe_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _this$root_store, modules, ui;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$root_store = this.root_store, modules = _this$root_store.modules, ui = _this$root_store.ui;\n                this.removeOnIframeLoaded();\n\n                this.onIframeLoaded = function (e) {\n                  if (/cashier|doughflow/.test(e.origin)) {\n                    modules.cashier.general_store.setLoading(false); // set the height of the container after content loads so that the\n                    // loading bar stays vertically centered until the end\n\n                    if (ui.is_mobile) {\n                      _this.setContainerHeight(window.innerHeight - 100);\n                    } else {\n                      _this.setContainerHeight(window.innerHeight - 190);\n                    } // do not remove the listener\n                    // on every iframe screen change we need to update the height to more/less to match the new content\n\n                  }\n                };\n\n                window.addEventListener('message', this.onIframeLoaded, false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function checkIframeLoaded() {\n        return _checkIframeLoaded.apply(this, arguments);\n      }\n\n      return checkIframeLoaded;\n    }()\n  }, {\n    key: \"removeOnIframeLoaded\",\n    value: function removeOnIframeLoaded() {\n      if (this.onIframeLoaded) {\n        window.removeEventListener('message', this.onIframeLoaded, false);\n        this.onIframeLoaded = null;\n      }\n    }\n  }, {\n    key: \"clearTimeoutCashierUrl\",\n    value: function clearTimeoutCashierUrl() {\n      if (this.timeout_session) {\n        clearTimeout(this.timeout_session);\n      }\n    }\n  }, {\n    key: \"setTimeoutCashierUrl\",\n    value: function setTimeoutCashierUrl(is_withdrawal) {\n      var _this2 = this;\n\n      this.clearTimeoutCashierUrl();\n\n      if (is_withdrawal) {\n        this.timeout_session = setTimeout(function () {\n          _this2.setSessionTimeout(true);\n        }, 60000);\n      }\n    }\n  }, {\n    key: \"setIframeUrl\",\n    value: function setIframeUrl(url) {\n      var _this$root_store2 = this.root_store,\n          client = _this$root_store2.client,\n          ui = _this$root_store2.ui;\n\n      if (url) {\n        this.iframe_url = \"\".concat(url, \"&theme=\").concat(ui.is_dark_mode_on ? 'dark' : 'light');\n        var container = this.root_store.modules.cashier.general_store.active_container;\n\n        if (container in constants.map_action) {\n          var container_key = container; // after we set iframe url we can clear verification code\n\n          client.setVerificationCode('', constants.map_action[container_key]);\n        }\n      } else {\n        this.iframe_url = url;\n      }\n    }\n  }, {\n    key: \"setContainerHeight\",\n    value: function setContainerHeight(height) {\n      this.iframe_height = height;\n    }\n  }, {\n    key: \"clearIframe\",\n    value: function clearIframe() {\n      this.setContainerHeight(0);\n      this.setIframeUrl('');\n      this.clearTimeoutCashierUrl();\n      this.setSessionTimeout(true);\n    }\n  }]);\n\n  return IframeStore;\n}();\n\n\n;// CONCATENATED MODULE: ./config/on-ramp-providers.js\n\n\nvar createBanxaProvider = function createBanxaProvider(store) {\n  return {\n    icon: {\n      dark: 'IcCashierBanxaDark',\n      light: 'IcCashierBanxaLight'\n    },\n    name: 'Banxa',\n    getDescription: function getDescription() {\n      return (0,translations_.localize)('A fast and secure fiat-to-crypto payment service. Deposit cryptocurrencies from anywhere in the world using your credit/debit cards and bank transfers.');\n    },\n    getAllowedResidencies: function getAllowedResidencies() {\n      return ['*'];\n    },\n    getPaymentIcons: function getPaymentIcons() {\n      return [{\n        dark: 'IcCashierVisaDark',\n        light: 'IcCashierVisaLight'\n      }, {\n        dark: 'IcCashierMastercardDark',\n        light: 'IcCashierMastercardLight'\n      }, {\n        dark: 'IcCashierBpayDark',\n        light: 'IcCashierBpayLight'\n      }, {\n        dark: 'IcCashierSepaDark',\n        light: 'IcCashierSepaLight'\n      }, {\n        dark: 'IcCashierBlueshyftDark',\n        light: 'IcCashierBlueshyftLight'\n      }, {\n        dark: 'IcCashierFlexepinDark',\n        light: 'IcCashierFlexepinLight'\n      }, {\n        dark: 'IcCashierPayIdDark',\n        light: 'IcCashierPayIdLight'\n      }, {\n        dark: 'IcCashierPoliDark',\n        light: 'IcCashierPoliLight'\n      }, {\n        dark: 'IcCashierApplePay',\n        light: 'IcCashierApplePay'\n      }, {\n        dark: 'IcCashierInteracEtransfer',\n        light: 'IcCashierInteracEtransfer'\n      }, {\n        dark: 'IcCashierIdeal',\n        light: 'IcCashierIdeal'\n      }, {\n        dark: 'IcCashierPostBillPayDark',\n        light: 'IcCashierPostBillPayLight'\n      }, {\n        dark: 'IcCashierSofort',\n        light: 'IcCashierSofort'\n      }];\n    },\n    getScriptDependencies: function getScriptDependencies() {\n      return [];\n    },\n    // None.\n    getDefaultFromCurrency: function getDefaultFromCurrency() {\n      return '';\n    },\n    getFromCurrencies: function getFromCurrencies() {\n      return ['*'];\n    },\n    getToCurrencies: function getToCurrencies() {\n      return ['*'];\n    },\n    getWidgetHtml: function getWidgetHtml() {\n      return new Promise(function (resolve, reject) {\n        store.WS.serviceToken({\n          service_token: 1,\n          service: 'banxa',\n          referrer: window.location.href\n        }).then(function (response) {\n          if (response.error) {\n            reject(response.error.message);\n          } else {\n            var url = response.service_token.banxa.url;\n\n            if (url) {\n              window.open(url);\n            } // Resolving empty will/should redirect user.\n\n\n            resolve();\n          }\n        });\n      });\n    },\n    onMountWidgetContainer: function onMountWidgetContainer() {},\n    should_show_deposit_address: false\n  };\n};\n\n/* harmony default export */ const on_ramp_providers = ({\n  createBanxaProvider: createBanxaProvider\n});\n;// CONCATENATED MODULE: ./stores/on-ramp-store.js\nfunction on_ramp_store_typeof(obj) { \"@babel/helpers - typeof\"; return on_ramp_store_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, on_ramp_store_typeof(obj); }\n\nfunction on_ramp_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction on_ramp_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { on_ramp_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { on_ramp_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction on_ramp_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction on_ramp_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction on_ramp_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) on_ramp_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) on_ramp_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction on_ramp_store_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) on_ramp_store_setPrototypeOf(subClass, superClass); }\n\nfunction on_ramp_store_setPrototypeOf(o, p) { on_ramp_store_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return on_ramp_store_setPrototypeOf(o, p); }\n\nfunction on_ramp_store_createSuper(Derived) { var hasNativeReflectConstruct = on_ramp_store_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = on_ramp_store_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = on_ramp_store_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return on_ramp_store_possibleConstructorReturn(this, result); }; }\n\nfunction on_ramp_store_possibleConstructorReturn(self, call) { if (call && (on_ramp_store_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return on_ramp_store_assertThisInitialized(self); }\n\nfunction on_ramp_store_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction on_ramp_store_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction on_ramp_store_getPrototypeOf(o) { on_ramp_store_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return on_ramp_store_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar OnRampStore = /*#__PURE__*/function (_BaseStore) {\n  on_ramp_store_inherits(OnRampStore, _BaseStore);\n\n  var _super = on_ramp_store_createSuper(OnRampStore);\n\n  function OnRampStore(_ref) {\n    var _this;\n\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    on_ramp_store_classCallCheck(this, OnRampStore);\n\n    _this = _super.call(this, {\n      root_store: root_store\n    });\n    _this.api_error = null;\n    _this.deposit_address = null;\n    _this.is_deposit_address_loading = true;\n    _this.is_onramp_modal_open = false;\n    _this.is_requesting_widget_html = false;\n    _this.onramp_providers = [];\n    _this.selected_provider = null;\n    _this.should_show_widget = false;\n    _this.widget_error = null;\n    _this.widget_html = null;\n    (0,external_mobx_.makeObservable)(on_ramp_store_assertThisInitialized(_this), {\n      api_error: external_mobx_.observable,\n      deposit_address: external_mobx_.observable,\n      is_deposit_address_loading: external_mobx_.observable,\n      is_onramp_modal_open: external_mobx_.observable,\n      is_requesting_widget_html: external_mobx_.observable,\n      onramp_providers: external_mobx_.observable.shallow,\n      selected_provider: external_mobx_.observable.ref,\n      should_show_widget: external_mobx_.observable,\n      widget_error: external_mobx_.observable,\n      widget_html: external_mobx_.observable,\n      is_onramp_tab_visible: external_mobx_.computed,\n      filtered_onramp_providers: external_mobx_.computed,\n      onramp_popup_modal_title: external_mobx_.computed,\n      should_show_dialog: external_mobx_.computed,\n      onMountOnramp: external_mobx_.action.bound,\n      onUnmountOnramp: external_mobx_.action.bound,\n      onClickDisclaimerContinue: external_mobx_.action.bound,\n      onClickGoToDepositPage: external_mobx_.action.bound,\n      pollApiForDepositAddress: external_mobx_.action.bound,\n      resetPopup: external_mobx_.action.bound,\n      setApiError: external_mobx_.action.bound,\n      setCopyIconRef: external_mobx_.action.bound,\n      setDepositAddress: external_mobx_.action.bound,\n      setIsDepositAddressLoading: external_mobx_.action.bound,\n      setIsOnRampModalOpen: external_mobx_.action.bound,\n      setIsRequestingWidgetHtml: external_mobx_.action.bound,\n      setSelectedProvider: external_mobx_.action.bound,\n      setShouldShowWidget: external_mobx_.action.bound,\n      setOnrampProviders: external_mobx_.action.bound,\n      setWidgetError: external_mobx_.action.bound,\n      setWidgetHtml: external_mobx_.action.bound\n    });\n    _this.WS = WS;\n\n    _this.onClientInit( /*#__PURE__*/on_ramp_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setOnrampProviders([on_ramp_providers.createBanxaProvider(on_ramp_store_assertThisInitialized(_this))]);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  on_ramp_store_createClass(OnRampStore, [{\n    key: \"is_onramp_tab_visible\",\n    get: function get() {\n      var client = this.root_store.client;\n      return client.is_virtual === false && (0,shared_.isCryptocurrency)(client.currency) && this.filtered_onramp_providers.length > 0;\n    }\n  }, {\n    key: \"filtered_onramp_providers\",\n    get: function get() {\n      var client = this.root_store.client;\n      return this.onramp_providers // Ensure provider supports this user's account currency.\n      .filter(function (provider) {\n        var to_currencies = provider.getToCurrencies();\n        return to_currencies.includes('*') || to_currencies.includes(client.currency.toLowerCase());\n      }) // Ensure provider supports this user's residency.\n      .filter(function (provider) {\n        var allowed_residencies = provider.getAllowedResidencies();\n        return allowed_residencies.includes('*') || allowed_residencies.includes(client.residence);\n      });\n    }\n  }, {\n    key: \"onramp_popup_modal_title\",\n    get: function get() {\n      if (this.should_show_widget) {\n        return (0,translations_.localize)('Payment channel');\n      } else if (this.selected_provider) {\n        if (this.should_show_dialog) {\n          return (0,translations_.localize)('Our server cannot retrieve an address.');\n        }\n\n        return ' '; // Empty string to render header + close icon.\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"should_show_dialog\",\n    get: function get() {\n      return !!this.api_error;\n    }\n  }, {\n    key: \"onMountOnramp\",\n    value: function onMountOnramp() {\n      var _this2 = this;\n\n      this.disposeThirdPartyJsReaction = (0,external_mobx_.reaction)(function () {\n        return _this2.selected_provider;\n      }, /*#__PURE__*/function () {\n        var _ref3 = on_ramp_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(provider) {\n          var dependencies, _yield$import, loadjs, script_name;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (provider) {\n                    _context2.next = 2;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 2:\n                  dependencies = provider.getScriptDependencies();\n\n                  if (!(dependencies.length === 0)) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 5:\n                  _context2.next = 7;\n                  return __webpack_require__.e(/* import() | loadjs */ \"loadjs\").then(__webpack_require__.t.bind(__webpack_require__, \"../../../node_modules/loadjs/dist/loadjs.umd.js\", 23));\n\n                case 7:\n                  _yield$import = _context2.sent;\n                  loadjs = _yield$import[\"default\"];\n                  script_name = \"\".concat((0,shared_.getKebabCase)(provider.name), \"-onramp\");\n\n                  if (!loadjs.isDefined(script_name)) {\n                    loadjs(dependencies, script_name, {\n                      error: function error() {\n                        // eslint-disable-next-line no-console\n                        console.warn(\"Dependencies for onramp provider \".concat(provider.name, \" could not be loaded.\"));\n\n                        _this2.setSelectedProvider(null);\n                      }\n                    });\n                  }\n\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()); // When \"should_show_widget\", attempt to fetch \"selected_provider\"'s \"widget_html\".\n\n      this.disposeGetWidgetHtmlReaction = (0,external_mobx_.reaction)(function () {\n        return _this2.should_show_widget;\n      }, function (should_show_widget) {\n        if (should_show_widget) {\n          if (_this2.is_requesting_widget_html) {\n            return;\n          }\n\n          _this2.setIsRequestingWidgetHtml(true);\n\n          _this2.selected_provider.getWidgetHtml().then(function (widget_html) {\n            if (widget_html) {\n              // Regular providers (iframe/JS embed)\n              _this2.setWidgetHtml(widget_html);\n            } else {\n              // An empty resolve (widget_html) identifies a redirect.\n              _this2.setShouldShowWidget(false);\n            }\n          })[\"catch\"](function (error) {\n            _this2.setWidgetError(error);\n          })[\"finally\"](function () {\n            return _this2.setIsRequestingWidgetHtml(false);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onUnmountOnramp\",\n    value: function onUnmountOnramp() {\n      if (typeof this.disposeThirdPartyJsReaction === 'function') {\n        this.disposeThirdPartyJsReaction();\n      }\n\n      if (typeof this.disposeGetWidgetHtmlReaction === 'function') {\n        this.disposeGetWidgetHtmlReaction();\n      }\n    }\n  }, {\n    key: \"onClickDisclaimerContinue\",\n    value: function onClickDisclaimerContinue() {\n      this.setShouldShowWidget(true);\n    }\n  }, {\n    key: \"onClickGoToDepositPage\",\n    value: function onClickGoToDepositPage() {\n      this.pollApiForDepositAddress(false);\n      window.open((0,shared_.websiteUrl)() + shared_.routes.cashier_deposit.substring(1));\n    }\n  }, {\n    key: \"pollApiForDepositAddress\",\n    value: function pollApiForDepositAddress(should_allow_empty_address) {\n      var _this3 = this;\n\n      // should_allow_empty_address: API returns empty deposit address for legacy accounts\n      // that have never generated a deposit address. Setting this to \"true\" will allow\n      // the user to be redirected to the Deposit page (where an address will be generated).\n      // Setting this to \"false\" will start polling the API for this deposit address.\n      this.setIsDepositAddressLoading(true);\n      this.setApiError(null);\n      var deposit_address_interval = setInterval(function () {\n        return getDepositAddressFromApi;\n      }, 3000);\n\n      var getDepositAddressFromApi = function getDepositAddressFromApi() {\n        _this3.WS.authorized.cashier('deposit', {\n          provider: 'crypto',\n          type: 'api'\n        }).then(function (response) {\n          var should_clear_interval = false;\n\n          if (response.error) {\n            _this3.setApiError(response.error);\n\n            should_clear_interval = true;\n          } else {\n            var address = response.cashier.deposit.address;\n\n            if (address || should_allow_empty_address) {\n              _this3.setDepositAddress(address);\n\n              should_clear_interval = true;\n            }\n          }\n\n          if (should_clear_interval) {\n            clearInterval(deposit_address_interval);\n\n            _this3.setIsDepositAddressLoading(false);\n          }\n        });\n      };\n\n      getDepositAddressFromApi();\n      setTimeout(function () {\n        clearInterval(deposit_address_interval);\n\n        _this3.setIsDepositAddressLoading(false);\n      }, 30000);\n    }\n  }, {\n    key: \"resetPopup\",\n    value: function resetPopup() {\n      this.setApiError(null);\n      this.setDepositAddress(null);\n      this.setIsDepositAddressLoading(true);\n      this.setSelectedProvider(null);\n      this.setShouldShowWidget(false);\n      this.setWidgetError(null);\n      this.setWidgetHtml(null);\n    }\n  }, {\n    key: \"setApiError\",\n    value: function setApiError(api_error) {\n      this.api_error = api_error;\n    }\n  }, {\n    key: \"setCopyIconRef\",\n    value: function setCopyIconRef(ref) {\n      this.copy_icon_ref = ref;\n    }\n  }, {\n    key: \"setDepositAddress\",\n    value: function setDepositAddress(deposit_address) {\n      this.deposit_address = deposit_address;\n    }\n  }, {\n    key: \"setIsDepositAddressLoading\",\n    value: function setIsDepositAddressLoading(is_loading) {\n      this.is_deposit_address_loading = is_loading;\n    }\n  }, {\n    key: \"setIsOnRampModalOpen\",\n    value: function setIsOnRampModalOpen(is_open) {\n      this.is_onramp_modal_open = is_open;\n    }\n  }, {\n    key: \"setIsRequestingWidgetHtml\",\n    value: function setIsRequestingWidgetHtml(is_requesting_widget_html) {\n      this.is_requesting_widget_html = is_requesting_widget_html;\n    }\n  }, {\n    key: \"setSelectedProvider\",\n    value: function setSelectedProvider(provider) {\n      if (provider) {\n        this.selected_provider = provider;\n        this.setIsOnRampModalOpen(true);\n        this.pollApiForDepositAddress(true);\n      } else {\n        this.setIsOnRampModalOpen(false);\n        this.selected_provider = null;\n      }\n    }\n  }, {\n    key: \"setShouldShowWidget\",\n    value: function setShouldShowWidget(should_show) {\n      this.should_show_widget = should_show;\n    }\n  }, {\n    key: \"setOnrampProviders\",\n    value: function setOnrampProviders(onramp_providers) {\n      this.onramp_providers = onramp_providers.slice();\n    }\n  }, {\n    key: \"setWidgetError\",\n    value: function setWidgetError(widget_error) {\n      this.widget_error = widget_error;\n    }\n  }, {\n    key: \"setWidgetHtml\",\n    value: function setWidgetHtml(widget_html) {\n      this.widget_html = widget_html;\n    }\n  }]);\n\n  return OnRampStore;\n}(BaseStore);\n\n\n;// CONCATENATED MODULE: ./stores/payment-agent-store.js\nfunction payment_agent_store_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction payment_agent_store_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? payment_agent_store_ownKeys(Object(source), !0).forEach(function (key) { payment_agent_store_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : payment_agent_store_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction payment_agent_store_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction payment_agent_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction payment_agent_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { payment_agent_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { payment_agent_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction payment_agent_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction payment_agent_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction payment_agent_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) payment_agent_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) payment_agent_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\nvar PaymentAgentStore = /*#__PURE__*/function () {\n  function PaymentAgentStore(_ref) {\n    var _this = this;\n\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    payment_agent_store_classCallCheck(this, PaymentAgentStore);\n\n    this.list = [];\n    this.agents = [];\n    this.container = constants.containers.payment_agent;\n    this.error = new ErrorStore();\n    this.filtered_list = [];\n    this.is_name_selected = true;\n    this.is_search_loading = false;\n    this.is_withdraw = false;\n    this.is_try_withdraw_successful = false;\n    this.is_withdraw_successful = false;\n    this.confirm = {};\n    this.receipt = {};\n    this.selected_bank = 0;\n    this.supported_banks = [];\n    this.active_tab_index = 0;\n    this.all_payment_agent_list = [];\n    this.search_term = '';\n    this.has_payment_agent_search_warning = false;\n\n    this.resetPaymentAgent = function () {\n      var _this$root_store = _this.root_store,\n          client = _this$root_store.client,\n          modules = _this$root_store.modules;\n      var active_container = modules.cashier.general_store.active_container;\n      var container = constants.map_action[active_container];\n      client.setVerificationCode('', container);\n\n      _this.error.setErrorMessage('');\n\n      _this.setIsWithdraw(false);\n\n      _this.setIsWithdrawSuccessful(false);\n\n      _this.setIsTryWithdrawSuccessful(false);\n\n      _this.setActiveTabIndex(0);\n    };\n\n    (0,external_mobx_.makeObservable)(this, {\n      list: external_mobx_.observable,\n      agents: external_mobx_.observable,\n      container: external_mobx_.observable,\n      error: external_mobx_.observable,\n      filtered_list: external_mobx_.observable,\n      is_name_selected: external_mobx_.observable,\n      is_search_loading: external_mobx_.observable,\n      is_withdraw: external_mobx_.observable,\n      is_try_withdraw_successful: external_mobx_.observable,\n      is_withdraw_successful: external_mobx_.observable,\n      confirm: external_mobx_.observable,\n      receipt: external_mobx_.observable,\n      selected_bank: external_mobx_.observable,\n      supported_banks: external_mobx_.observable,\n      active_tab_index: external_mobx_.observable,\n      all_payment_agent_list: external_mobx_.observable,\n      search_term: external_mobx_.observable,\n      has_payment_agent_search_warning: external_mobx_.observable,\n      setActiveTabIndex: external_mobx_.action.bound,\n      setActiveTab: external_mobx_.action.bound,\n      is_payment_agent_visible: external_mobx_.computed,\n      getPaymentAgentList: external_mobx_.action.bound,\n      getPaymentAgentDetails: external_mobx_.action.bound,\n      addSupportedBank: external_mobx_.action.bound,\n      clearSuppertedBanks: external_mobx_.action.bound,\n      sortSupportedBanks: external_mobx_.action.bound,\n      setList: external_mobx_.action.bound,\n      clearList: external_mobx_.action.bound,\n      setPaymentAgentList: external_mobx_.action.bound,\n      filterPaymentAgentList: external_mobx_.action.bound,\n      setSearchTerm: external_mobx_.action.bound,\n      setIsSearchLoading: external_mobx_.action.bound,\n      setPaymentAgentSearchWarning: external_mobx_.action.bound,\n      onChangePaymentMethod: external_mobx_.action.bound,\n      setIsWithdraw: external_mobx_.action.bound,\n      setIsTryWithdrawSuccessful: external_mobx_.action.bound,\n      setIsWithdrawSuccessful: external_mobx_.action.bound,\n      setConfirmation: external_mobx_.action.bound,\n      setReceipt: external_mobx_.action.bound,\n      addPaymentAgent: external_mobx_.action.bound,\n      onMountPaymentAgentWithdraw: external_mobx_.action.bound,\n      requestTryPaymentAgentWithdraw: external_mobx_.action.bound,\n      resetPaymentAgent: external_mobx_.action.bound,\n      onMountPaymentAgentList: external_mobx_.action.bound,\n      setAllPaymentAgentList: external_mobx_.action.bound,\n      is_payment_agent_visible_in_onboarding: external_mobx_.computed,\n      requestPaymentAgentWithdraw: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  payment_agent_store_createClass(PaymentAgentStore, [{\n    key: \"setActiveTabIndex\",\n    value: function setActiveTabIndex(index) {\n      this.active_tab_index = index;\n    }\n  }, {\n    key: \"setActiveTab\",\n    value: function setActiveTab(index) {\n      this.setActiveTabIndex(index);\n    }\n  }, {\n    key: \"is_payment_agent_visible\",\n    get: function get() {\n      return !!(this.filtered_list.length || this.agents.length || this.has_payment_agent_search_warning);\n    }\n  }, {\n    key: \"getPaymentAgentList\",\n    value: function () {\n      var _getPaymentAgentList = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this$root_store$clie, residence, currency;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.WS.wait('get_settings');\n\n              case 2:\n                _this$root_store$clie = this.root_store.client, residence = _this$root_store$clie.residence, currency = _this$root_store$clie.currency;\n                return _context.abrupt(\"return\", this.WS.authorized.paymentAgentList(residence, currency));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPaymentAgentList() {\n        return _getPaymentAgentList.apply(this, arguments);\n      }\n\n      return getPaymentAgentList;\n    }()\n  }, {\n    key: \"getPaymentAgentDetails\",\n    value: function () {\n      var _getPaymentAgentDetails = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$WS$author, paymentagent_details;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.WS.authorized.paymentAgentDetails();\n\n              case 2:\n                _yield$this$WS$author = _context2.sent;\n                paymentagent_details = _yield$this$WS$author.paymentagent_details;\n                return _context2.abrupt(\"return\", paymentagent_details);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getPaymentAgentDetails() {\n        return _getPaymentAgentDetails.apply(this, arguments);\n      }\n\n      return getPaymentAgentDetails;\n    }()\n  }, {\n    key: \"addSupportedBank\",\n    value: function addSupportedBank(bank) {\n      var supported_bank_exists = this.supported_banks.find(function (supported_bank) {\n        return supported_bank.value === bank.toLowerCase();\n      });\n\n      if (!supported_bank_exists) {\n        this.supported_banks.push({\n          text: bank,\n          value: bank.toLowerCase()\n        });\n      }\n    }\n  }, {\n    key: \"clearSuppertedBanks\",\n    value: function clearSuppertedBanks() {\n      this.supported_banks = [];\n    }\n  }, {\n    key: \"sortSupportedBanks\",\n    value: function sortSupportedBanks() {\n      // sort supported banks alphabetically by value, the option 'All payment agents' with value 0 should be on top\n      this.supported_banks.replace(this.supported_banks.slice().sort(function (a, b) {\n        if (a.value < b.value) {\n          return -1;\n        }\n\n        if (a.value > b.value) {\n          return 1;\n        }\n\n        return 0;\n      }));\n    }\n  }, {\n    key: \"setList\",\n    value: function setList(pa_list) {\n      this.list.push(pa_list);\n    }\n  }, {\n    key: \"clearList\",\n    value: function clearList() {\n      this.list = [];\n    }\n  }, {\n    key: \"setPaymentAgentList\",\n    value: function () {\n      var _setPaymentAgentList = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(pa_list) {\n        var _this2 = this;\n\n        var setLoading, payment_agent_list, _payment_agent_list$p;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setLoading = this.root_store.modules.cashier.general_store.setLoading;\n                _context3.t0 = pa_list;\n\n                if (_context3.t0) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return this.getPaymentAgentList();\n\n              case 5:\n                _context3.t0 = _context3.sent;\n\n              case 6:\n                payment_agent_list = _context3.t0;\n                this.clearList();\n                this.clearSuppertedBanks(); // TODO: Once telephone, url and supported_banks removed from paymentagent_list.list we can remove them and just use the plural ones\n\n                try {\n                  (_payment_agent_list$p = payment_agent_list.paymentagent_list) === null || _payment_agent_list$p === void 0 ? void 0 : _payment_agent_list$p.list.forEach(function (payment_agent) {\n                    _this2.setList({\n                      currency: payment_agent.currencies,\n                      deposit_commission: payment_agent.deposit_commission,\n                      email: payment_agent.email,\n                      further_information: payment_agent.further_information,\n                      max_withdrawal: payment_agent.max_withdrawal,\n                      min_withdrawal: payment_agent.min_withdrawal,\n                      name: payment_agent.name,\n                      paymentagent_loginid: payment_agent.paymentagent_loginid,\n                      phones: (payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.phone_numbers) || (payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.telephone),\n                      supported_banks: payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.supported_payment_methods,\n                      urls: (payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.urls) || (payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.url),\n                      withdrawal_commission: payment_agent.withdrawal_commission\n                    });\n\n                    var supported_banks_array = payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.supported_payment_methods.map(function (bank) {\n                      var payment_method = getNormalizedPaymentMethod(bank.payment_method, constants.payment_methods); //remove Skrill and Neteller from payment methods list (dropdown menu) as per mandate from Paysafe\n\n                      return ['Neteller', 'Skrill'].includes(payment_method) ? '' : payment_method;\n                    }).filter(Boolean);\n                    supported_banks_array.forEach(function (bank) {\n                      return _this2.addSupportedBank(bank);\n                    });\n                  });\n                  (0,shared_.shuffleArray)(this.list);\n                } catch (e) {\n                  setLoading(false); // eslint-disable-next-line no-console\n\n                  console.error(e);\n                }\n\n                this.sortSupportedBanks();\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setPaymentAgentList(_x) {\n        return _setPaymentAgentList.apply(this, arguments);\n      }\n\n      return setPaymentAgentList;\n    }()\n  }, {\n    key: \"filterPaymentAgentList\",\n    value: function filterPaymentAgentList(bank) {\n      var _this3 = this;\n\n      this.setPaymentAgentSearchWarning(false);\n      var common = this.root_store.common;\n      this.filtered_list = [];\n\n      if (bank || this.selected_bank) {\n        this.list.forEach(function (payment_agent) {\n          var supported_banks = payment_agent === null || payment_agent === void 0 ? void 0 : payment_agent.supported_banks;\n\n          if (supported_banks) {\n            var bank_index = supported_banks.map(function (supported_bank) {\n              return getNormalizedPaymentMethod(supported_bank.payment_method, constants.payment_methods).toLowerCase();\n            }).indexOf(bank || _this3.selected_bank);\n            if (bank_index !== -1) _this3.filtered_list.push(payment_agent);\n          }\n        });\n      } else {\n        this.filtered_list = this.list;\n      }\n\n      if (this.search_term) {\n        this.filtered_list = this.filtered_list.filter(function (payment_agent) {\n          return payment_agent.name.toLocaleLowerCase().includes(_this3.search_term.toLocaleLowerCase());\n        });\n\n        if (this.filtered_list.length === 0) {\n          this.setPaymentAgentSearchWarning(true);\n        }\n      }\n\n      this.setIsSearchLoading(false);\n\n      if (!this.is_payment_agent_visible && window.location.pathname.endsWith(shared_.routes.cashier_pa)) {\n        common.routeTo(shared_.routes.cashier_deposit);\n      }\n    }\n  }, {\n    key: \"setSearchTerm\",\n    value: function setSearchTerm(search_term) {\n      this.search_term = search_term;\n    }\n  }, {\n    key: \"setIsSearchLoading\",\n    value: function setIsSearchLoading(value) {\n      this.is_search_loading = value;\n    }\n  }, {\n    key: \"setPaymentAgentSearchWarning\",\n    value: function setPaymentAgentSearchWarning(value) {\n      this.has_payment_agent_search_warning = value;\n    }\n  }, {\n    key: \"onChangePaymentMethod\",\n    value: function onChangePaymentMethod(_ref2) {\n      var target = _ref2.target;\n      var value = target.value === '0' ? parseInt(target.value) : target.value;\n      this.selected_bank = value;\n      this.filterPaymentAgentList(value);\n    }\n  }, {\n    key: \"setIsWithdraw\",\n    value: function setIsWithdraw() {\n      var is_withdraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.is_withdraw;\n      this.is_withdraw = is_withdraw;\n    }\n  }, {\n    key: \"setIsTryWithdrawSuccessful\",\n    value: function setIsTryWithdrawSuccessful(is_try_withdraw_successful) {\n      this.error.setErrorMessage('');\n      this.is_try_withdraw_successful = is_try_withdraw_successful;\n    }\n  }, {\n    key: \"setIsWithdrawSuccessful\",\n    value: function setIsWithdrawSuccessful(is_withdraw_successful) {\n      this.is_withdraw_successful = is_withdraw_successful;\n    }\n  }, {\n    key: \"setConfirmation\",\n    value: function setConfirmation(_ref3) {\n      var amount = _ref3.amount,\n          currency = _ref3.currency,\n          loginid = _ref3.loginid,\n          payment_agent_name = _ref3.payment_agent_name;\n      this.confirm = {\n        amount: amount,\n        currency: currency,\n        loginid: loginid,\n        payment_agent_name: payment_agent_name\n      };\n    }\n  }, {\n    key: \"setReceipt\",\n    value: function setReceipt(_ref4) {\n      var amount_transferred = _ref4.amount_transferred,\n          payment_agent_email = _ref4.payment_agent_email,\n          payment_agent_id = _ref4.payment_agent_id,\n          payment_agent_name = _ref4.payment_agent_name,\n          payment_agent_phone = _ref4.payment_agent_phone,\n          payment_agent_url = _ref4.payment_agent_url;\n      this.receipt = {\n        amount_transferred: amount_transferred,\n        payment_agent_email: payment_agent_email,\n        payment_agent_id: payment_agent_id,\n        payment_agent_name: payment_agent_name,\n        payment_agent_phone: payment_agent_phone,\n        payment_agent_url: payment_agent_url\n      };\n    }\n  }, {\n    key: \"addPaymentAgent\",\n    value: function addPaymentAgent(payment_agent) {\n      this.agents.push({\n        text: payment_agent.name,\n        value: payment_agent.paymentagent_loginid,\n        max_withdrawal: payment_agent.max_withdrawal,\n        min_withdrawal: payment_agent.min_withdrawal,\n        email: payment_agent.email,\n        phone: payment_agent.phone_numbers,\n        url: payment_agent.urls\n      });\n    }\n  }, {\n    key: \"onMountPaymentAgentWithdraw\",\n    value: function () {\n      var _onMountPaymentAgentWithdraw = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _this4 = this;\n\n        var _this$root_store2, common, modules, _modules$cashier$gene, setLoading, onMountCommon, payment_agent_list;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$root_store2 = this.root_store, common = _this$root_store2.common, modules = _this$root_store2.modules;\n                _modules$cashier$gene = modules.cashier.general_store, setLoading = _modules$cashier$gene.setLoading, onMountCommon = _modules$cashier$gene.onMountCommon;\n                setLoading(true);\n                this.onRemount = this.onMountPaymentAgentWithdraw;\n                onMountCommon();\n                this.setIsWithdraw(true);\n                this.setIsWithdrawSuccessful(false);\n                this.setReceipt({});\n\n                if (this.agents.length) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.next = 11;\n                return this.getPaymentAgentList();\n\n              case 11:\n                payment_agent_list = _context4.sent;\n                payment_agent_list.paymentagent_list.list.forEach(function (payment_agent) {\n                  _this4.addPaymentAgent(payment_agent);\n                });\n\n                if (!payment_agent_list.paymentagent_list.list.length && window.location.pathname.endsWith(shared_.routes.cashier_pa)) {\n                  common.routeTo(shared_.routes.cashier_deposit);\n                }\n\n              case 14:\n                setLoading(false);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onMountPaymentAgentWithdraw() {\n        return _onMountPaymentAgentWithdraw.apply(this, arguments);\n      }\n\n      return onMountPaymentAgentWithdraw;\n    }()\n  }, {\n    key: \"requestTryPaymentAgentWithdraw\",\n    value: function () {\n      var _requestTryPaymentAgentWithdraw = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref5) {\n        var loginid, currency, amount, verification_code, payment_agent_withdraw, selected_agent;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                loginid = _ref5.loginid, currency = _ref5.currency, amount = _ref5.amount, verification_code = _ref5.verification_code;\n                this.error.setErrorMessage('');\n                _context5.next = 4;\n                return this.WS.authorized.paymentAgentWithdraw({\n                  loginid: loginid,\n                  currency: currency,\n                  amount: amount,\n                  verification_code: verification_code,\n                  dry_run: 1\n                });\n\n              case 4:\n                payment_agent_withdraw = _context5.sent;\n\n                if (+payment_agent_withdraw.paymentagent_withdraw === 2) {\n                  selected_agent = this.agents.find(function (agent) {\n                    return agent.value === loginid;\n                  });\n                  this.setConfirmation({\n                    amount: amount,\n                    currency: currency,\n                    loginid: loginid,\n                    payment_agent_name: (selected_agent === null || selected_agent === void 0 ? void 0 : selected_agent.text) || payment_agent_withdraw.paymentagent_name\n                  });\n                  this.setIsTryWithdrawSuccessful(true);\n                } else {\n                  this.error.setErrorMessage(payment_agent_withdraw.error, this.resetPaymentAgent);\n                }\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function requestTryPaymentAgentWithdraw(_x2) {\n        return _requestTryPaymentAgentWithdraw.apply(this, arguments);\n      }\n\n      return requestTryPaymentAgentWithdraw;\n    }()\n  }, {\n    key: \"onMountPaymentAgentList\",\n    value: function () {\n      var _onMountPaymentAgentList = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var _this$root_store$modu, setLoading, onMountCommon;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this$root_store$modu = this.root_store.modules.cashier.general_store, setLoading = _this$root_store$modu.setLoading, onMountCommon = _this$root_store$modu.onMountCommon;\n                setLoading(true);\n                this.onRemount = this.onMountPaymentAgentList;\n                _context6.next = 5;\n                return onMountCommon();\n\n              case 5:\n                _context6.next = 7;\n                return this.getPaymentAgentList();\n\n              case 7:\n                setLoading(false);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function onMountPaymentAgentList() {\n        return _onMountPaymentAgentList.apply(this, arguments);\n      }\n\n      return onMountPaymentAgentList;\n    }()\n  }, {\n    key: \"getAllPaymentAgentList\",\n    value: function () {\n      var _getAllPaymentAgentList = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.WS.wait('get_settings');\n\n              case 2:\n                return _context7.abrupt(\"return\", this.WS.allPaymentAgentList(this.root_store.client.residence));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getAllPaymentAgentList() {\n        return _getAllPaymentAgentList.apply(this, arguments);\n      }\n\n      return getAllPaymentAgentList;\n    }()\n  }, {\n    key: \"setAllPaymentAgentList\",\n    value: function setAllPaymentAgentList(list) {\n      this.all_payment_agent_list = list;\n    }\n  }, {\n    key: \"is_payment_agent_visible_in_onboarding\",\n    get: function get() {\n      var _this$all_payment_age, _this$all_payment_age2, _this$all_payment_age3;\n\n      return !!((_this$all_payment_age = this.all_payment_agent_list) !== null && _this$all_payment_age !== void 0 && (_this$all_payment_age2 = _this$all_payment_age.paymentagent_list) !== null && _this$all_payment_age2 !== void 0 && (_this$all_payment_age3 = _this$all_payment_age2.list) !== null && _this$all_payment_age3 !== void 0 && _this$all_payment_age3.length);\n    }\n  }, {\n    key: \"requestPaymentAgentWithdraw\",\n    value: function () {\n      var _requestPaymentAgentWithdraw = payment_agent_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref6) {\n        var loginid, currency, amount, verification_code, payment_agent_withdraw, selected_agent;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                loginid = _ref6.loginid, currency = _ref6.currency, amount = _ref6.amount, verification_code = _ref6.verification_code;\n                this.error.setErrorMessage('');\n                _context8.next = 4;\n                return this.WS.authorized.paymentAgentWithdraw({\n                  loginid: loginid,\n                  currency: currency,\n                  amount: amount,\n                  verification_code: verification_code\n                });\n\n              case 4:\n                payment_agent_withdraw = _context8.sent;\n\n                if (+payment_agent_withdraw.paymentagent_withdraw === 1) {\n                  selected_agent = this.agents.find(function (agent) {\n                    return agent.value === loginid;\n                  });\n                  this.setReceipt(payment_agent_store_objectSpread({\n                    amount_transferred: (0,shared_.formatMoney)(currency, amount, true)\n                  }, selected_agent && {\n                    payment_agent_email: selected_agent.email,\n                    payment_agent_id: selected_agent.value,\n                    payment_agent_name: selected_agent.text,\n                    payment_agent_phone: selected_agent.phone,\n                    payment_agent_url: selected_agent.url\n                  }));\n                  this.setIsWithdrawSuccessful(true);\n                  this.setIsTryWithdrawSuccessful(false);\n                  this.setConfirmation({});\n                } else {\n                  this.error.setErrorMessage(payment_agent_withdraw.error, this.resetPaymentAgent);\n                }\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function requestPaymentAgentWithdraw(_x3) {\n        return _requestPaymentAgentWithdraw.apply(this, arguments);\n      }\n\n      return requestPaymentAgentWithdraw;\n    }()\n  }]);\n\n  return PaymentAgentStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/payment-agent-transfer-store.js\nfunction payment_agent_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction payment_agent_transfer_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { payment_agent_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { payment_agent_transfer_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction payment_agent_transfer_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction payment_agent_transfer_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction payment_agent_transfer_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) payment_agent_transfer_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) payment_agent_transfer_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\nvar PaymentAgentTransferStore = /*#__PURE__*/function () {\n  function PaymentAgentTransferStore(_ref) {\n    var _this = this;\n\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    payment_agent_transfer_store_classCallCheck(this, PaymentAgentTransferStore);\n\n    this.container = constants.containers.payment_agent_transfer;\n    this.error = new ErrorStore();\n    this.is_payment_agent = false;\n    this.is_try_transfer_successful = false;\n    this.is_transfer_successful = false;\n    this.confirm = {};\n    this.receipt = {};\n    this.transfer_limit = {};\n\n    this.requestTryPaymentAgentTransfer = /*#__PURE__*/function () {\n      var _ref3 = payment_agent_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n        var amount, currency, description, transfer_to, payment_agent_transfer;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                amount = _ref2.amount, currency = _ref2.currency, description = _ref2.description, transfer_to = _ref2.transfer_to;\n\n                _this.error.setErrorMessage('');\n\n                _context.next = 4;\n                return _this.WS.authorized.paymentAgentTransfer({\n                  amount: amount,\n                  currency: currency,\n                  description: description,\n                  transfer_to: transfer_to,\n                  dry_run: 1\n                });\n\n              case 4:\n                payment_agent_transfer = _context.sent;\n\n                if (+payment_agent_transfer.paymentagent_transfer === 2) {\n                  // show confirmation screen\n                  _this.setConfirmationPaymentAgentTransfer({\n                    client_id: transfer_to,\n                    client_name: payment_agent_transfer.client_to_full_name,\n                    amount: amount,\n                    description: description\n                  });\n\n                  _this.setIsTryTransferSuccessful(true);\n                } else {\n                  _this.error.setErrorMessage(payment_agent_transfer.error, _this.resetPaymentAgentTransfer);\n                }\n\n                return _context.abrupt(\"return\", payment_agent_transfer);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.requestPaymentAgentTransfer = /*#__PURE__*/function () {\n      var _ref5 = payment_agent_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4) {\n        var amount, currency, description, transfer_to, payment_agent_transfer;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                amount = _ref4.amount, currency = _ref4.currency, description = _ref4.description, transfer_to = _ref4.transfer_to;\n\n                _this.error.setErrorMessage('');\n\n                _context2.next = 4;\n                return _this.WS.authorized.paymentAgentTransfer({\n                  amount: amount,\n                  currency: currency,\n                  description: description,\n                  transfer_to: transfer_to\n                });\n\n              case 4:\n                payment_agent_transfer = _context2.sent;\n\n                if (+payment_agent_transfer.paymentagent_transfer === 1) {\n                  _this.setReceiptPaymentAgentTransfer({\n                    amount_transferred: amount,\n                    client_id: transfer_to,\n                    client_name: payment_agent_transfer.client_to_full_name\n                  });\n\n                  _this.setIsTransferSuccessful(true);\n\n                  _this.setIsTryTransferSuccessful(false);\n\n                  _this.setConfirmationPaymentAgentTransfer({});\n                } else {\n                  _this.error.setErrorMessage(payment_agent_transfer.error, _this.resetPaymentAgentTransfer);\n                }\n\n                return _context2.abrupt(\"return\", payment_agent_transfer);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    this.resetPaymentAgentTransfer = function () {\n      _this.setIsTransferSuccessful(false);\n\n      _this.error.setErrorMessage('');\n    };\n\n    (0,external_mobx_.makeObservable)(this, {\n      container: external_mobx_.observable,\n      error: external_mobx_.observable,\n      is_payment_agent: external_mobx_.observable,\n      is_try_transfer_successful: external_mobx_.observable,\n      is_transfer_successful: external_mobx_.observable,\n      confirm: external_mobx_.observable,\n      receipt: external_mobx_.observable,\n      transfer_limit: external_mobx_.observable,\n      is_payment_agent_transfer_visible: external_mobx_.computed,\n      setIsPaymentAgent: external_mobx_.action.bound,\n      setIsTryTransferSuccessful: external_mobx_.action.bound,\n      setIsTransferSuccessful: external_mobx_.action.bound,\n      setConfirmationPaymentAgentTransfer: external_mobx_.action.bound,\n      setReceiptPaymentAgentTransfer: external_mobx_.action.bound,\n      setMinMaxPaymentAgentTransfer: external_mobx_.action.bound,\n      onMountPaymentAgentTransfer: external_mobx_.action.bound,\n      requestTryPaymentAgentTransfer: external_mobx_.action.bound,\n      requestPaymentAgentTransfer: external_mobx_.action.bound,\n      resetPaymentAgentTransfer: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  payment_agent_transfer_store_createClass(PaymentAgentTransferStore, [{\n    key: \"is_payment_agent_transfer_visible\",\n    get: function get() {\n      return this.is_payment_agent;\n    }\n  }, {\n    key: \"checkIsPaymentAgent\",\n    value: function () {\n      var _checkIsPaymentAgent = payment_agent_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _get_settings$is_auth;\n\n        var get_settings;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.WS.authorized.storage.getSettings();\n\n              case 2:\n                get_settings = _context3.sent.get_settings;\n                this.setIsPaymentAgent((_get_settings$is_auth = get_settings === null || get_settings === void 0 ? void 0 : get_settings.is_authenticated_payment_agent) !== null && _get_settings$is_auth !== void 0 ? _get_settings$is_auth : false);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function checkIsPaymentAgent() {\n        return _checkIsPaymentAgent.apply(this, arguments);\n      }\n\n      return checkIsPaymentAgent;\n    }()\n  }, {\n    key: \"setIsPaymentAgent\",\n    value: function setIsPaymentAgent(is_payment_agent) {\n      if (!is_payment_agent && window.location.pathname.endsWith(shared_.routes.cashier_pa_transfer)) {\n        this.root_store.common.routeTo(shared_.routes.cashier_deposit);\n      }\n\n      this.is_payment_agent = !!is_payment_agent;\n    }\n  }, {\n    key: \"setIsTryTransferSuccessful\",\n    value: function setIsTryTransferSuccessful(is_try_transfer_successful) {\n      this.error.setErrorMessage('');\n      this.is_try_transfer_successful = is_try_transfer_successful;\n    }\n  }, {\n    key: \"setIsTransferSuccessful\",\n    value: function setIsTransferSuccessful(is_transfer_successful) {\n      this.is_transfer_successful = is_transfer_successful;\n    }\n  }, {\n    key: \"setConfirmationPaymentAgentTransfer\",\n    value: function setConfirmationPaymentAgentTransfer(_ref6) {\n      var amount = _ref6.amount,\n          client_id = _ref6.client_id,\n          client_name = _ref6.client_name,\n          description = _ref6.description;\n      this.confirm = {\n        amount: amount,\n        client_id: client_id,\n        client_name: client_name,\n        description: description\n      };\n    }\n  }, {\n    key: \"setReceiptPaymentAgentTransfer\",\n    value: function setReceiptPaymentAgentTransfer(_ref7) {\n      var amount_transferred = _ref7.amount_transferred,\n          client_id = _ref7.client_id,\n          client_name = _ref7.client_name;\n      this.receipt = {\n        amount_transferred: amount_transferred,\n        client_id: client_id,\n        client_name: client_name\n      };\n    }\n  }, {\n    key: \"getCurrentPaymentAgent\",\n    value: function () {\n      var _getCurrentPaymentAgent = payment_agent_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(response_payment_agent) {\n        var _this$root_store, client, modules, payment_agent_listed, current_payment_agent;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$root_store = this.root_store, client = _this$root_store.client, modules = _this$root_store.modules;\n                payment_agent_listed = response_payment_agent.paymentagent_list.list.find(function (agent) {\n                  return agent.paymentagent_loginid === client.loginid;\n                });\n                _context4.t0 = payment_agent_listed;\n\n                if (_context4.t0) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 6;\n                return modules.cashier.payment_agent.getPaymentAgentDetails();\n\n              case 6:\n                _context4.t0 = _context4.sent;\n\n              case 7:\n                current_payment_agent = _context4.t0;\n                return _context4.abrupt(\"return\", current_payment_agent !== null && current_payment_agent !== void 0 ? current_payment_agent : {});\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getCurrentPaymentAgent(_x3) {\n        return _getCurrentPaymentAgent.apply(this, arguments);\n      }\n\n      return getCurrentPaymentAgent;\n    }()\n  }, {\n    key: \"setMinMaxPaymentAgentTransfer\",\n    value: function setMinMaxPaymentAgentTransfer(_ref8) {\n      var min_withdrawal = _ref8.min_withdrawal,\n          max_withdrawal = _ref8.max_withdrawal;\n      this.transfer_limit = {\n        min: min_withdrawal,\n        max: max_withdrawal\n      };\n    }\n  }, {\n    key: \"onMountPaymentAgentTransfer\",\n    value: function () {\n      var _onMountPaymentAgentTransfer = payment_agent_transfer_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _this$root_store$modu, general_store, payment_agent, response, current_payment_agent;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this$root_store$modu = this.root_store.modules.cashier, general_store = _this$root_store$modu.general_store, payment_agent = _this$root_store$modu.payment_agent;\n                general_store.setLoading(true);\n                this.onRemount = this.onMountPaymentAgentTransfer;\n                _context5.next = 5;\n                return general_store.onMountCommon();\n\n              case 5:\n                if (this.transfer_limit.min_withdrawal) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                _context5.next = 8;\n                return payment_agent.getPaymentAgentList();\n\n              case 8:\n                response = _context5.sent;\n                _context5.next = 11;\n                return this.getCurrentPaymentAgent(response);\n\n              case 11:\n                current_payment_agent = _context5.sent;\n                this.setMinMaxPaymentAgentTransfer(current_payment_agent);\n\n              case 13:\n                general_store.setLoading(false);\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onMountPaymentAgentTransfer() {\n        return _onMountPaymentAgentTransfer.apply(this, arguments);\n      }\n\n      return onMountPaymentAgentTransfer;\n    }()\n  }]);\n\n  return PaymentAgentTransferStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/transaction-history-store.js\nfunction transaction_history_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction transaction_history_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { transaction_history_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { transaction_history_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction transaction_history_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction transaction_history_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transaction_history_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) transaction_history_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) transaction_history_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar TransactionHistoryStore = /*#__PURE__*/function () {\n  function TransactionHistoryStore(_ref) {\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    transaction_history_store_classCallCheck(this, TransactionHistoryStore);\n\n    this.crypto_transactions = [];\n    this.is_crypto_transactions_cancel_modal_visible = false;\n    this.is_crypto_transactions_status_modal_visible = false;\n    this.is_crypto_transactions_visible = false;\n    this.is_loading = false;\n    this.selected_crypto_transaction_id = '';\n    this.selected_crypto_status = '';\n    this.selected_crypto_status_description = '';\n    (0,external_mobx_.makeObservable)(this, {\n      crypto_transactions: external_mobx_.observable,\n      is_crypto_transactions_cancel_modal_visible: external_mobx_.observable,\n      is_crypto_transactions_status_modal_visible: external_mobx_.observable,\n      is_crypto_transactions_visible: external_mobx_.observable,\n      is_loading: external_mobx_.observable,\n      selected_crypto_transaction_id: external_mobx_.observable,\n      selected_crypto_status: external_mobx_.observable,\n      selected_crypto_status_description: external_mobx_.observable,\n      onMount: external_mobx_.action.bound,\n      unsubscribeCryptoTransactions: external_mobx_.action.bound,\n      getCryptoTransactions: external_mobx_.action.bound,\n      setCryptoTransactionsHistory: external_mobx_.action.bound,\n      updateCryptoTransactions: external_mobx_.action.bound,\n      sortCryptoTransactions: external_mobx_.action.bound,\n      cancelCryptoTransaction: external_mobx_.action.bound,\n      setSelectedCryptoTransactionId: external_mobx_.action.bound,\n      setIsCryptoTransactionsCancelModalVisible: external_mobx_.action.bound,\n      showCryptoTransactionsCancelModal: external_mobx_.action.bound,\n      hideCryptoTransactionsCancelModal: external_mobx_.action.bound,\n      setSelectedCryptoStatus: external_mobx_.action.bound,\n      setSelectedCryptoStatusDescription: external_mobx_.action.bound,\n      setIsCryptoTransactionsStatusModalVisible: external_mobx_.action.bound,\n      showCryptoTransactionsStatusModal: external_mobx_.action.bound,\n      hideCryptoTransactionsStatusModal: external_mobx_.action.bound,\n      setLoading: external_mobx_.action.bound,\n      setIsCryptoTransactionsVisible: external_mobx_.action.bound\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  transaction_history_store_createClass(TransactionHistoryStore, [{\n    key: \"onMount\",\n    value: function () {\n      var _onMount = transaction_history_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this$root_store$clie, currency, switched, is_crypto;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$root_store$clie = this.root_store.client, currency = _this$root_store$clie.currency, switched = _this$root_store$clie.switched;\n                is_crypto = !!currency && (0,shared_.isCryptocurrency)(currency);\n\n                if (!(is_crypto && !switched)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                this.setLoading(true);\n                _context.next = 6;\n                return this.unsubscribeCryptoTransactions();\n\n              case 6:\n                _context.next = 8;\n                return this.getCryptoTransactions();\n\n              case 8:\n                this.setLoading(false);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onMount() {\n        return _onMount.apply(this, arguments);\n      }\n\n      return onMount;\n    }()\n  }, {\n    key: \"unsubscribeCryptoTransactions\",\n    value: function () {\n      var _unsubscribeCryptoTransactions = transaction_history_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.WS.authorized.cashierPayments({\n                  provider: 'crypto',\n                  transaction_type: 'all'\n                }).then(function (response) {\n                  if (!response.error) {\n                    var crypto = response.cashier_payments.crypto;\n\n                    _this.setCryptoTransactionsHistory(crypto);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function unsubscribeCryptoTransactions() {\n        return _unsubscribeCryptoTransactions.apply(this, arguments);\n      }\n\n      return unsubscribeCryptoTransactions;\n    }()\n  }, {\n    key: \"getCryptoTransactions\",\n    value: function () {\n      var _getCryptoTransactions = transaction_history_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.WS.subscribeCashierPayments(function (response) {\n                  if (!response.error) {\n                    var crypto = response.cashier_payments.crypto;\n\n                    _this2.updateCryptoTransactions(crypto);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getCryptoTransactions() {\n        return _getCryptoTransactions.apply(this, arguments);\n      }\n\n      return getCryptoTransactions;\n    }()\n  }, {\n    key: \"setCryptoTransactionsHistory\",\n    value: function setCryptoTransactionsHistory(transactions) {\n      this.crypto_transactions = transactions;\n      this.sortCryptoTransactions();\n    }\n  }, {\n    key: \"updateCryptoTransactions\",\n    value: function updateCryptoTransactions(transactions) {\n      var _this3 = this;\n\n      transactions.forEach(function (transaction) {\n        var index = _this3.crypto_transactions.findIndex(function (crypto) {\n          return crypto.id === transaction.id;\n        });\n\n        if (index === -1) {\n          _this3.crypto_transactions.push(transaction);\n        } else {\n          Object.assign(_this3.crypto_transactions[index], transaction);\n        }\n      });\n      this.sortCryptoTransactions();\n    }\n  }, {\n    key: \"sortCryptoTransactions\",\n    value: function sortCryptoTransactions() {\n      this.crypto_transactions.replace(this.crypto_transactions.slice().sort(function (a, b) {\n        return b.submit_date - a.submit_date;\n      }));\n    }\n  }, {\n    key: \"cancelCryptoTransaction\",\n    value: function () {\n      var _cancelCryptoTransaction = transaction_history_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(transaction_id) {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.WS.cancelCryptoTransaction(transaction_id).then(function (response) {\n                  if (!response.error) {\n                    _this4.setSelectedCryptoTransactionId('');\n\n                    _this4.setIsCryptoTransactionsCancelModalVisible(false);\n\n                    return Promise.resolve(response);\n                  }\n\n                  return Promise.reject(response.error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function cancelCryptoTransaction(_x) {\n        return _cancelCryptoTransaction.apply(this, arguments);\n      }\n\n      return cancelCryptoTransaction;\n    }()\n  }, {\n    key: \"setSelectedCryptoTransactionId\",\n    value: function setSelectedCryptoTransactionId(id) {\n      this.selected_crypto_transaction_id = id;\n    }\n  }, {\n    key: \"setIsCryptoTransactionsCancelModalVisible\",\n    value: function setIsCryptoTransactionsCancelModalVisible(is_visible) {\n      this.is_crypto_transactions_cancel_modal_visible = is_visible;\n    }\n  }, {\n    key: \"showCryptoTransactionsCancelModal\",\n    value: function showCryptoTransactionsCancelModal(id) {\n      this.setSelectedCryptoTransactionId(id);\n      this.setIsCryptoTransactionsCancelModalVisible(true);\n    }\n  }, {\n    key: \"hideCryptoTransactionsCancelModal\",\n    value: function hideCryptoTransactionsCancelModal() {\n      this.setSelectedCryptoTransactionId('');\n      this.setIsCryptoTransactionsCancelModalVisible(false);\n    }\n  }, {\n    key: \"setSelectedCryptoStatus\",\n    value: function setSelectedCryptoStatus(status) {\n      this.selected_crypto_status = status;\n    }\n  }, {\n    key: \"setSelectedCryptoStatusDescription\",\n    value: function setSelectedCryptoStatusDescription(description) {\n      this.selected_crypto_status_description = description;\n    }\n  }, {\n    key: \"setIsCryptoTransactionsStatusModalVisible\",\n    value: function setIsCryptoTransactionsStatusModalVisible(is_visible) {\n      this.is_crypto_transactions_status_modal_visible = is_visible;\n    }\n  }, {\n    key: \"showCryptoTransactionsStatusModal\",\n    value: function showCryptoTransactionsStatusModal(description, name) {\n      this.setSelectedCryptoStatusDescription(description);\n      this.setSelectedCryptoStatus(name);\n      this.setIsCryptoTransactionsStatusModalVisible(true);\n    }\n  }, {\n    key: \"hideCryptoTransactionsStatusModal\",\n    value: function hideCryptoTransactionsStatusModal() {\n      this.setIsCryptoTransactionsStatusModalVisible(false);\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(is_loading) {\n      this.is_loading = is_loading;\n    }\n  }, {\n    key: \"setIsCryptoTransactionsVisible\",\n    value: function setIsCryptoTransactionsVisible(is_visible) {\n      this.is_crypto_transactions_visible = is_visible;\n    }\n  }]);\n\n  return TransactionHistoryStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/withdraw-store.js\nfunction withdraw_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction withdraw_store_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { withdraw_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { withdraw_store_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction withdraw_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction withdraw_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction withdraw_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) withdraw_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) withdraw_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar WithdrawStore = /*#__PURE__*/function () {\n  function WithdrawStore(_ref) {\n    var WS = _ref.WS,\n        root_store = _ref.root_store;\n\n    withdraw_store_classCallCheck(this, WithdrawStore);\n\n    this.blockchain_address = '';\n    this.container = constants.containers.withdraw;\n    this.error = new ErrorStore();\n    this.is_10k_withdrawal_limit_reached = undefined;\n    this.is_withdraw_confirmed = false;\n    this.withdraw_amount = '';\n    this.max_withdraw_amount = 0;\n    this.crypto_config = {};\n    (0,external_mobx_.makeObservable)(this, {\n      blockchain_address: external_mobx_.observable,\n      container: external_mobx_.observable,\n      error: external_mobx_.observable,\n      is_10k_withdrawal_limit_reached: external_mobx_.observable,\n      is_withdraw_confirmed: external_mobx_.observable,\n      withdraw_amount: external_mobx_.observable,\n      max_withdraw_amount: external_mobx_.observable,\n      crypto_config: external_mobx_.observable,\n      setIsWithdrawConfirmed: external_mobx_.action.bound,\n      setWithdrawAmount: external_mobx_.action.bound,\n      requestWithdraw: external_mobx_.action.bound,\n      saveWithdraw: external_mobx_.action.bound,\n      resetWithrawForm: external_mobx_.action.bound,\n      setBlockchainAddress: external_mobx_.action.bound,\n      onMountWithdraw: external_mobx_.action.bound,\n      onMountCryptoWithdraw: external_mobx_.action.bound,\n      is_withdrawal_locked: external_mobx_.computed,\n      setMaxWithdrawAmount: external_mobx_.action.bound,\n      check10kLimit: external_mobx_.action.bound,\n      set10kLimitation: external_mobx_.action.bound,\n      setCryptoConfig: external_mobx_.action.bound,\n      setWithdrawPercentageSelectorResult: external_mobx_.action.bound,\n      validateWithdrawFromAmount: external_mobx_.action.bound,\n      validateWithdrawToAmount: external_mobx_.action.bound,\n      account_platform_icon: external_mobx_.computed\n    });\n    this.root_store = root_store;\n    this.WS = WS;\n  }\n\n  withdraw_store_createClass(WithdrawStore, [{\n    key: \"setIsWithdrawConfirmed\",\n    value: function setIsWithdrawConfirmed(is_withdraw_confirmed) {\n      var converter_from_amount = this.root_store.modules.cashier.crypto_fiat_converter.converter_from_amount;\n      this.is_withdraw_confirmed = is_withdraw_confirmed;\n      if (is_withdraw_confirmed) this.setWithdrawAmount(converter_from_amount);\n\n      if (!is_withdraw_confirmed) {\n        var _this$root_store = this.root_store,\n            client = _this$root_store.client,\n            modules = _this$root_store.modules;\n        var active_container = modules.cashier.general_store.active_container;\n        var container = constants.map_action[active_container];\n        client.setVerificationCode('', container);\n      }\n    }\n  }, {\n    key: \"setWithdrawAmount\",\n    value: function setWithdrawAmount(amount) {\n      this.withdraw_amount = amount;\n    }\n  }, {\n    key: \"requestWithdraw\",\n    value: function () {\n      var _requestWithdraw = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(verification_code) {\n        var _this = this;\n\n        var _this$root_store2, client, modules, crypto_fiat_converter;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$root_store2 = this.root_store, client = _this$root_store2.client, modules = _this$root_store2.modules;\n                crypto_fiat_converter = modules.cashier.crypto_fiat_converter;\n\n                if (client.is_logged_in) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (crypto_fiat_converter.converter_from_amount) {\n                  _context.next = 7;\n                  break;\n                }\n\n                crypto_fiat_converter.setConverterFromError((0,translations_.localize)('This field is required.'));\n                return _context.abrupt(\"return\");\n\n              case 7:\n                _context.next = 9;\n                return this.WS.cryptoWithdraw({\n                  address: this.blockchain_address,\n                  amount: +crypto_fiat_converter.converter_from_amount,\n                  verification_code: verification_code,\n                  dry_run: 1\n                }).then(function (response) {\n                  if (response.error) {\n                    _this.error.setErrorMessage({\n                      code: 'CryptoWithdrawalError',\n                      message: response.error.message\n                    });\n\n                    _this.setCryptoConfig().then(function () {\n                      return _this.validateWithdrawFromAmount();\n                    });\n                  } else {\n                    _this.saveWithdraw(verification_code);\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function requestWithdraw(_x) {\n        return _requestWithdraw.apply(this, arguments);\n      }\n\n      return requestWithdraw;\n    }()\n  }, {\n    key: \"saveWithdraw\",\n    value: function () {\n      var _saveWithdraw = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(verification_code) {\n        var _this2 = this;\n\n        var converter_from_amount;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                converter_from_amount = this.root_store.modules.cashier.crypto_fiat_converter.converter_from_amount;\n                this.error.setErrorMessage('');\n                _context2.next = 4;\n                return this.WS.cryptoWithdraw({\n                  address: this.blockchain_address,\n                  amount: +converter_from_amount,\n                  verification_code: verification_code\n                }).then(function (response) {\n                  if (response.error) {\n                    _this2.error.setErrorMessage(response.error);\n\n                    if (verification_code) {\n                      var _this2$root_store = _this2.root_store,\n                          client = _this2$root_store.client,\n                          modules = _this2$root_store.modules;\n                      var active_container = modules.cashier.general_store.active_container;\n                      var container = constants.map_action[active_container];\n                      client.setVerificationCode('', container);\n                    }\n\n                    _this2.resetWithrawForm();\n                  } else {\n                    _this2.setIsWithdrawConfirmed(true);\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function saveWithdraw(_x2) {\n        return _saveWithdraw.apply(this, arguments);\n      }\n\n      return saveWithdraw;\n    }()\n  }, {\n    key: \"resetWithrawForm\",\n    value: function resetWithrawForm() {\n      var _this$root_store$modu = this.root_store.modules.cashier.crypto_fiat_converter,\n          setConverterFromAmount = _this$root_store$modu.setConverterFromAmount,\n          setConverterToAmount = _this$root_store$modu.setConverterToAmount;\n      var _this$root_store3 = this.root_store,\n          client = _this$root_store3.client,\n          modules = _this$root_store3.modules;\n      var active_container = modules.cashier.general_store.active_container;\n      var container = constants.map_action[active_container];\n      this.setBlockchainAddress('');\n      setConverterFromAmount('');\n      setConverterToAmount('');\n      client.setVerificationCode('', container);\n    }\n  }, {\n    key: \"setBlockchainAddress\",\n    value: function setBlockchainAddress(address) {\n      this.blockchain_address = address;\n    }\n  }, {\n    key: \"willMountWithdraw\",\n    value: function willMountWithdraw(verification_code) {\n      if (this && this.root_store && verification_code) {\n        var _this$root_store4 = this.root_store,\n            client = _this$root_store4.client,\n            modules = _this$root_store4.modules;\n        var active_container = modules.cashier.general_store.active_container;\n        var container = constants.map_action[active_container];\n        client.setVerificationCode('', container);\n      }\n    }\n  }, {\n    key: \"onMountWithdraw\",\n    value: function () {\n      var _onMountWithdraw = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(verification_code) {\n        var _this$root_store5, client, modules, _modules$cashier$gene, active_container, is_crypto, onMountCommon, setLoading, setOnRemount, _modules$cashier$ifra, checkIframeLoaded, clearTimeoutCashierUrl, clearIframe, is_session_timeout, setContainerHeight, setIframeUrl, setSessionTimeout, setTimeoutCashierUrl, is_virtual, current_container, response_cashier, container;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$root_store5 = this.root_store, client = _this$root_store5.client, modules = _this$root_store5.modules;\n                _modules$cashier$gene = modules.cashier.general_store, active_container = _modules$cashier$gene.active_container, is_crypto = _modules$cashier$gene.is_crypto, onMountCommon = _modules$cashier$gene.onMountCommon, setLoading = _modules$cashier$gene.setLoading, setOnRemount = _modules$cashier$gene.setOnRemount;\n                _modules$cashier$ifra = modules.cashier.iframe, checkIframeLoaded = _modules$cashier$ifra.checkIframeLoaded, clearTimeoutCashierUrl = _modules$cashier$ifra.clearTimeoutCashierUrl, clearIframe = _modules$cashier$ifra.clearIframe, is_session_timeout = _modules$cashier$ifra.is_session_timeout, setContainerHeight = _modules$cashier$ifra.setContainerHeight, setIframeUrl = _modules$cashier$ifra.setIframeUrl, setSessionTimeout = _modules$cashier$ifra.setSessionTimeout, setTimeoutCashierUrl = _modules$cashier$ifra.setTimeoutCashierUrl;\n                is_virtual = client.is_virtual;\n                current_container = active_container;\n                setOnRemount(this.onMountWithdraw);\n                _context3.next = 8;\n                return onMountCommon();\n\n              case 8:\n                this.error.setErrorMessage('');\n                setContainerHeight(0);\n                clearIframe();\n                setLoading(true);\n\n                if (is_session_timeout) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                checkIframeLoaded();\n                return _context3.abrupt(\"return\");\n\n              case 15:\n                // if session has timed out reset everything\n                setIframeUrl('');\n\n                if (!(!verification_code || is_virtual)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                setLoading(false); // if virtual, clear everything and don't proceed further\n                // if no verification code, we should request again\n\n                return _context3.abrupt(\"return\");\n\n              case 19:\n                _context3.next = 21;\n                return this.WS.authorized.cashier(active_container, {\n                  verification_code: verification_code\n                });\n\n              case 21:\n                response_cashier = _context3.sent;\n\n                if (!(current_container !== active_container)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                setLoading(false);\n                return _context3.abrupt(\"return\");\n\n              case 25:\n                if (!response_cashier.error) {\n                  _context3.next = 33;\n                  break;\n                }\n\n                this.error.handleCashierError(response_cashier.error);\n                setLoading(false);\n                setSessionTimeout(true);\n                clearTimeoutCashierUrl();\n\n                if (verification_code) {\n                  container = constants.map_action[active_container];\n                  client.setVerificationCode('', container);\n                }\n\n                _context3.next = 43;\n                break;\n\n              case 33:\n                if (!is_crypto) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                setLoading(false);\n                _context3.next = 43;\n                break;\n\n              case 37:\n                _context3.next = 39;\n                return checkIframeLoaded();\n\n              case 39:\n                setLoading(false);\n                setIframeUrl(response_cashier.cashier);\n                setSessionTimeout(false);\n                setTimeoutCashierUrl(true);\n\n              case 43:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onMountWithdraw(_x3) {\n        return _onMountWithdraw.apply(this, arguments);\n      }\n\n      return onMountWithdraw;\n    }()\n  }, {\n    key: \"onMountCryptoWithdraw\",\n    value: function () {\n      var _onMountCryptoWithdraw = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(verification_code) {\n        var _response_cashier$err;\n\n        var _this$root_store$modu2, crypto_fiat_converter, general_store, iframe, str_reg_exp, response_cashier, _this$root_store6, client, modules, active_container, container;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$root_store$modu2 = this.root_store.modules.cashier, crypto_fiat_converter = _this$root_store$modu2.crypto_fiat_converter, general_store = _this$root_store$modu2.general_store, iframe = _this$root_store$modu2.iframe;\n                general_store.setLoading(true);\n                str_reg_exp = /^\\w{8,128}$/;\n\n                if (!str_reg_exp.test(verification_code)) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                _context4.next = 6;\n                return this.WS.cryptoWithdraw({\n                  address: this.blockchain_address,\n                  amount: +crypto_fiat_converter.converter_from_amount,\n                  verification_code: verification_code,\n                  dry_run: 1\n                });\n\n              case 6:\n                response_cashier = _context4.sent;\n                _context4.next = 10;\n                break;\n\n              case 9:\n                response_cashier = {\n                  error: {\n                    code: 'InvalidToken',\n                    message: 'Your token has expired or is invalid.'\n                  }\n                };\n\n              case 10:\n                if (!(((_response_cashier$err = response_cashier.error) === null || _response_cashier$err === void 0 ? void 0 : _response_cashier$err.code) === 'InvalidToken')) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                this.error.handleCashierError(response_cashier.error);\n                general_store.setLoading(false);\n                iframe.setSessionTimeout(true);\n                iframe.clearTimeoutCashierUrl();\n\n                if (verification_code) {\n                  _this$root_store6 = this.root_store, client = _this$root_store6.client, modules = _this$root_store6.modules;\n                  active_container = modules.cashier.general_store.active_container;\n                  container = constants.map_action[active_container];\n                  client.setVerificationCode('', container);\n                }\n\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.next = 20;\n                return this.setCryptoConfig();\n\n              case 20:\n                general_store.setLoading(false);\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onMountCryptoWithdraw(_x4) {\n        return _onMountCryptoWithdraw.apply(this, arguments);\n      }\n\n      return onMountCryptoWithdraw;\n    }()\n  }, {\n    key: \"setCryptoConfig\",\n    value: function () {\n      var _setCryptoConfig = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _yield$this$WS$crypto;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.WS.cryptoConfig();\n\n              case 2:\n                _context5.t1 = _yield$this$WS$crypto = _context5.sent;\n                _context5.t0 = _context5.t1 === null;\n\n                if (_context5.t0) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.t0 = _yield$this$WS$crypto === void 0;\n\n              case 6:\n                if (!_context5.t0) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.t2 = void 0;\n                _context5.next = 11;\n                break;\n\n              case 10:\n                _context5.t2 = _yield$this$WS$crypto.crypto_config;\n\n              case 11:\n                this.crypto_config = _context5.t2;\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function setCryptoConfig() {\n        return _setCryptoConfig.apply(this, arguments);\n      }\n\n      return setCryptoConfig;\n    }()\n  }, {\n    key: \"is_withdrawal_locked\",\n    get: function get() {\n      var _client$account_statu;\n\n      var client = this.root_store.client;\n      var authentication = client.account_status.authentication;\n      if (!((_client$account_statu = client.account_status) !== null && _client$account_statu !== void 0 && _client$account_statu.status)) return false;\n      var need_poi = authentication.needs_verification.includes('identity');\n      var need_authentication = this.error.is_ask_authentication && need_poi;\n      return client.is_withdrawal_lock || need_authentication || this.error.is_ask_financial_risk_approval;\n    }\n  }, {\n    key: \"setMaxWithdrawAmount\",\n    value: function setMaxWithdrawAmount(amount) {\n      this.max_withdraw_amount = amount;\n    }\n  }, {\n    key: \"check10kLimit\",\n    value: function () {\n      var _check10kLimit = withdraw_store_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var _yield$client$getLimi, _yield$client$getLimi2;\n\n        var client, remainder, min_withdrawal, is_limit_reached;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                client = this.root_store.client;\n                _context6.next = 3;\n                return client.getLimits();\n\n              case 3:\n                _context6.t1 = _yield$client$getLimi = _context6.sent;\n                _context6.t0 = _context6.t1 === null;\n\n                if (_context6.t0) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _context6.t0 = _yield$client$getLimi === void 0;\n\n              case 7:\n                if (!_context6.t0) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                _context6.t2 = void 0;\n                _context6.next = 12;\n                break;\n\n              case 11:\n                _context6.t2 = (_yield$client$getLimi2 = _yield$client$getLimi.get_limits) === null || _yield$client$getLimi2 === void 0 ? void 0 : _yield$client$getLimi2.remainder;\n\n              case 12:\n                remainder = _context6.t2;\n                this.setMaxWithdrawAmount(remainder);\n                min_withdrawal = (0,shared_.getMinWithdrawal)(client.currency);\n                is_limit_reached = !!(typeof remainder !== 'undefined' && +remainder < min_withdrawal);\n                this.set10kLimitation(is_limit_reached);\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function check10kLimit() {\n        return _check10kLimit.apply(this, arguments);\n      }\n\n      return check10kLimit;\n    }()\n  }, {\n    key: \"set10kLimitation\",\n    value: function set10kLimitation(is_limit_reached) {\n      this.is_10k_withdrawal_limit_reached = is_limit_reached;\n    }\n  }, {\n    key: \"setWithdrawPercentageSelectorResult\",\n    value: function setWithdrawPercentageSelectorResult(amount) {\n      var _this$root_store7 = this.root_store,\n          client = _this$root_store7.client,\n          modules = _this$root_store7.modules;\n      var _modules$cashier = modules.cashier,\n          crypto_fiat_converter = _modules$cashier.crypto_fiat_converter,\n          general_store = _modules$cashier.general_store;\n      var currency = client.currency,\n          current_fiat_currency = client.current_fiat_currency;\n\n      if (amount > 0) {\n        crypto_fiat_converter.setConverterFromAmount(amount);\n        this.validateWithdrawFromAmount();\n        crypto_fiat_converter.onChangeConverterFromAmount({\n          target: {\n            value: amount\n          }\n        }, currency, current_fiat_currency || 'USD');\n      } else {\n        crypto_fiat_converter.resetConverter();\n      }\n\n      crypto_fiat_converter.setIsTimerVisible(false);\n      general_store.percentageSelectorSelectionStatus(false);\n    }\n  }, {\n    key: \"validateWithdrawFromAmount\",\n    value: function validateWithdrawFromAmount() {\n      var _this$crypto_config,\n          _this$crypto_config$c,\n          _this$crypto_config$c2,\n          _this3 = this;\n\n      var error_message = '';\n      var _this$root_store8 = this.root_store,\n          client = _this$root_store8.client,\n          modules = _this$root_store8.modules;\n      var balance = client.balance,\n          currency = client.currency;\n      var crypto_fiat_converter = modules.cashier.crypto_fiat_converter;\n      var converter_from_amount = crypto_fiat_converter.converter_from_amount,\n          setConverterFromError = crypto_fiat_converter.setConverterFromError;\n      var min_withdraw_amount = (_this$crypto_config = this.crypto_config) === null || _this$crypto_config === void 0 ? void 0 : (_this$crypto_config$c = _this$crypto_config.currencies_config) === null || _this$crypto_config$c === void 0 ? void 0 : (_this$crypto_config$c2 = _this$crypto_config$c[currency]) === null || _this$crypto_config$c2 === void 0 ? void 0 : _this$crypto_config$c2.minimum_withdrawal;\n      var max_withdraw_amount = +this.max_withdraw_amount > +balance ? +balance : +this.max_withdraw_amount;\n      var format_balance = (0,shared_.formatMoney)(currency, balance, true);\n      var format_min_withdraw_amount = (0,shared_.formatMoney)(currency, min_withdraw_amount, true);\n      var format_max_withdraw_amount = (0,shared_.formatMoney)(currency, max_withdraw_amount, true);\n\n      if (converter_from_amount) {\n        var _validNumber = (0,shared_.validNumber)(converter_from_amount, {\n          type: 'float',\n          decimals: (0,shared_.getDecimalPlaces)(currency)\n        }),\n            is_ok = _validNumber.is_ok,\n            message = _validNumber.message;\n\n        if (!is_ok) error_message = message;else if (+balance < +converter_from_amount) error_message = (0,translations_.localize)('Insufficient funds');else if (+balance < +min_withdraw_amount) {\n          error_message = (0,translations_.localize)('Your balance ({{format_balance}} {{currency}}) is less than the current minimum withdrawal allowed ({{format_min_withdraw_amount}} {{currency}}). Please top up your account to continue with your withdrawal.', {\n            format_balance: format_balance,\n            currency: currency,\n            format_min_withdraw_amount: format_min_withdraw_amount\n          });\n        } else if (+converter_from_amount < +min_withdraw_amount || +converter_from_amount > +max_withdraw_amount) {\n          error_message = (0,translations_.localize)('The current allowed withdraw amount is {{format_min_withdraw_amount}} to {{format_max_withdraw_amount}} {{currency}}', {\n            format_min_withdraw_amount: format_min_withdraw_amount,\n            format_max_withdraw_amount: format_max_withdraw_amount,\n            currency: currency\n          });\n        }\n\n        if ((0,shared_.isMobile)() && error_message.length > 35) {\n          var error_content = error_message;\n          error_message = /*#__PURE__*/external_react_default().createElement(components_.ReadMore, {\n            expand_text: (0,translations_.localize)('more'),\n            text: error_content,\n            collapse_length: 28,\n            openDialog: function openDialog() {\n              return _this3.error.setErrorMessage({\n                code: 'CryptoWithdrawalReadMore',\n                message: error_content\n              });\n            },\n            show_dialog: true\n          });\n        }\n      }\n\n      setConverterFromError(error_message);\n    }\n  }, {\n    key: \"validateWithdrawToAmount\",\n    value: function validateWithdrawToAmount() {\n      var error_message = '';\n      var _this$root_store9 = this.root_store,\n          client = _this$root_store9.client,\n          modules = _this$root_store9.modules;\n      var current_fiat_currency = client.current_fiat_currency;\n      var _modules$cashier$cryp = modules.cashier.crypto_fiat_converter,\n          converter_to_amount = _modules$cashier$cryp.converter_to_amount,\n          setConverterToError = _modules$cashier$cryp.setConverterToError;\n\n      if (converter_to_amount) {\n        var _validNumber2 = (0,shared_.validNumber)(converter_to_amount, {\n          type: 'float',\n          decimals: (0,shared_.getDecimalPlaces)(current_fiat_currency)\n        }),\n            is_ok = _validNumber2.is_ok,\n            message = _validNumber2.message;\n\n        if (!is_ok) error_message = message;\n      }\n\n      setConverterToError(error_message);\n    }\n  }, {\n    key: \"account_platform_icon\",\n    get: function get() {\n      var _this$root_store$clie = this.root_store.client,\n          account_list = _this$root_store$clie.account_list,\n          loginid = _this$root_store$clie.loginid;\n      var platform_icon = account_list.find(function (acc) {\n        return loginid === acc.loginid;\n      }).icon;\n      return platform_icon;\n    }\n  }]);\n\n  return WithdrawStore;\n}();\n\n\n;// CONCATENATED MODULE: ./stores/cashier-store.js\nfunction cashier_store_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction cashier_store_createClass(Constructor, protoProps, staticProps) { if (protoProps) cashier_store_defineProperties(Constructor.prototype, protoProps); if (staticProps) cashier_store_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction cashier_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CashierStore = /*#__PURE__*/cashier_store_createClass(function CashierStore(_ref) {\n  var root_store = _ref.root_store,\n      WS = _ref.WS;\n\n  cashier_store_classCallCheck(this, CashierStore);\n\n  this.account_prompt_dialog = new AccountPromptDialogStore(root_store);\n  this.account_transfer = new AccountTransferStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.crypto_fiat_converter = new CryptoFiatConverterStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.deposit = new DepositStore(WS, root_store);\n  this.error_dialog = new ErrorDialogStore();\n  this.error = new ErrorStore();\n  this.general_store = new GeneralStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.iframe = new IframeStore(root_store);\n  this.onramp = new OnRampStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.payment_agent = new PaymentAgentStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.payment_agent_transfer = new PaymentAgentTransferStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.transaction_history = new TransactionHistoryStore({\n    root_store: root_store,\n    WS: WS\n  });\n  this.withdraw = new WithdrawStore({\n    root_store: root_store,\n    WS: WS\n  });\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./stores/cashier-store.js\n");

/***/ }),

/***/ "@deriv/components":
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;

/***/ }),

/***/ "@deriv/shared":
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;

/***/ }),

/***/ "@deriv/translations":
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;

/***/ }),

/***/ "mobx":
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;

/***/ }),

/***/ "react":
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "cashier/js/cashier." + chunkId + "." + "a007a79dd7345a890a13" + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "@deriv/cashier:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"cashier-store": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk_deriv_cashier"] = self["webpackChunk_deriv_cashier"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./stores/cashier-store.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});