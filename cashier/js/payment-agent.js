/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"), require("react-router"), require("react-router-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["@deriv/components", "@deriv/shared", "@deriv/translations", "mobx", "react", "react-dom", "react-router", "react-router-dom"], factory);
	else if(typeof exports === 'object')
		exports["@deriv/cashier"] = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"), require("react-router"), require("react-router-dom"));
	else
		root["@deriv/cashier"] = factory(root["@deriv/components"], root["@deriv/shared"], root["@deriv/translations"], root["mobx"], root["react"], root["react-dom"], root["react-router"], root["react-router-dom"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_react_router__, __WEBPACK_EXTERNAL_MODULE_react_router_dom__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../api/src/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"q\": () => (/* reexport */ src_useWS)\n});\n\n// UNUSED EXPORTS: useSubscription\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ../../api/src/useWS.ts\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar useWS = function useWS(name) {\n  var _useState = (0,external_react_.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      is_loading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = (0,external_react_.useState)(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = (0,external_react_.useState)(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var WS = (0,shared_.useWS)();\n  var send = (0,external_react_.useCallback)( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return WS.send(_objectSpread(_defineProperty({}, name, 1), (_args.length <= 0 ? undefined : _args[0]) || {}));\n\n          case 4:\n            response = _context.sent;\n\n            if (response.error) {\n              setError(response.error);\n            } else {\n              setData(response[name]);\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            setError(_context.t0);\n\n          case 11:\n            _context.prev = 11;\n            setIsLoading(false);\n            return _context.finish(11);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8, 11, 14]]);\n  })), [WS, name]);\n  return {\n    send: send,\n    is_loading: is_loading,\n    error: error,\n    data: data\n  };\n};\n\n/* harmony default export */ const src_useWS = (useWS);\n;// CONCATENATED MODULE: ../../api/src/useSubscription.ts\nfunction useSubscription_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction useSubscription_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSubscription_ownKeys(Object(source), !0).forEach(function (key) { useSubscription_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSubscription_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction useSubscription_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction useSubscription_slicedToArray(arr, i) { return useSubscription_arrayWithHoles(arr) || useSubscription_iterableToArrayLimit(arr, i) || useSubscription_unsupportedIterableToArray(arr, i) || useSubscription_nonIterableRest(); }\n\nfunction useSubscription_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction useSubscription_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useSubscription_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useSubscription_arrayLikeToArray(o, minLen); }\n\nfunction useSubscription_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction useSubscription_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction useSubscription_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar useSubscription = function useSubscription(name) {\n  var _useState = useState(false),\n      _useState2 = useSubscription_slicedToArray(_useState, 2),\n      is_loading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = useSubscription_slicedToArray(_useState3, 2),\n      is_subscribed = _useState4[0],\n      setSubscribed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = useSubscription_slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = useSubscription_slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = useSubscription_slicedToArray(_useState9, 2),\n      subscriber = _useState10[0],\n      setSubscriber = _useState10[1];\n\n  var WS = useWSShared(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var onData = function onData(response) {\n    setData(response[name === 'ticks' ? 'tick' : name]);\n    setIsLoading(false);\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var onError = function onError(response) {\n    setError(response.error);\n    setIsLoading(false);\n  };\n\n  var subscribe = function subscribe() {\n    setIsLoading(true);\n    setSubscribed(true);\n\n    try {\n      var _objectSpread2;\n\n      setSubscriber(WS.subscribe(useSubscription_objectSpread((_objectSpread2 = {}, useSubscription_defineProperty(_objectSpread2, name, 1), useSubscription_defineProperty(_objectSpread2, \"subscribe\", 1), _objectSpread2), (arguments.length <= 0 ? undefined : arguments[0]) || {})).subscribe(onData, onError));\n    } catch (e) {\n      setError(e);\n    }\n  };\n\n  var unsubscribe = function unsubscribe() {\n    var _subscriber$unsubscri;\n\n    subscriber === null || subscriber === void 0 ? void 0 : (_subscriber$unsubscri = subscriber.unsubscribe) === null || _subscriber$unsubscri === void 0 ? void 0 : _subscriber$unsubscri.call(subscriber);\n    setSubscribed(false);\n  };\n\n  return {\n    subscribe: subscribe,\n    unsubscribe: unsubscribe,\n    is_loading: is_loading,\n    is_subscribed: is_subscribed,\n    error: error,\n    data: data\n  };\n};\n\n/* harmony default export */ const src_useSubscription = ((/* unused pure expression or super */ null && (useSubscription)));\n;// CONCATENATED MODULE: ../../api/src/index.ts\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYXBpL3NyYy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7O0FBQUE7QUFJQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVZBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBWUE7O0FBWkE7QUFBQTtBQWNBO0FBZEE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFvQkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDakNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7O0FDM0NBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vYXBpL3NyYy91c2VXUy50cz8zYmIwIiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uL2FwaS9zcmMvdXNlU3Vic2NyaXB0aW9uLnRzP2YyNDgiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vYXBpL3NyYy9pbmRleC50cz8yMTQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVdTIGFzIHVzZVdTU2hhcmVkIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBUU29ja2V0RW5kcG9pbnROYW1lcywgVFNvY2tldFJlcXVlc3RQcm9wcywgVFNvY2tldFJlc3BvbnNlRGF0YSB9IGZyb20gJy4uL3R5cGVzJztcblxuY29uc3QgdXNlV1MgPSA8VCBleHRlbmRzIFRTb2NrZXRFbmRwb2ludE5hbWVzPihuYW1lOiBUKSA9PiB7XG4gICAgY29uc3QgW2lzX2xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTx1bmtub3duPigpO1xuICAgIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlPFRTb2NrZXRSZXNwb25zZURhdGE8VD4+KCk7XG4gICAgY29uc3QgV1MgPSB1c2VXU1NoYXJlZCgpO1xuXG4gICAgY29uc3Qgc2VuZCA9IHVzZUNhbGxiYWNrKFxuICAgICAgICBhc3luYyAoLi4ucHJvcHM6IFRTb2NrZXRSZXF1ZXN0UHJvcHM8VD4gZXh0ZW5kcyBuZXZlciA/IFt1bmRlZmluZWQ/XSA6IFtUU29ja2V0UmVxdWVzdFByb3BzPFQ+XSkgPT4ge1xuICAgICAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgV1Muc2VuZCh7IFtuYW1lXTogMSwgLi4uKHByb3BzWzBdIHx8IHt9KSB9KTtcblxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBzZXRFcnJvcihyZXNwb25zZS5lcnJvcik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0RGF0YShyZXNwb25zZVtuYW1lXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHNldEVycm9yKGUpO1xuICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbV1MsIG5hbWVdXG4gICAgKTtcblxuICAgIHJldHVybiB7IHNlbmQsIGlzX2xvYWRpbmcsIGVycm9yLCBkYXRhIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VXUztcbiIsImltcG9ydCB7IFRTb2NrZXRSZXF1ZXN0UHJvcHMsIFRTb2NrZXRSZXNwb25zZURhdGEsIFRTb2NrZXRTdWJzY3JpYmFibGVFbmRwb2ludE5hbWVzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgdXNlV1MgYXMgdXNlV1NTaGFyZWQgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCB1c2VTdWJzY3JpcHRpb24gPSA8VCBleHRlbmRzIFRTb2NrZXRTdWJzY3JpYmFibGVFbmRwb2ludE5hbWVzPihuYW1lOiBUKSA9PiB7XG4gICAgY29uc3QgW2lzX2xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2lzX3N1YnNjcmliZWQsIHNldFN1YnNjcmliZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8dW5rbm93bj4oKTtcbiAgICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZTxUU29ja2V0UmVzcG9uc2VEYXRhPFQ+PigpO1xuICAgIGNvbnN0IFtzdWJzY3JpYmVyLCBzZXRTdWJzY3JpYmVyXSA9IHVzZVN0YXRlPHsgdW5zdWJzY3JpYmU/OiBWb2lkRnVuY3Rpb24gfT4oKTtcbiAgICBjb25zdCBXUyA9IHVzZVdTU2hhcmVkKCk7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IG9uRGF0YSA9IChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICAgIHNldERhdGEocmVzcG9uc2VbbmFtZSA9PT0gJ3RpY2tzJyA/ICd0aWNrJyA6IG5hbWVdKTtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICB9O1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdCBvbkVycm9yID0gKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgICAgc2V0RXJyb3IocmVzcG9uc2UuZXJyb3IpO1xuICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH07XG5cbiAgICBjb25zdCBzdWJzY3JpYmUgPSAoLi4ucHJvcHM6IFRTb2NrZXRSZXF1ZXN0UHJvcHM8VD4gZXh0ZW5kcyBuZXZlciA/IFt1bmRlZmluZWQ/XSA6IFtUU29ja2V0UmVxdWVzdFByb3BzPFQ+XSkgPT4ge1xuICAgICAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgICAgIHNldFN1YnNjcmliZWQodHJ1ZSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHNldFN1YnNjcmliZXIoV1Muc3Vic2NyaWJlKHsgW25hbWVdOiAxLCBzdWJzY3JpYmU6IDEsIC4uLihwcm9wc1swXSB8fCB7fSkgfSkuc3Vic2NyaWJlKG9uRGF0YSwgb25FcnJvcikpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBzZXRFcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcj8udW5zdWJzY3JpYmU/LigpO1xuICAgICAgICBzZXRTdWJzY3JpYmVkKGZhbHNlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHsgc3Vic2NyaWJlLCB1bnN1YnNjcmliZSwgaXNfbG9hZGluZywgaXNfc3Vic2NyaWJlZCwgZXJyb3IsIGRhdGEgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVN1YnNjcmlwdGlvbjtcbiIsImV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlV1MgfSBmcm9tICcuL3VzZVdTJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi91c2VTdWJzY3JpcHRpb24nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../api/src/index.ts\n");

/***/ }),

/***/ "./components/cashier-container/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"o\": () => (/* reexport */ cashier_container_virtual)\n});\n\n// UNUSED EXPORTS: Real\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n;// CONCATENATED MODULE: ./components/cashier-container/real/real.tsx\n\n\n\nvar real_Real = function Real(_ref) {\n  var iframe_height = _ref.iframe_height,\n      iframe_url = _ref.iframe_url,\n      clearIframe = _ref.clearIframe,\n      is_loading = _ref.is_loading;\n  React.useEffect(function () {\n    return function () {\n      clearIframe();\n    };\n  }, [clearIframe]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cashier__wrapper\"\n  }, is_loading && /*#__PURE__*/React.createElement(Loading, {\n    is_fullscreen: true\n  }), iframe_url && /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"cashier__content\",\n    height: iframe_height,\n    src: iframe_url,\n    frameBorder: \"0\",\n    scrolling: \"auto\",\n    \"data-testid\": \"dt_doughflow_section\"\n  }));\n};\n\n/* harmony default export */ const real = ((/* unused pure expression or super */ null && (real_Real)));\n;// CONCATENATED MODULE: ./components/cashier-container/real/index.ts\n\n/* harmony default export */ const cashier_container_real = ((/* unused pure expression or super */ null && (Real)));\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: external \"react-router-dom\"\nvar external_react_router_dom_ = __webpack_require__(\"react-router-dom\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: ../../stores/src/index.ts + 3 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n;// CONCATENATED MODULE: ./components/cashier-container/virtual/virtual.tsx\n\n\n\n\n\n\n\n\nvar Virtual = (0,src/* observer */.Pi)(function () {\n  var _useStore = (0,src/* useStore */.oR)(),\n      _useStore$ui = _useStore.ui,\n      is_dark_mode_on = _useStore$ui.is_dark_mode_on,\n      toggleAccountsDialog = _useStore$ui.toggleAccountsDialog;\n\n  var _React$useContext = external_react_default().useContext(shared_.PlatformContext),\n      is_pre_appstore = _React$useContext.is_pre_appstore;\n\n  var history = (0,external_react_router_dom_.useHistory)();\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__wrapper\",\n    \"data-testid\": \"dt_cashier_wrapper_id\"\n  }, /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    \"data-testid\": is_dark_mode_on ? 'dt_virtual_account_switch_icon_dark_id' : 'dt_virtual_account_switch_icon_light_id',\n    className: classnames_default()('virtual__account-switch-icon', is_dark_mode_on ? 'virtual__account-switch-icon--dark' : 'virtual__account-switch-icon--light')\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    align: \"center\",\n    weight: \"bold\",\n    color: \"prominent\",\n    className: \"virtual__header\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: 'You are using a demo account'\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: (0,shared_.isMobile)() ? 'xxs' : 'xs',\n    line_height: \"s\",\n    align: \"center\",\n    className: \"cashier__paragraph cashier__text\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"You need to switch to a real money account to use this feature.<0/>You can do this by selecting a real account from the <1>Account Switcher.</1>\",\n    components: [/*#__PURE__*/external_react_default().createElement(\"br\", {\n      key: 0\n    }), /*#__PURE__*/external_react_default().createElement(\"span\", {\n      key: 1,\n      className: \"virtual__account-switch-text\",\n      onClick: function onClick() {\n        if (is_pre_appstore) {\n          history.push(shared_.routes.trade);\n          toggleAccountsDialog();\n        } else {\n          toggleAccountsDialog();\n        }\n      }\n    })]\n  }))));\n});\n/* harmony default export */ const virtual = ((0,external_react_router_dom_.withRouter)(Virtual));\n;// CONCATENATED MODULE: ./components/cashier-container/virtual/index.ts\n\n/* harmony default export */ const cashier_container_virtual = (virtual);\n;// CONCATENATED MODULE: ./components/cashier-container/index.ts\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2Nhc2hpZXItY29udGFpbmVyL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFTQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVdBOztBQUVBOztBQ2xDQTtBQUVBOzs7Ozs7Ozs7Ozs7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBR0E7QUFBQTs7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBR0E7QUFLQTtBQU5BO0FBV0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQVFBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQUpBO0FBc0JBO0FBRUE7O0FDaEVBO0FBRUE7O0FDRkE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4vY29tcG9uZW50cy9jYXNoaWVyLWNvbnRhaW5lci9yZWFsL3JlYWwudHN4P2JmNTAiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2Nhc2hpZXItY29udGFpbmVyL3JlYWwvaW5kZXgudHM/YTdiZSIsIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uL2NvbXBvbmVudHMvY2FzaGllci1jb250YWluZXIvdmlydHVhbC92aXJ0dWFsLnRzeD85ZGRkIiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4vY29tcG9uZW50cy9jYXNoaWVyLWNvbnRhaW5lci92aXJ0dWFsL2luZGV4LnRzPzRjYjIiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2Nhc2hpZXItY29udGFpbmVyL2luZGV4LnRzP2FkYTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExvYWRpbmcgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5cbnR5cGUgVFJlYWxQcm9wcyA9IHtcbiAgICBpZnJhbWVfaGVpZ2h0OiBudW1iZXIgfCBzdHJpbmc7XG4gICAgaWZyYW1lX3VybDogc3RyaW5nO1xuICAgIGNsZWFySWZyYW1lOiAoKSA9PiB2b2lkO1xuICAgIGlzX2xvYWRpbmc6IGJvb2xlYW47XG59O1xuXG5jb25zdCBSZWFsID0gKHsgaWZyYW1lX2hlaWdodCwgaWZyYW1lX3VybCwgY2xlYXJJZnJhbWUsIGlzX2xvYWRpbmcgfTogVFJlYWxQcm9wcykgPT4ge1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBjbGVhcklmcmFtZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtjbGVhcklmcmFtZV0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Nhc2hpZXJfX3dyYXBwZXInPlxuICAgICAgICAgICAge2lzX2xvYWRpbmcgJiYgPExvYWRpbmcgaXNfZnVsbHNjcmVlbiAvPn1cbiAgICAgICAgICAgIHtpZnJhbWVfdXJsICYmIChcbiAgICAgICAgICAgICAgICA8aWZyYW1lXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllcl9fY29udGVudCdcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXtpZnJhbWVfaGVpZ2h0fVxuICAgICAgICAgICAgICAgICAgICBzcmM9e2lmcmFtZV91cmx9XG4gICAgICAgICAgICAgICAgICAgIGZyYW1lQm9yZGVyPScwJ1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGxpbmc9J2F1dG8nXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdkdF9kb3VnaGZsb3dfc2VjdGlvbidcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWw7XG4iLCJpbXBvcnQgUmVhbCBmcm9tICcuL3JlYWwnO1xuXG5leHBvcnQgZGVmYXVsdCBSZWFsO1xuIiwiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgd2l0aFJvdXRlciwgdXNlSGlzdG9yeSB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCB7IGlzTW9iaWxlLCByb3V0ZXMsIFBsYXRmb3JtQ29udGV4dCB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IHVzZVN0b3JlLCBvYnNlcnZlciB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuaW1wb3J0ICcuL3ZpcnR1YWwuc2Nzcyc7XG5cbmNvbnN0IFZpcnR1YWwgPSBvYnNlcnZlcigoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICB1aTogeyBpc19kYXJrX21vZGVfb24sIHRvZ2dsZUFjY291bnRzRGlhbG9nIH0sXG4gICAgfSA9IHVzZVN0b3JlKCk7XG4gICAgY29uc3QgeyBpc19wcmVfYXBwc3RvcmUgfSA9IFJlYWN0LnVzZUNvbnRleHQoUGxhdGZvcm1Db250ZXh0KTtcbiAgICBjb25zdCBoaXN0b3J5ID0gdXNlSGlzdG9yeSgpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Nhc2hpZXJfX3dyYXBwZXInIGRhdGEtdGVzdGlkPSdkdF9jYXNoaWVyX3dyYXBwZXJfaWQnPlxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNfZGFya19tb2RlX29uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnZHRfdmlydHVhbF9hY2NvdW50X3N3aXRjaF9pY29uX2RhcmtfaWQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnZHRfdmlydHVhbF9hY2NvdW50X3N3aXRjaF9pY29uX2xpZ2h0X2lkJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICd2aXJ0dWFsX19hY2NvdW50LXN3aXRjaC1pY29uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzX2RhcmtfbW9kZV9vbiA/ICd2aXJ0dWFsX19hY2NvdW50LXN3aXRjaC1pY29uLS1kYXJrJyA6ICd2aXJ0dWFsX19hY2NvdW50LXN3aXRjaC1pY29uLS1saWdodCdcbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdoMicgYWxpZ249J2NlbnRlcicgd2VpZ2h0PSdib2xkJyBjb2xvcj0ncHJvbWluZW50JyBjbGFzc05hbWU9J3ZpcnR1YWxfX2hlYWRlcic+XG4gICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD17J1lvdSBhcmUgdXNpbmcgYSBkZW1vIGFjY291bnQnfSAvPlxuICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICBhcz0ncCdcbiAgICAgICAgICAgICAgICAgICAgc2l6ZT17aXNNb2JpbGUoKSA/ICd4eHMnIDogJ3hzJ31cbiAgICAgICAgICAgICAgICAgICAgbGluZV9oZWlnaHQ9J3MnXG4gICAgICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllcl9fcGFyYWdyYXBoIGNhc2hpZXJfX3RleHQnXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PSdZb3UgbmVlZCB0byBzd2l0Y2ggdG8gYSByZWFsIG1vbmV5IGFjY291bnQgdG8gdXNlIHRoaXMgZmVhdHVyZS48MC8+WW91IGNhbiBkbyB0aGlzIGJ5IHNlbGVjdGluZyBhIHJlYWwgYWNjb3VudCBmcm9tIHRoZSA8MT5BY2NvdW50IFN3aXRjaGVyLjwvMT4nXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyIGtleT17MH0gLz4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXsxfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3ZpcnR1YWxfX2FjY291bnQtc3dpdGNoLXRleHQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc19wcmVfYXBwc3RvcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2gocm91dGVzLnRyYWRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVBY2NvdW50c0RpYWxvZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVBY2NvdW50c0RpYWxvZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+LFxuICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoVmlydHVhbCk7XG4iLCJpbXBvcnQgVmlydHVhbCBmcm9tICcuL3ZpcnR1YWwnO1xuXG5leHBvcnQgZGVmYXVsdCBWaXJ0dWFsO1xuIiwiaW1wb3J0IFJlYWwgZnJvbSAnLi9yZWFsJztcbmltcG9ydCBWaXJ0dWFsIGZyb20gJy4vdmlydHVhbCc7XG5cbmV4cG9ydCB7IFJlYWwsIFZpcnR1YWwgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/cashier-container/index.ts\n");

/***/ }),

/***/ "./components/cashier-locked/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_cashier_locked)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: ../../stores/src/index.ts + 3 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n// EXTERNAL MODULE: ../../hooks/src/index.ts + 7 modules\nvar hooks_src = __webpack_require__(\"../../hooks/src/index.ts\");\n// EXTERNAL MODULE: ./components/empty-state/index.ts + 1 modules\nvar empty_state = __webpack_require__(\"./components/empty-state/index.ts\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ./components/cashier-locked/cashier-locked-provider.tsx\n\n\n\n\nvar getMessage = function getMessage(_ref) {\n  var cashier_validation = _ref.cashier_validation,\n      is_crypto = _ref.is_crypto,\n      is_system_maintenance = _ref.is_system_maintenance,\n      is_cashier_locked = _ref.is_cashier_locked,\n      is_deposit_locked = _ref.is_deposit_locked,\n      is_withdrawal_locked = _ref.is_withdrawal_locked,\n      is_identity_verification_needed = _ref.is_identity_verification_needed,\n      excluded_until = _ref.excluded_until;\n  var no_residence = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('no_residence');\n  var unwelcome_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('unwelcome_status');\n  var self_exclusion = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('SelfExclusion');\n  var no_withdrawal_or_trading_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('no_withdrawal_or_trading_status');\n  var only_pa_withdrawals_allowed_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('only_pa_withdrawals_allowed_status');\n  var withdraw_service_unavailable_for_pa = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('WithdrawServiceUnavailableForPA');\n  var withdrawal_locked_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('withdrawal_locked_status');\n  var documents_expired = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('documents_expired');\n  var cashier_locked_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('cashier_locked_status');\n  var disabled_status = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('disabled_status');\n  var financial_assessment_required = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('FinancialAssessmentRequired');\n  var ask_currency = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_CURRENCY');\n  var ask_authenticate = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_AUTHENTICATE');\n  var ask_financial_risk_approval = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_FINANCIAL_RISK_APPROVAL');\n  var ask_tin_information = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_TIN_INFORMATION');\n  var ask_self_exclusion_max_turnover_set = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_SELF_EXCLUSION_MAX_TURNOVER_SET');\n  var ask_fix_details = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_FIX_DETAILS');\n  var ask_uk_funds_protection = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('ASK_UK_FUNDS_PROTECTION');\n  var pa_commision_withdrawal_limit = cashier_validation === null || cashier_validation === void 0 ? void 0 : cashier_validation.includes('PACommisionWithdrawalLimit');\n\n  if (is_system_maintenance) {\n    if (is_crypto && is_withdrawal_locked) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('Withdrawals are temporarily unavailable due to system maintenance. You can make your withdrawals when the maintenance is complete.')\n    };\n    if (is_crypto && is_deposit_locked) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Deposits are temporarily unavailable due to system maintenance. You can make your deposits when the maintenance is complete.')\n    };\n    if (is_crypto) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Our cryptocurrency cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.')\n    };\n    return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Our cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.')\n    };\n  }\n\n  if (is_cashier_locked) {\n    if (no_residence) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('You’ve not set your country of residence. To access Cashier, please update your country of residence in the Personal details section in your account settings.')\n    };\n    if (documents_expired) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('The identification documents you submitted have expired. Please submit valid identity documents to unlock Cashier. ')\n    };\n    if (cashier_locked_status) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Your cashier is currently locked. Please contact us via live chat to find out how to unlock it.')\n    };\n    if (disabled_status) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Your account is temporarily disabled. Please contact us via live chat to enable deposits and withdrawals again.')\n    };\n    if (ask_currency) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: (0,translations_.localize)('Please set your account currency to enable deposits and withdrawals.')\n    };\n    if (ask_authenticate && is_identity_verification_needed) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Please submit your <0>proof of identity</0> to authenticate your account and access your Cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          href: '/account/proof-of-identity'\n        })]\n      })\n    };\n    if (ask_authenticate) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and access your cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-identity'\n        }), /*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 1,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-address'\n        })]\n      })\n    };\n    if (ask_financial_risk_approval) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Please complete the <0>Appropriateness Test</0> to access your cashier.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (financial_assessment_required) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your cashier is locked. Please complete the <0>financial assessment</0> to unlock it.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (ask_tin_information) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You have not provided your tax identification number. This information is necessary for legal and regulatory requirements. Please go to <0>Personal details</0> in your account settings, and fill in your latest tax identification number.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (ask_uk_funds_protection) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your cashier is locked. See <0>how we protect your funds</0> before you proceed.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/cashier/deposit'\n        })]\n      })\n    };\n    if (ask_self_exclusion_max_turnover_set) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your access to Cashier has been temporarily disabled as you have not set your 30-day turnover limit. Please go to <0>Self-exclusion</0> and set your 30-day turnover limit.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/self-exclusion'\n        })]\n      })\n    };\n    if (ask_fix_details) return {\n      icon: 'IcCashierLocked',\n      title: (0,translations_.localize)('Cashier is locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits and withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n  }\n\n  if (is_deposit_locked) {\n    if (ask_fix_details) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (self_exclusion) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: (0,translations_.localize)('You have chosen to exclude yourself from trading on our website until {{exclude_until}}. If you are unable to place a trade or deposit after your self-exclusion period, please contact us via live chat.', {\n        exclude_until: (0,shared_.formatDate)(excluded_until, 'DD MMM, YYYY')\n      })\n    };\n    if (unwelcome_status) return {\n      icon: 'IcCashierDepositLock',\n      title: (0,translations_.localize)('Deposits are locked'),\n      description: (0,translations_.localize)('Please contact us via live chat.')\n    };\n  }\n\n  if (is_withdrawal_locked) {\n    if (financial_assessment_required) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"You can only make deposits. Please complete the <0>financial assessment</0> to unlock withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          href: '/account/financial-assessment',\n          \"data-testid\": \"dt_financial_assessment_link\"\n        })]\n      })\n    };\n    if (ask_authenticate) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and request for withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-identity'\n        }), /*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 1,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/proof-of-address'\n        })]\n      })\n    };\n    if (ask_fix_details) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable withdrawals.\",\n        components: [/*#__PURE__*/external_react_default().createElement(\"a\", {\n          key: 0,\n          className: \"link\",\n          rel: \"noopener noreferrer\",\n          href: '/account/personal-details'\n        })]\n      })\n    };\n    if (withdraw_service_unavailable_for_pa) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('This feature is not available for payment agents.')\n    };\n    if (no_withdrawal_or_trading_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('Unfortunately, you can only make deposits. Please contact us via live chat to enable withdrawals.')\n    };\n    if (withdrawal_locked_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('Unfortunately, you can only make deposits. Please contact us via live chat to enable withdrawals.')\n    };\n    if (only_pa_withdrawals_allowed_status) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Withdrawals are locked'),\n      description: (0,translations_.localize)('You can only make deposits. Please contact us via live chat for more information.')\n    };\n    if (pa_commision_withdrawal_limit) return {\n      icon: 'IcCashierWithdrawalLock',\n      title: (0,translations_.localize)('Cashier is locked for withdrawals'),\n      description: (0,translations_.localize)(\"It seems that you've no commissions to withdraw at the moment. You can make withdrawals once you receive your commissions.\")\n    };\n  }\n\n  return {\n    icon: 'IcCashierLocked',\n    title: (0,translations_.localize)('Cashier is locked'),\n    description: (0,translations_.localize)('Your cashier is currently locked. Please contact us via live chat to find out how to unlock it.')\n  };\n};\n\n/* harmony default export */ const cashier_locked_provider = (getMessage);\n;// CONCATENATED MODULE: ./components/cashier-locked/cashier-locked.tsx\n\n\n\n\n\nvar CashierLocked = (0,src/* observer */.Pi)(function () {\n  var _accounts$loginid;\n\n  var is_deposit_locked = (0,hooks_src/* useDepositLocked */.wN)();\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      modules = _useStore.modules;\n\n  var account_status = client.account_status,\n      accounts = client.accounts,\n      current_currency_type = client.current_currency_type,\n      is_withdrawal_locked = client.is_withdrawal_lock,\n      loginid = client.loginid,\n      is_identity_verification_needed = client.is_identity_verification_needed;\n  var cashier = modules.cashier;\n  var general_store = cashier.general_store;\n  var is_cashier_locked = general_store.is_cashier_locked,\n      is_system_maintenance = general_store.is_system_maintenance;\n  var state = cashier_locked_provider({\n    cashier_validation: account_status.cashier_validation,\n    is_crypto: current_currency_type === 'crypto',\n    is_system_maintenance: is_system_maintenance,\n    is_cashier_locked: is_cashier_locked,\n    is_deposit_locked: is_deposit_locked,\n    is_withdrawal_locked: is_withdrawal_locked,\n    is_identity_verification_needed: is_identity_verification_needed,\n    excluded_until: loginid ? (_accounts$loginid = accounts[loginid]) === null || _accounts$loginid === void 0 ? void 0 : _accounts$loginid.excluded_until : undefined\n  });\n  return /*#__PURE__*/external_react_default().createElement(empty_state/* default */.Z, {\n    icon: state.icon,\n    title: state.title,\n    description: state.description\n  });\n});\n/* harmony default export */ const cashier_locked = (CashierLocked);\n;// CONCATENATED MODULE: ./components/cashier-locked/index.ts\n\n/* harmony default export */ const components_cashier_locked = (cashier_locked);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/cashier-locked/index.ts\n");

/***/ }),

/***/ "./components/email-verification-empty-state/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_email_verification_empty_state)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: ../../hooks/src/index.ts + 7 modules\nvar src = __webpack_require__(\"../../hooks/src/index.ts\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: ./components/empty-state/index.ts + 1 modules\nvar empty_state = __webpack_require__(\"./components/empty-state/index.ts\");\n;// CONCATENATED MODULE: ./components/email-verification-empty-state/email-verification-resend-empty-state.tsx\n\n\n\n\nvar EmailVerificationResendEmptyState = function EmailVerificationResendEmptyState(_ref) {\n  var is_counter_running = _ref.is_counter_running,\n      counter = _ref.counter,\n      resend = _ref.resend;\n  return /*#__PURE__*/external_react_default().createElement(empty_state/* default */.Z, {\n    title: (0,translations_.localize)(\"Didn't receive the email?\"),\n    description: (0,translations_.localize)(\"Check your spam or junk folder. If it's not there, try resending the email.\"),\n    action: {\n      label: is_counter_running ? (0,translations_.localize)('Resend email in {{seconds}}s', {\n        seconds: counter\n      }) : (0,translations_.localize)('Resend email'),\n      onClick: resend,\n      disabled: is_counter_running\n    }\n  });\n};\n\n/* harmony default export */ const email_verification_resend_empty_state = (EmailVerificationResendEmptyState);\n;// CONCATENATED MODULE: ./components/email-verification-empty-state/email-verification-empty-state.tsx\n\n\n\n\n\n\n\nvar EmailVerificationEmptyState = function EmailVerificationEmptyState(_ref) {\n  var type = _ref.type;\n  var verify = (0,src/* useVerifyEmail */.hU)(type);\n  var action = {\n    label: (0,translations_.localize)(\"Didn't receive the email?\"),\n    onClick: verify.send,\n    tertiary: true\n  };\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"email-verification-empty-state\"\n  }, /*#__PURE__*/external_react_default().createElement(empty_state/* default */.Z, {\n    icon: \"IcEmailSent\",\n    title: (0,translations_.localize)(\"We've sent you an email.\"),\n    description: (0,translations_.localize)('Please check your email for the verification link to complete the process.'),\n    action: verify.has_been_sent ? undefined : action\n  }), verify.has_been_sent && /*#__PURE__*/external_react_default().createElement(email_verification_resend_empty_state, {\n    is_counter_running: verify.is_counter_running,\n    counter: verify.counter,\n    resend: verify.send\n  }));\n};\n\n/* harmony default export */ const email_verification_empty_state = (EmailVerificationEmptyState);\n;// CONCATENATED MODULE: ./components/email-verification-empty-state/index.ts\n\n/* harmony default export */ const components_email_verification_empty_state = (email_verification_empty_state);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2VtYWlsLXZlcmlmaWNhdGlvbi1lbXB0eS1zdGF0ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztBQVFBO0FBSUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBTEE7QUFIQTtBQVlBOztBQUVBOztBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBTUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFRQTtBQUNBO0FBQ0E7QUFIQTtBQVFBOztBQUVBOztBQ3ZDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2VtYWlsLXZlcmlmaWNhdGlvbi1lbXB0eS1zdGF0ZS9lbWFpbC12ZXJpZmljYXRpb24tcmVzZW5kLWVtcHR5LXN0YXRlLnRzeD84NGE2Iiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4vY29tcG9uZW50cy9lbWFpbC12ZXJpZmljYXRpb24tZW1wdHktc3RhdGUvZW1haWwtdmVyaWZpY2F0aW9uLWVtcHR5LXN0YXRlLnRzeD9mM2ZjIiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4vY29tcG9uZW50cy9lbWFpbC12ZXJpZmljYXRpb24tZW1wdHktc3RhdGUvaW5kZXgudHM/NzE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBFbXB0eVN0YXRlIGZyb20gJ0NvbXBvbmVudHMvZW1wdHktc3RhdGUnO1xuXG50eXBlIFRFbWFpbFZlcmlmaWNhdGlvblJlc2VuZEVtcHR5U3RhdGVQcm9wcyA9IHtcbiAgICBpc19jb3VudGVyX3J1bm5pbmc6IGJvb2xlYW47XG4gICAgY291bnRlcjogbnVtYmVyO1xuICAgIHJlc2VuZDogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IEVtYWlsVmVyaWZpY2F0aW9uUmVzZW5kRW1wdHlTdGF0ZSA9ICh7XG4gICAgaXNfY291bnRlcl9ydW5uaW5nLFxuICAgIGNvdW50ZXIsXG4gICAgcmVzZW5kLFxufTogVEVtYWlsVmVyaWZpY2F0aW9uUmVzZW5kRW1wdHlTdGF0ZVByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPEVtcHR5U3RhdGVcbiAgICAgICAgICAgIHRpdGxlPXtsb2NhbGl6ZShcIkRpZG4ndCByZWNlaXZlIHRoZSBlbWFpbD9cIil9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17bG9jYWxpemUoXCJDaGVjayB5b3VyIHNwYW0gb3IganVuayBmb2xkZXIuIElmIGl0J3Mgbm90IHRoZXJlLCB0cnkgcmVzZW5kaW5nIHRoZSBlbWFpbC5cIil9XG4gICAgICAgICAgICBhY3Rpb249e3tcbiAgICAgICAgICAgICAgICBsYWJlbDogaXNfY291bnRlcl9ydW5uaW5nXG4gICAgICAgICAgICAgICAgICAgID8gbG9jYWxpemUoJ1Jlc2VuZCBlbWFpbCBpbiB7e3NlY29uZHN9fXMnLCB7IHNlY29uZHM6IGNvdW50ZXIgfSlcbiAgICAgICAgICAgICAgICAgICAgOiBsb2NhbGl6ZSgnUmVzZW5kIGVtYWlsJyksXG4gICAgICAgICAgICAgICAgb25DbGljazogcmVzZW5kLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBpc19jb3VudGVyX3J1bm5pbmcsXG4gICAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFbWFpbFZlcmlmaWNhdGlvblJlc2VuZEVtcHR5U3RhdGU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVmVyaWZ5RW1haWwsIFRFbWFpbFZlcmlmaWNhdGlvblR5cGUgfSBmcm9tICdAZGVyaXYvaG9va3MnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBFbXB0eVN0YXRlIGZyb20gJ0NvbXBvbmVudHMvZW1wdHktc3RhdGUnO1xuaW1wb3J0IEVtYWlsVmVyaWZpY2F0aW9uUmVzZW5kRW1wdHlTdGF0ZSBmcm9tICcuL2VtYWlsLXZlcmlmaWNhdGlvbi1yZXNlbmQtZW1wdHktc3RhdGUnO1xuaW1wb3J0ICcuL2VtYWlsLXZlcmlmaWNhdGlvbi1lbXB0eS1zdGF0ZS5zY3NzJztcblxudHlwZSBURW1haWxWZXJpZmljYXRpb25FbXB0eVN0YXRlUHJvcHMgPSB7XG4gICAgdHlwZTogVEVtYWlsVmVyaWZpY2F0aW9uVHlwZTtcbn07XG5cbmNvbnN0IEVtYWlsVmVyaWZpY2F0aW9uRW1wdHlTdGF0ZSA9ICh7IHR5cGUgfTogVEVtYWlsVmVyaWZpY2F0aW9uRW1wdHlTdGF0ZVByb3BzKSA9PiB7XG4gICAgY29uc3QgdmVyaWZ5ID0gdXNlVmVyaWZ5RW1haWwodHlwZSk7XG5cbiAgICBjb25zdCBhY3Rpb24gPSB7XG4gICAgICAgIGxhYmVsOiBsb2NhbGl6ZShcIkRpZG4ndCByZWNlaXZlIHRoZSBlbWFpbD9cIiksXG4gICAgICAgIG9uQ2xpY2s6IHZlcmlmeS5zZW5kLFxuICAgICAgICB0ZXJ0aWFyeTogdHJ1ZSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2VtYWlsLXZlcmlmaWNhdGlvbi1lbXB0eS1zdGF0ZSc+XG4gICAgICAgICAgICA8RW1wdHlTdGF0ZVxuICAgICAgICAgICAgICAgIGljb249J0ljRW1haWxTZW50J1xuICAgICAgICAgICAgICAgIHRpdGxlPXtsb2NhbGl6ZShcIldlJ3ZlIHNlbnQgeW91IGFuIGVtYWlsLlwiKX1cbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17bG9jYWxpemUoJ1BsZWFzZSBjaGVjayB5b3VyIGVtYWlsIGZvciB0aGUgdmVyaWZpY2F0aW9uIGxpbmsgdG8gY29tcGxldGUgdGhlIHByb2Nlc3MuJyl9XG4gICAgICAgICAgICAgICAgYWN0aW9uPXt2ZXJpZnkuaGFzX2JlZW5fc2VudCA/IHVuZGVmaW5lZCA6IGFjdGlvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7dmVyaWZ5Lmhhc19iZWVuX3NlbnQgJiYgKFxuICAgICAgICAgICAgICAgIDxFbWFpbFZlcmlmaWNhdGlvblJlc2VuZEVtcHR5U3RhdGVcbiAgICAgICAgICAgICAgICAgICAgaXNfY291bnRlcl9ydW5uaW5nPXt2ZXJpZnkuaXNfY291bnRlcl9ydW5uaW5nfVxuICAgICAgICAgICAgICAgICAgICBjb3VudGVyPXt2ZXJpZnkuY291bnRlcn1cbiAgICAgICAgICAgICAgICAgICAgcmVzZW5kPXt2ZXJpZnkuc2VuZH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVtYWlsVmVyaWZpY2F0aW9uRW1wdHlTdGF0ZTtcbiIsImltcG9ydCBFbWFpbFZlcmlmaWNhdGlvbkVtcHR5U3RhdGUgZnJvbSAnLi9lbWFpbC12ZXJpZmljYXRpb24tZW1wdHktc3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBFbWFpbFZlcmlmaWNhdGlvbkVtcHR5U3RhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/email-verification-empty-state/index.ts\n");

/***/ }),

/***/ "./components/empty-state/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_empty_state)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n;// CONCATENATED MODULE: ./components/empty-state/empty-state.tsx\n\n\n\n\nvar EmptyState = function EmptyState(_ref) {\n  var icon = _ref.icon,\n      title = _ref.title,\n      description = _ref.description,\n      action = _ref.action;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier-empty-state\"\n  }, icon && /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: icon,\n    data_testid: \"dt_empty_state_icon\",\n    className: \"cashier-empty-state__icon\"\n  }), title && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    weight: \"bold\",\n    align: \"center\",\n    \"data-testid\": \"dt_empty_state_title\",\n    className: \"cashier-empty-state__title\"\n  }, title), description && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: \"xs\",\n    align: \"center\",\n    \"data-testid\": \"dt_empty_state_description\",\n    className: \"cashier-empty-state__desc\"\n  }, description), action && /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    has_effect: true,\n    text: action.label,\n    onClick: action.onClick,\n    primary: action.primary || true,\n    tertiary: action.tertiary,\n    is_disabled: action.disabled,\n    large: true,\n    \"data-testid\": \"dt_empty_state_action\",\n    className: \"cashier-empty-state__action\"\n  }));\n};\n\n/* harmony default export */ const empty_state = (EmptyState);\n;// CONCATENATED MODULE: ./components/empty-state/index.ts\n\n/* harmony default export */ const components_empty_state = (empty_state);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2VtcHR5LXN0YXRlL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFQTs7QUFpQkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUExQkE7O0FBeUNBOztBQzdEQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2VtcHR5LXN0YXRlL2VtcHR5LXN0YXRlLnRzeD80MWIwIiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4vY29tcG9uZW50cy9lbXB0eS1zdGF0ZS9pbmRleC50cz8yY2M2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJY29uLCBUZXh0LCBCdXR0b24gfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUUmVhY3RDaGlsZHJlbiB9IGZyb20gJ1R5cGVzJztcbmltcG9ydCAnLi9lbXB0eS1zdGF0ZS5zY3NzJztcblxudHlwZSBUQWN0aW9uID0ge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgb25DbGljaz86ICgpID0+IHZvaWQ7XG4gICAgcHJpbWFyeT86IGJvb2xlYW47XG4gICAgdGVydGlhcnk/OiBib29sZWFuO1xuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCB0eXBlIFRFbXB0eVN0YXRlUHJvcHMgPSB7XG4gICAgaWNvbj86IHN0cmluZztcbiAgICB0aXRsZT86IHN0cmluZyB8IFRSZWFjdENoaWxkcmVuO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nIHwgVFJlYWN0Q2hpbGRyZW47XG4gICAgYWN0aW9uPzogVEFjdGlvbjtcbn0gJiAoeyB0aXRsZTogc3RyaW5nIHwgVFJlYWN0Q2hpbGRyZW4gfSB8IHsgZGVzY3JpcHRpb246IHN0cmluZyB8IFRSZWFjdENoaWxkcmVuIH0pO1xuXG5jb25zdCBFbXB0eVN0YXRlID0gKHsgaWNvbiwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24gfTogVEVtcHR5U3RhdGVQcm9wcykgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdjYXNoaWVyLWVtcHR5LXN0YXRlJz5cbiAgICAgICAge2ljb24gJiYgPEljb24gaWNvbj17aWNvbn0gZGF0YV90ZXN0aWQ9J2R0X2VtcHR5X3N0YXRlX2ljb24nIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9faWNvbicgLz59XG4gICAgICAgIHt0aXRsZSAmJiAoXG4gICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIGFzPSdoMidcbiAgICAgICAgICAgICAgICB3ZWlnaHQ9J2JvbGQnXG4gICAgICAgICAgICAgICAgYWxpZ249J2NlbnRlcidcbiAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0nZHRfZW1wdHlfc3RhdGVfdGl0bGUnXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdjYXNoaWVyLWVtcHR5LXN0YXRlX190aXRsZSdcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIGFzPSdwJ1xuICAgICAgICAgICAgICAgIHNpemU9J3hzJ1xuICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J2R0X2VtcHR5X3N0YXRlX2Rlc2NyaXB0aW9uJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9fZGVzYydcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7ZGVzY3JpcHRpb259XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHthY3Rpb24gJiYgKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIGhhc19lZmZlY3RcbiAgICAgICAgICAgICAgICB0ZXh0PXthY3Rpb24ubGFiZWx9XG4gICAgICAgICAgICAgICAgb25DbGljaz17YWN0aW9uLm9uQ2xpY2t9XG4gICAgICAgICAgICAgICAgcHJpbWFyeT17YWN0aW9uLnByaW1hcnkgfHwgdHJ1ZX1cbiAgICAgICAgICAgICAgICB0ZXJ0aWFyeT17YWN0aW9uLnRlcnRpYXJ5fVxuICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkPXthY3Rpb24uZGlzYWJsZWR9XG4gICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0nZHRfZW1wdHlfc3RhdGVfYWN0aW9uJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2FzaGllci1lbXB0eS1zdGF0ZV9fYWN0aW9uJ1xuICAgICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEVtcHR5U3RhdGU7XG4iLCJpbXBvcnQgRW1wdHlTdGF0ZSBmcm9tICcuL2VtcHR5LXN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgRW1wdHlTdGF0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/empty-state/index.ts\n");

/***/ }),

/***/ "./components/error-dialog/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_error_dialog)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"react-router-dom\"\nvar external_react_router_dom_ = __webpack_require__(\"react-router-dom\");\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: ../../stores/src/index.ts + 3 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n;// CONCATENATED MODULE: ./components/error-dialog/error-dialog.tsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nvar ErrorDialog = (0,src/* observer */.Pi)(function (_ref) {\n  var className = _ref.className,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? {} : _ref$error;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      _useStore$ui = _useStore.ui,\n      disableApp = _useStore$ui.disableApp,\n      enableApp = _useStore$ui.enableApp;\n\n  var history = (0,external_react_router_dom_.useHistory)();\n\n  var _React$useState = external_react_default().useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      is_visible = _React$useState2[0],\n      setIsVisible = _React$useState2[1];\n\n  var _React$useState3 = external_react_default().useState({\n    title: '',\n    cancel_button_text: undefined,\n    confirm_button_text: '',\n    onConfirm: undefined,\n    message: ''\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      details = _React$useState4[0],\n      setDetails = _React$useState4[1];\n\n  var dismissError = external_react_default().useCallback(function () {\n    if (error.setErrorMessage) {\n      error.setErrorMessage({\n        code: '',\n        message: ''\n      }, null, false);\n    }\n\n    setErrorVisibility(false);\n  }, [error]);\n  var mapErrorToDetails = external_react_default().useCallback(function (error_code, error_message) {\n    if (error_code && ['Fiat2CryptoTransferOverLimit', 'Crypto2FiatTransferOverLimit', 'Crypto2CryptoTransferOverLimit'].includes(error_code)) {\n      setDetails({\n        title: (0,translations_.localize)('Please verify your identity'),\n        cancel_button_text: (0,translations_.localize)('Cancel'),\n        confirm_button_text: (0,translations_.localize)('Verify identity'),\n        onConfirm: function onConfirm() {\n          return history.push(shared_.routes.proof_of_identity);\n        },\n        message: error_message\n      });\n    } else if (error_code === 'FinancialAssessmentRequired') {\n      setDetails({\n        title: (0,translations_.localize)('Cashier Error'),\n        cancel_button_text: undefined,\n        confirm_button_text: (0,translations_.localize)('OK'),\n        onConfirm: undefined,\n        message: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"Please complete your <0>financial assessment</0>.\",\n          components: [/*#__PURE__*/external_react_default().createElement(external_react_router_dom_.Link, {\n            to: shared_.routes.financial_assessment,\n            key: 0,\n            className: \"link\",\n            onClick: dismissError\n          })]\n        })\n      });\n    } else if (error_code === 'CryptoWithdrawalError') {\n      setDetails({\n        title: (0,translations_.localize)('Error'),\n        cancel_button_text: undefined,\n        confirm_button_text: (0,translations_.localize)('Retry'),\n        onConfirm: undefined,\n        message: error_message,\n        has_close_icon: true\n      });\n    } else if (error_code === 'CryptoWithdrawalReadMore') {\n      setDetails({\n        title: '',\n        cancel_button_text: undefined,\n        confirm_button_text: (0,translations_.localize)('OK'),\n        onConfirm: undefined,\n        message: error_message\n      });\n    } else {\n      setDetails({\n        title: (0,translations_.localize)('Cashier Error'),\n        cancel_button_text: undefined,\n        confirm_button_text: (0,translations_.localize)('OK'),\n        onConfirm: undefined,\n        message: error_message\n      });\n    }\n  }, [dismissError, history]);\n  external_react_default().useEffect(function () {\n    // avoid resetting the text when dismissing the pop up\n    if (error.message) {\n      mapErrorToDetails(error.code, error.message);\n    }\n  }, [error.code, error.message, mapErrorToDetails]);\n  external_react_default().useEffect(function () {\n    setErrorVisibility(!!error.message);\n  }, [error.message]);\n\n  var setErrorVisibility = function setErrorVisibility(is_error_visible) {\n    setIsVisible(is_error_visible);\n  };\n\n  return /*#__PURE__*/external_react_default().createElement(components_.Dialog, {\n    title: details.title,\n    confirm_button_text: details.confirm_button_text,\n    cancel_button_text: details.cancel_button_text,\n    className: className,\n    onConfirm: function onConfirm() {\n      if (typeof details.onConfirm === 'function') {\n        details.onConfirm();\n      }\n\n      dismissError();\n    },\n    onEscapeButtonCancel: dismissError,\n    onCancel: details.cancel_button_text ? dismissError : undefined,\n    disableApp: disableApp,\n    enableApp: enableApp,\n    is_visible: is_visible,\n    portal_element_id: \"modal_root\",\n    has_close_icon: details.has_close_icon\n  }, details.message);\n});\n/* harmony default export */ const error_dialog = (ErrorDialog);\n;// CONCATENATED MODULE: ./components/error-dialog/index.ts\n\n/* harmony default export */ const components_error_dialog = (error_dialog);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2Vycm9yLWRpYWxvZy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlCQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFJQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQUFBO0FBQUE7QUFBQTs7QUFRQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFMQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFIQTtBQU5BO0FBbUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBT0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpCQTtBQXlCQTtBQUVBOztBQzFKQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2Vycm9yLWRpYWxvZy9lcnJvci1kaWFsb2cudHN4P2U4ODkiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi9jb21wb25lbnRzL2Vycm9yLWRpYWxvZy9pbmRleC50cz8yYmIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rLCB1c2VIaXN0b3J5IH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBEaWFsb2cgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBsb2NhbGl6ZSwgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IHJvdXRlcyB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuaW1wb3J0IHsgdXNlU3RvcmUsIG9ic2VydmVyIH0gZnJvbSAnQGRlcml2L3N0b3Jlcyc7XG5pbXBvcnQgeyBURXJyb3IsIFRSZWFjdEVsZW1lbnQgfSBmcm9tICdUeXBlcyc7XG5cbnR5cGUgVEVycm9yRGlhbG9nUHJvcHMgPSB7XG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gICAgZXJyb3I6IFRFcnJvciB8IFJlY29yZDxzdHJpbmcsIG5ldmVyPjtcbn07XG5cbnR5cGUgVFNldERldGFpbHMgPSB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBjYW5jZWxfYnV0dG9uX3RleHQ6IHVuZGVmaW5lZCB8IHN0cmluZztcbiAgICBjb25maXJtX2J1dHRvbl90ZXh0OiB1bmRlZmluZWQgfCBzdHJpbmc7XG4gICAgb25Db25maXJtOiB1bmRlZmluZWQgfCAoKCkgPT4gdm9pZCk7XG4gICAgbWVzc2FnZTogdW5kZWZpbmVkIHwgc3RyaW5nIHwgVFJlYWN0RWxlbWVudDtcbiAgICBoYXNfY2xvc2VfaWNvbj86IGJvb2xlYW47XG59O1xuXG5jb25zdCBFcnJvckRpYWxvZyA9IG9ic2VydmVyKCh7IGNsYXNzTmFtZSwgZXJyb3IgPSB7fSB9OiBURXJyb3JEaWFsb2dQcm9wcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgdWk6IHsgZGlzYWJsZUFwcCwgZW5hYmxlQXBwIH0sXG4gICAgfSA9IHVzZVN0b3JlKCk7XG5cbiAgICBjb25zdCBoaXN0b3J5ID0gdXNlSGlzdG9yeSgpO1xuICAgIGNvbnN0IFtpc192aXNpYmxlLCBzZXRJc1Zpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtkZXRhaWxzLCBzZXREZXRhaWxzXSA9IFJlYWN0LnVzZVN0YXRlPFRTZXREZXRhaWxzPih7XG4gICAgICAgIHRpdGxlOiAnJyxcbiAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0OiB1bmRlZmluZWQsXG4gICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ6ICcnLFxuICAgICAgICBvbkNvbmZpcm06IHVuZGVmaW5lZCxcbiAgICAgICAgbWVzc2FnZTogJycsXG4gICAgfSk7XG5cbiAgICBjb25zdCBkaXNtaXNzRXJyb3IgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmIChlcnJvci5zZXRFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgICAgIGVycm9yLnNldEVycm9yTWVzc2FnZSh7IGNvZGU6ICcnLCBtZXNzYWdlOiAnJyB9LCBudWxsLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0RXJyb3JWaXNpYmlsaXR5KGZhbHNlKTtcbiAgICB9LCBbZXJyb3JdKTtcblxuICAgIGNvbnN0IG1hcEVycm9yVG9EZXRhaWxzID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAgIChlcnJvcl9jb2RlPzogc3RyaW5nLCBlcnJvcl9tZXNzYWdlPzogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgZXJyb3JfY29kZSAmJlxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgJ0ZpYXQyQ3J5cHRvVHJhbnNmZXJPdmVyTGltaXQnLFxuICAgICAgICAgICAgICAgICAgICAnQ3J5cHRvMkZpYXRUcmFuc2Zlck92ZXJMaW1pdCcsXG4gICAgICAgICAgICAgICAgICAgICdDcnlwdG8yQ3J5cHRvVHJhbnNmZXJPdmVyTGltaXQnLFxuICAgICAgICAgICAgICAgIF0uaW5jbHVkZXMoZXJyb3JfY29kZSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHNldERldGFpbHMoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogbG9jYWxpemUoJ1BsZWFzZSB2ZXJpZnkgeW91ciBpZGVudGl0eScpLFxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxfYnV0dG9uX3RleHQ6IGxvY2FsaXplKCdDYW5jZWwnKSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybV9idXR0b25fdGV4dDogbG9jYWxpemUoJ1ZlcmlmeSBpZGVudGl0eScpLFxuICAgICAgICAgICAgICAgICAgICBvbkNvbmZpcm06ICgpID0+IGhpc3RvcnkucHVzaChyb3V0ZXMucHJvb2Zfb2ZfaWRlbnRpdHkpLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvcl9tZXNzYWdlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlcnJvcl9jb2RlID09PSAnRmluYW5jaWFsQXNzZXNzbWVudFJlcXVpcmVkJykge1xuICAgICAgICAgICAgICAgIHNldERldGFpbHMoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogbG9jYWxpemUoJ0Nhc2hpZXIgRXJyb3InKSxcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ6IGxvY2FsaXplKCdPSycpLFxuICAgICAgICAgICAgICAgICAgICBvbkNvbmZpcm06IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogKFxuICAgICAgICAgICAgICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9J1BsZWFzZSBjb21wbGV0ZSB5b3VyIDwwPmZpbmFuY2lhbCBhc3Nlc3NtZW50PC8wPi4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50cz17W1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG89e3JvdXRlcy5maW5hbmNpYWxfYXNzZXNzbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nbGluaydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2Rpc21pc3NFcnJvcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yX2NvZGUgPT09ICdDcnlwdG9XaXRoZHJhd2FsRXJyb3InKSB7XG4gICAgICAgICAgICAgICAgc2V0RGV0YWlscyh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBsb2NhbGl6ZSgnRXJyb3InKSxcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ6IGxvY2FsaXplKCdSZXRyeScpLFxuICAgICAgICAgICAgICAgICAgICBvbkNvbmZpcm06IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyb3JfbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgaGFzX2Nsb3NlX2ljb246IHRydWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yX2NvZGUgPT09ICdDcnlwdG9XaXRoZHJhd2FsUmVhZE1vcmUnKSB7XG4gICAgICAgICAgICAgICAgc2V0RGV0YWlscyh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ6IGxvY2FsaXplKCdPSycpLFxuICAgICAgICAgICAgICAgICAgICBvbkNvbmZpcm06IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyb3JfbWVzc2FnZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0RGV0YWlscyh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBsb2NhbGl6ZSgnQ2FzaGllciBFcnJvcicpLFxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxfYnV0dG9uX3RleHQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybV9idXR0b25fdGV4dDogbG9jYWxpemUoJ09LJyksXG4gICAgICAgICAgICAgICAgICAgIG9uQ29uZmlybTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvcl9tZXNzYWdlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbZGlzbWlzc0Vycm9yLCBoaXN0b3J5XVxuICAgICk7XG5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAvLyBhdm9pZCByZXNldHRpbmcgdGhlIHRleHQgd2hlbiBkaXNtaXNzaW5nIHRoZSBwb3AgdXBcbiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UpIHtcbiAgICAgICAgICAgIG1hcEVycm9yVG9EZXRhaWxzKGVycm9yLmNvZGUsIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfSwgW2Vycm9yLmNvZGUsIGVycm9yLm1lc3NhZ2UsIG1hcEVycm9yVG9EZXRhaWxzXSk7XG5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRFcnJvclZpc2liaWxpdHkoISFlcnJvci5tZXNzYWdlKTtcbiAgICB9LCBbZXJyb3IubWVzc2FnZV0pO1xuXG4gICAgY29uc3Qgc2V0RXJyb3JWaXNpYmlsaXR5ID0gKGlzX2Vycm9yX3Zpc2libGU6IGJvb2xlYW4pID0+IHtcbiAgICAgICAgc2V0SXNWaXNpYmxlKGlzX2Vycm9yX3Zpc2libGUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8RGlhbG9nXG4gICAgICAgICAgICB0aXRsZT17ZGV0YWlscy50aXRsZX1cbiAgICAgICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ9e2RldGFpbHMuY29uZmlybV9idXR0b25fdGV4dH1cbiAgICAgICAgICAgIGNhbmNlbF9idXR0b25fdGV4dD17ZGV0YWlscy5jYW5jZWxfYnV0dG9uX3RleHR9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgICAgIG9uQ29uZmlybT17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZGV0YWlscy5vbkNvbmZpcm0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgZGV0YWlscy5vbkNvbmZpcm0oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGlzbWlzc0Vycm9yKCk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Fc2NhcGVCdXR0b25DYW5jZWw9e2Rpc21pc3NFcnJvcn1cbiAgICAgICAgICAgIG9uQ2FuY2VsPXtkZXRhaWxzLmNhbmNlbF9idXR0b25fdGV4dCA/IGRpc21pc3NFcnJvciA6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgIGRpc2FibGVBcHA9e2Rpc2FibGVBcHB9XG4gICAgICAgICAgICBlbmFibGVBcHA9e2VuYWJsZUFwcH1cbiAgICAgICAgICAgIGlzX3Zpc2libGU9e2lzX3Zpc2libGV9XG4gICAgICAgICAgICBwb3J0YWxfZWxlbWVudF9pZD0nbW9kYWxfcm9vdCdcbiAgICAgICAgICAgIGhhc19jbG9zZV9pY29uPXtkZXRhaWxzLmhhc19jbG9zZV9pY29ufVxuICAgICAgICA+XG4gICAgICAgICAgICB7LyogdG8gYXZvaWQgdGhlIG1lc3NhZ2UgZGlzYXBwZWFyaW5nIGJlZm9yZSB0aGUgcG9wLXVwICovfVxuICAgICAgICAgICAgey8qIHVzZSBkZXRhaWxzLm1lc3NhZ2UgaW5zdGVhZCBvZiBlcnJvci5tZXNzYWdlICovfVxuICAgICAgICAgICAgey8qIHNpbmNlIHRoZSBzZXRFcnJvclZpc2liaWxpdHkgaG9vayBnZXRzIGNhbGxlZCBhZnRlciBlcnJvci5tZXNzYWdlIGlzIHJlbW92ZWQgKi99XG4gICAgICAgICAgICB7ZGV0YWlscy5tZXNzYWdlfVxuICAgICAgICA8L0RpYWxvZz5cbiAgICApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEVycm9yRGlhbG9nO1xuIiwiaW1wb3J0IEVycm9yRGlhbG9nIGZyb20gJy4vZXJyb3ItZGlhbG9nJztcblxuZXhwb3J0IGRlZmF1bHQgRXJyb3JEaWFsb2c7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/error-dialog/index.ts\n");

/***/ }),

/***/ "./components/error/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_error)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n;// CONCATENATED MODULE: ./components/error/error.tsx\n\n\n\n\n\n\nvar ErrorComponent = function ErrorComponent(_ref) {\n  var header = _ref.header,\n      message = _ref.message,\n      button_link = _ref.button_link,\n      onClickButton = _ref.onClickButton,\n      button_text = _ref.button_text,\n      footer = _ref.footer;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__wrapper cashier__wrapper-error\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"IcCashierError\",\n    className: \"error__icon\"\n  }), header && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    color: \"loss-danger\",\n    weight: \"bold\",\n    align: \"center\",\n    className: \"error__header\"\n  }, header), message && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    align: \"center\",\n    size: (0,shared_.isMobile)() ? 'xxs' : 'xs',\n    line_height: \"s\",\n    className: \"cashier__paragraph\"\n  }, message), button_link && /*#__PURE__*/external_react_default().createElement(components_.ButtonLink, {\n    className: \"error__button\",\n    to: button_link,\n    onClick: onClickButton,\n    primary: true,\n    large: true\n  }, /*#__PURE__*/external_react_default().createElement(\"span\", {\n    className: \"dc-btn__text\"\n  }, button_text)), !button_link && button_text && /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"error__button\",\n    onClick: onClickButton,\n    text: button_text,\n    primary: true,\n    large: true\n  }), footer && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    size: \"xxs\"\n  }, footer));\n};\n\nvar Error = function Error(_ref2) {\n  var error = _ref2.error;\n  var error_fields = {\n    address_city: (0,translations_.localize)('Town/City'),\n    address_line_1: (0,translations_.localize)('First line of home address'),\n    address_postcode: (0,translations_.localize)('Postal Code/ZIP'),\n    address_state: (0,translations_.localize)('State/Province'),\n    email: (0,translations_.localize)('Email address'),\n    phone: (0,translations_.localize)('Telephone'),\n    residence: (0,translations_.localize)('Country of Residence')\n  };\n\n  var onClickButton = function onClickButton() {\n    if (typeof error.onClickButton === 'function') {\n      error.onClickButton();\n    }\n\n    clearErrorMessage();\n  };\n\n  var clearErrorMessage = function clearErrorMessage() {\n    var _error$setErrorMessag;\n\n    (_error$setErrorMessag = error.setErrorMessage) === null || _error$setErrorMessag === void 0 ? void 0 : _error$setErrorMessag.call(error, {\n      code: '',\n      message: ''\n    });\n  };\n\n  var AccountError;\n\n  switch (error.code) {\n    case 'InvalidToken':\n      AccountError = /*#__PURE__*/external_react_default().createElement(ErrorComponent, {\n        header: (0,translations_.localize)('Email verification failed'),\n        message: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"The verification link you used is invalid or expired. Please request for a new one.\"\n        }),\n        onClickButton: onClickButton,\n        button_text: (0,translations_.localize)('Resend email')\n      });\n      break;\n\n    case 'ASK_FIX_DETAILS':\n      AccountError = /*#__PURE__*/external_react_default().createElement(ErrorComponent, {\n        header: (0,translations_.localize)('Update your personal details'),\n        message: /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"We can't validate your personal details because there is some information missing.\"\n        }), \"\\xA0\", Array.isArray(error.fields) ? /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: 'Please update your {{details}} to continue.',\n          values: {\n            details: error.fields.map(function (field) {\n              return error_fields[field] || field;\n            }).join(', '),\n            interpolation: {\n              escapeValue: false\n            }\n          }\n        }) : /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: 'Please update your details to continue.'\n        })),\n        button_link: \"/account/personal-details\",\n        onClickButton: onClickButton,\n        button_text: (0,translations_.localize)('Update my details'),\n        footer: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"Need help? <0>Contact us</0>.\",\n          components: [/*#__PURE__*/external_react_default().createElement(components_.StaticUrl, {\n            key: 0,\n            className: \"link\",\n            href: \"help-centre\"\n          })]\n        })\n      });\n      break;\n\n    case 'WrongResponse':\n      AccountError = /*#__PURE__*/external_react_default().createElement(ErrorComponent, {\n        header: error.message,\n        onClickButton: onClickButton,\n        button_text: (0,translations_.localize)('Try again')\n      });\n      break;\n\n    case 'PaymentAgentWithdrawError':\n      AccountError = /*#__PURE__*/external_react_default().createElement(ErrorComponent, {\n        header: error.message,\n        onClickButton: onClickButton\n      });\n      break;\n\n    default:\n      AccountError = /*#__PURE__*/external_react_default().createElement(ErrorComponent, {\n        header: error.message\n      });\n      break;\n  }\n\n  return AccountError;\n};\n\n/* harmony default export */ const error = (Error);\n;// CONCATENATED MODULE: ./components/error/index.ts\n\n/* harmony default export */ const components_error = (error);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/error/index.ts\n");

/***/ }),

/***/ "./components/side-note/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_side_note)\n});\n\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ./components/side-note/side-note.tsx\n\n\n\n\n\n\n\nvar SideNoteTitle = function SideNoteTitle(_ref) {\n  var children_length = _ref.children_length,\n      side_notes_length = _ref.side_notes_length,\n      title = _ref.title;\n  var length_of_notes = children_length || side_notes_length || 0;\n  return /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    className: \"side-note__title\",\n    weight: \"bold\",\n    as: \"p\"\n  }, title || (length_of_notes > 1 ? /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Notes\"\n  }) : /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Note\"\n  })));\n};\n\nvar SideNoteBullet = function SideNoteBullet(_ref2) {\n  var children = _ref2.children,\n      id = _ref2.id;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"side-note__bullet-wrapper\",\n    \"data-testid\": \"dt_side_note_bullet_wrapper_\".concat(id)\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"side-note__bullet\",\n    \"data-testid\": \"dt_side_note_bullet_\".concat(id)\n  }), /*#__PURE__*/external_react_default().createElement(\"div\", null, children));\n};\n\nvar SideNote = function SideNote(_ref3) {\n  var children = _ref3.children,\n      className = _ref3.className,\n      _ref3$has_bullets = _ref3.has_bullets,\n      has_bullets = _ref3$has_bullets === void 0 ? true : _ref3$has_bullets,\n      _ref3$has_title = _ref3.has_title,\n      has_title = _ref3$has_title === void 0 ? true : _ref3$has_title,\n      is_mobile = _ref3.is_mobile,\n      side_notes = _ref3.side_notes,\n      title = _ref3.title;\n  var Wrapper = is_mobile ? components_.MobileWrapper : components_.DesktopWrapper;\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, (children || (side_notes === null || side_notes === void 0 ? void 0 : side_notes.length)) && /*#__PURE__*/external_react_default().createElement(Wrapper, null, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('side-note', {\n      'side-note--mobile': (0,shared_.isMobile)()\n    }, className)\n  }, has_title && /*#__PURE__*/external_react_default().createElement(SideNoteTitle, {\n    title: title,\n    children_length: Array.isArray(children) ? children === null || children === void 0 ? void 0 : children.length : 1,\n    side_notes_length: side_notes === null || side_notes === void 0 ? void 0 : side_notes.length\n  }), children && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, children), !children && (side_notes === null || side_notes === void 0 ? void 0 : side_notes.map(function (note, i) {\n    return has_bullets ? /*#__PURE__*/external_react_default().createElement(SideNoteBullet, {\n      id: i,\n      key: i\n    }, note) : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      key: i,\n      className: \"side-note__text\",\n      size: \"xxs\",\n      as: \"p\"\n    }, note);\n  })))));\n};\n\n/* harmony default export */ const side_note = (SideNote);\n;// CONCATENATED MODULE: ./components/side-note/index.ts\n\n/* harmony default export */ const components_side_note = (side_note);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3NpZGUtbm90ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQXNCQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBR0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFGQTs7QUFPQTtBQVFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFJQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUhBO0FBVUE7QUFFQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTkE7QUFnQkE7O0FBRUE7O0FDM0ZBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uL2NvbXBvbmVudHMvc2lkZS1ub3RlL3NpZGUtbm90ZS50c3g/MGFmZiIsIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uL2NvbXBvbmVudHMvc2lkZS1ub3RlL2luZGV4LnRzP2FhMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRGVza3RvcFdyYXBwZXIsIE1vYmlsZVdyYXBwZXIsIFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBMb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuaW1wb3J0IHsgaXNNb2JpbGUgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IFRSZWFjdENoaWxkcmVuLCBUU2lkZU5vdGVzUHJvcHMgfSBmcm9tICdUeXBlcyc7XG5pbXBvcnQgJy4vc2lkZS1ub3RlLnNjc3MnO1xuXG50eXBlIFRTaWRlTm90ZVRpdGxlID0ge1xuICAgIGNoaWxkcmVuX2xlbmd0aD86IG51bWJlcjtcbiAgICBzaWRlX25vdGVzX2xlbmd0aD86IG51bWJlcjtcbiAgICB0aXRsZT86IHN0cmluZyB8IEpTWC5FbGVtZW50O1xufTtcblxudHlwZSBUU2lkZU5vdGVCdWxsZXQgPSB7XG4gICAgY2hpbGRyZW46IFRSZWFjdENoaWxkcmVuO1xuICAgIGlkOiBudW1iZXI7XG59O1xuXG50eXBlIFRTaWRlTm90ZVByb3BzID0gUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48e1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBoYXNfYnVsbGV0cz86IGJvb2xlYW47XG4gICAgaGFzX3RpdGxlPzogYm9vbGVhbjtcbiAgICBpc19tb2JpbGU/OiBib29sZWFuO1xuICAgIHNpZGVfbm90ZXM/OiBUU2lkZU5vdGVzUHJvcHM7XG4gICAgdGl0bGU/OiBzdHJpbmcgfCBKU1guRWxlbWVudDtcbn0+O1xuXG5jb25zdCBTaWRlTm90ZVRpdGxlID0gKHsgY2hpbGRyZW5fbGVuZ3RoLCBzaWRlX25vdGVzX2xlbmd0aCwgdGl0bGUgfTogVFNpZGVOb3RlVGl0bGUpID0+IHtcbiAgICBjb25zdCBsZW5ndGhfb2Zfbm90ZXMgPSBjaGlsZHJlbl9sZW5ndGggfHwgc2lkZV9ub3Rlc19sZW5ndGggfHwgMDtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxUZXh0IGNsYXNzTmFtZT0nc2lkZS1ub3RlX190aXRsZScgd2VpZ2h0PSdib2xkJyBhcz0ncCc+XG4gICAgICAgICAgICB7dGl0bGUgfHxcbiAgICAgICAgICAgICAgICAobGVuZ3RoX29mX25vdGVzID4gMSA/IDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTm90ZXMnIC8+IDogPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdOb3RlJyAvPil9XG4gICAgICAgIDwvVGV4dD5cbiAgICApO1xufTtcblxuY29uc3QgU2lkZU5vdGVCdWxsZXQgPSAoeyBjaGlsZHJlbiwgaWQgfTogVFNpZGVOb3RlQnVsbGV0KSA9PiAoXG4gICAgPGRpdiBjbGFzc05hbWU9J3NpZGUtbm90ZV9fYnVsbGV0LXdyYXBwZXInIGRhdGEtdGVzdGlkPXtgZHRfc2lkZV9ub3RlX2J1bGxldF93cmFwcGVyXyR7aWR9YH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzaWRlLW5vdGVfX2J1bGxldCcgZGF0YS10ZXN0aWQ9e2BkdF9zaWRlX25vdGVfYnVsbGV0XyR7aWR9YH0gLz5cbiAgICAgICAgPGRpdj57Y2hpbGRyZW59PC9kaXY+XG4gICAgPC9kaXY+XG4pO1xuXG5jb25zdCBTaWRlTm90ZSA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lLFxuICAgIGhhc19idWxsZXRzID0gdHJ1ZSxcbiAgICBoYXNfdGl0bGUgPSB0cnVlLFxuICAgIGlzX21vYmlsZSxcbiAgICBzaWRlX25vdGVzLFxuICAgIHRpdGxlLFxufTogVFNpZGVOb3RlUHJvcHMpID0+IHtcbiAgICBjb25zdCBXcmFwcGVyID0gaXNfbW9iaWxlID8gTW9iaWxlV3JhcHBlciA6IERlc2t0b3BXcmFwcGVyO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIHsoY2hpbGRyZW4gfHwgc2lkZV9ub3Rlcz8ubGVuZ3RoKSAmJiAoXG4gICAgICAgICAgICAgICAgPFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdzaWRlLW5vdGUnLCB7ICdzaWRlLW5vdGUtLW1vYmlsZSc6IGlzTW9iaWxlKCkgfSwgY2xhc3NOYW1lKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7aGFzX3RpdGxlICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2lkZU5vdGVUaXRsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuX2xlbmd0aD17QXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbj8ubGVuZ3RoIDogMX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lkZV9ub3Rlc19sZW5ndGg9e3NpZGVfbm90ZXM/Lmxlbmd0aH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuICYmIDw+e2NoaWxkcmVufTwvPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyFjaGlsZHJlbiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZGVfbm90ZXM/Lm1hcCgobm90ZSwgaSkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzX2J1bGxldHMgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2lkZU5vdGVCdWxsZXQgaWQ9e2l9IGtleT17aX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge25vdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NpZGVOb3RlQnVsbGV0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQga2V5PXtpfSBjbGFzc05hbWU9J3NpZGUtbm90ZV9fdGV4dCcgc2l6ZT0neHhzJyBhcz0ncCc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge25vdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L1dyYXBwZXI+XG4gICAgICAgICAgICApfVxuICAgICAgICA8Lz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2lkZU5vdGU7XG4iLCJpbXBvcnQgU2lkZU5vdGUgZnJvbSAnLi9zaWRlLW5vdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBTaWRlTm90ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/side-note/index.ts\n");

/***/ }),

/***/ "./components/transfer-confirm/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ components_transfer_confirm)\n});\n\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: ./components/error-dialog/index.ts + 1 modules\nvar error_dialog = __webpack_require__(\"./components/error-dialog/index.ts\");\n;// CONCATENATED MODULE: ./components/transfer-confirm/transfer-confirm.tsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\nvar Row = function Row(_ref) {\n  var item_key = _ref.item_key,\n      label = _ref.label,\n      value = _ref.value;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__row\"\n  }, Array.isArray(label) ? /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__row-label\"\n  }, label.map(function (label_text, idx) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      as: \"div\",\n      key: idx,\n      size: \"xs\",\n      align: \"left\"\n    }, label_text);\n  })) : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"xs\"\n  }, label), Array.isArray(value) ? /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__row-value\"\n  }, value.map(function (v, idx) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      as: \"div\",\n      key: idx,\n      size: \"xs\",\n      weight: \"bold\",\n      align: \"right\"\n    }, v);\n  })) : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"xs\",\n    weight: \"bold\",\n    align: \"right\",\n    className: classnames_default()({\n      description: item_key === 'description'\n    })\n  }, value));\n};\n\nvar WarningBullet = function WarningBullet(_ref2) {\n  var children = _ref2.children;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__warnings-bullet-wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__warnings-bullet\"\n  }), children);\n};\n\nvar TransferConfirm = function TransferConfirm(_ref3) {\n  var data = _ref3.data,\n      error = _ref3.error,\n      is_payment_agent_withdraw = _ref3.is_payment_agent_withdraw,\n      onClickBack = _ref3.onClickBack,\n      onClickConfirm = _ref3.onClickConfirm;\n\n  var _React$useState = external_react_default().useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      is_transfer_consent_checked = _React$useState2[0],\n      setIsTransferConsentChecked = _React$useState2[1];\n\n  var warning_messages = [/*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Please ensure <0>all details</0> are <0>correct</0> before making your transfer.\",\n    components: [/*#__PURE__*/external_react_default().createElement(\"strong\", {\n      key: 0\n    })],\n    key: 0\n  }), /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"We <0>do not</0> guarantee a refund if you make a wrong transfer.\",\n    components: [/*#__PURE__*/external_react_default().createElement(\"strong\", {\n      key: 0\n    })],\n    key: 1\n  })];\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('cashier__wrapper--align-center', {\n      'transfer-confirm': !is_payment_agent_withdraw\n    })\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"IcCashierRedWarning\",\n    className: \"transfer-confirm__warning-icon\",\n    data_testid: \"dt_red_warning_icon\"\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h2\",\n    color: \"loss-danger\",\n    weight: \"bold\",\n    align: \"center\",\n    className: \"transfer-confirm__warning-icon__description\",\n    size: (0,shared_.isMobile)() ? 'xs' : 's'\n  }, is_payment_agent_withdraw ? (0,translations_.localize)('Funds transfer information') : (0,translations_.localize)('Check transfer information')), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__column-wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__column\"\n  }, data.map(function (d, key) {\n    return /*#__PURE__*/external_react_default().createElement(Row, {\n      item_key: key,\n      label: d.label,\n      value: d.value,\n      key: key\n    });\n  }))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__warnings\"\n  }, warning_messages.map(function (warning, idx) {\n    return /*#__PURE__*/external_react_default().createElement(WarningBullet, {\n      key: idx\n    }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      as: \"p\",\n      size: \"xxs\",\n      line_height: \"m\",\n      color: \"loss-danger\",\n      align: \"left\"\n    }, warning));\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__checkbox\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Checkbox, {\n    name: \"transfer_consent\",\n    value: is_transfer_consent_checked,\n    onChange: function onChange() {\n      return setIsTransferConsentChecked(!is_transfer_consent_checked);\n    },\n    label: is_payment_agent_withdraw ? (0,translations_.localize)('I confirm that I have verified the payment agent’s transfer information.') : (0,translations_.localize)('I confirm that I have verified the client’s transfer information.'),\n    classNameLabel: \"transfer-confirm__checkbox-label\"\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"transfer-confirm__submit\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    large: true,\n    text: (0,translations_.localize)('Back'),\n    onClick: onClickBack,\n    secondary: true\n  }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    large: true,\n    text: (0,translations_.localize)('Transfer now'),\n    onClick: onClickConfirm,\n    primary: true,\n    disabled: !is_transfer_consent_checked\n  })), /*#__PURE__*/external_react_default().createElement(error_dialog/* default */.Z, {\n    error: error\n  }));\n};\n\n/* harmony default export */ const transfer_confirm = (TransferConfirm);\n;// CONCATENATED MODULE: ./components/transfer-confirm/index.ts\n\n/* harmony default export */ const components_transfer_confirm = (transfer_confirm);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/transfer-confirm/index.ts\n");

/***/ }),

/***/ "./pages/payment-agent/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ pages_payment_agent)\n});\n\n// EXTERNAL MODULE: ../../../node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(\"../../../node_modules/prop-types/index.js\");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: ../../stores/src/index.ts + 3 modules\nvar src = __webpack_require__(\"../../stores/src/index.ts\");\n// EXTERNAL MODULE: ./components/cashier-locked/index.ts + 2 modules\nvar cashier_locked = __webpack_require__(\"./components/cashier-locked/index.ts\");\n// EXTERNAL MODULE: ./components/cashier-container/index.ts + 4 modules\nvar cashier_container = __webpack_require__(\"./components/cashier-container/index.ts\");\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: ./components/side-note/index.ts + 1 modules\nvar side_note = __webpack_require__(\"./components/side-note/index.ts\");\n;// CONCATENATED MODULE: ./pages/payment-agent/missing-payment-method-note/missing-payment-method-note.tsx\n\n\n\n\n\nvar MissingPaymentMethodNote = function MissingPaymentMethodNote() {\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"missing-payment-method-note\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    className: \"missing-payment-method-note__title\",\n    size: \"xs\",\n    lh: \"m\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Note\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: \"xxs\",\n    lh: \"s\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Some payment methods may not be listed here but payment agents may still offer them. If you can\\u2019t find your favourite method, contact the payment agents directly to check further.\"\n  })));\n};\n\n/* harmony default export */ const missing_payment_method_note = (MissingPaymentMethodNote);\n;// CONCATENATED MODULE: ./pages/payment-agent/missing-payment-method-note/index.ts\n\n/* harmony default export */ const payment_agent_missing_payment_method_note = (missing_payment_method_note);\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n;// CONCATENATED MODULE: ./constants/constants.js\nvar containers = {\n  account_transfer: 'account_transfer',\n  deposit: 'deposit',\n  payment_agent: 'payment_agent',\n  payment_agent_transfer: 'payment_agent_transfer',\n  withdraw: 'withdraw'\n};\nvar map_action = {\n  withdraw: 'payment_withdraw',\n  payment_agent: 'payment_agent_withdraw'\n};\nvar icon_payment_methods = {\n  Alipay: ['alipay'],\n  Bank: ['bank', 'bankdeposit', 'banks', 'banktransfer', 'bankwire', 'bankwiretransfer', 'localbankwire', 'localbank', 'localbanks', 'localbanktransfer'],\n  Bankbri: ['bri', 'bankbri'],\n  Bca: ['bca', 'grupbca'],\n  Bch: ['bch'],\n  Bni: ['bni'],\n  Bitcoin: ['bitcoin', 'btc'],\n  Card: ['card', 'cards', 'visa', 'mastercard'],\n  Cimbniaga: ['cimbniaga'],\n  Crypto: ['crypto', 'cryptos', 'cryptocurrencies', 'cryptocurrency', 'weacceptcrypto'],\n  Dai: ['dai'],\n  Diamondbank: ['diamondbank'],\n  Eth: ['eth', 'ethd', 'ethereum'],\n  Ewallet: ['ewallet', 'ewallets', 'ewalletpayment', 'skrill'],\n  Firstbank: ['firstbank'],\n  Gtbank: ['gtbank'],\n  Icbc: ['icbc'],\n  Libertyreserve: ['libertyreserve'],\n  LiteCoin: ['ltc', 'litecoin'],\n  Mandiri: ['mandiri'],\n  Mandirisyariah: ['mandirisyariah'],\n  Moneygram: ['moneygram'],\n  Paypal: ['paypal'],\n  PerfectMoney: ['perfectmoneyandwebmoney', 'perfectmoney'],\n  Permatabank: ['permatabank'],\n  Tether: ['tether'],\n  Verve: ['verve'],\n  WebMoney: ['perfectmoneyandwebmoney', 'webmoney'],\n  Wechatpay: ['wechatpay'],\n  Zenithbank: ['zenithbank']\n};\nvar payment_methods = {\n  AbokiFX: ['AbokiFX', 'A BOKI FX'],\n  'ABSA Bank': ['Absa', 'ABSA', 'ABSA Bank', 'ABSABank', 'ABSABANK', 'Absabank', 'ABSA Bank Transfer', 'ABSA Cash Send', 'Absa fund transfer and orange money services', 'ABSA GHANA LIMITED', 'Direct deposit FNB and ABSA'],\n  'Access bank': ['Access bank', 'Access Bank', 'Accessbank', 'AccessBank', 'ACCESS BANK', 'Acess Bank'],\n  'Access forex': ['Access Forex', 'ACCESS FOREX', 'Access forex'],\n  'Afriland First Bank': ['Afriland First Bank', 'AFRILAND FIRST BANK'],\n  'Airtel Mobile money': ['Airtel Mobile money', 'airtel', 'Airtel', 'AIRTEL MOBILE MONEY', 'airtel money', 'Airtel money', 'Airtelmoney', 'Airtel Money', 'AirtelMoney', 'AIRTELMONEY', 'AIRTEL MONEY', 'Airtel Tigo', 'AirtelTigo cash', 'all mobile money'],\n  Airtm: ['airtm', 'Airtm'],\n  AlfalahBank: ['AlfalahBank', 'bank alfalfa', 'Alflah Bank'],\n  'All banks': ['All banks', 'All local banks', 'All local Banks', 'All local banks ZWL', 'All Local Bank transfer', 'bank', 'Bank', 'BANK', 'banks', 'Banks', 'local banks', 'Local banks', 'Local Banks', 'Pakistani Local All banks', 'Local Indian banks', 'LocalBanks'],\n  Astropay: ['astropay', 'Astropay', 'Astro Pay'],\n  'ATM transfer': ['ATM', 'ATMDeposits', 'ATMdeposit', 'ATM transfer', 'ATM Transfer', 'BanktransferATM', 'FNB ATM deposit'],\n  AzamPesa: ['AzamPesa', 'Azampesa'],\n  'Banco Bradesco': ['Banco Bradesco', 'Bradesco'],\n  'Banco de Pichincha': ['Banco de Pichincha', 'BANCO DE PICHINCHA', 'Pichincha'],\n  'Banco de Produbanco': ['Banco de Produbanco', 'BANCO DE PRODUBANCO'],\n  'Banco del Pacifico': ['Banco del Pacifico', 'BANCO DE PACIFICO', 'Pacifico'],\n  'Banco Internacional': ['Banco Internacional', 'BANCO INTERNACIONAL'],\n  'Banco Internacional de Moçambique (BIM)': ['Banco Internacional de Moçambique (BIM)', 'Bim', 'Transferencia Bim'],\n  'Bancobu Bank eNoti': ['Bancobu Bank eNoti', 'Bancobu e-noti'],\n  'Bank AL Habib': ['Bank AL Habib', 'bank al habib', 'Bank Alhabib'],\n  'Bank Negara Indonesia (BNI)': ['Bank Negara Indonesia (BNI)', 'BNI', 'BankBNI'],\n  'Bank Of Ceylon (BOC)': ['Bank Of Ceylon (BOC)', 'Bankofceylon', 'Boc Peoples Bank'],\n  'Bank Rakyat Indonesia (BRI)': ['Bank Rakyat Indonesia (BRI)', 'BankBri', 'BankBRI', 'BRI', 'BRI dan Ewallet'],\n  'Bank transfer': ['All Local Bank payment Accept', 'All local bank payments', 'All Local Bank transfer', 'bank', 'Bank', 'BANK', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Bank and E-wallet', 'bank deposit', 'Bank deposit', 'Bankdeposit', 'Bank Deposit', 'Bank deposits', 'bank ewallet', 'bank payment', 'banks', 'Banks', 'Bank to Bank account transfer', 'bank transfer', 'Bank transfer', 'Banktransfer', 'Bank Transfer', 'BankTransfer', 'BANK TRANSFER', 'BANKTRANSFER', 'bank transfer and all form of E-payments', 'Bank Transfer and all Forms of E-payments', 'BanktransferATM', 'bank transfers', 'Bank transfers', 'Bank Transfers', 'Ban transfer', 'Depositos direto em conta', 'Direct deposit FNB and ABSA', 'E-wallet Bank transfer', 'Internet Banking', 'Internet transfer', 'Internet Transfer', 'LocalBank', 'local banks', 'Local banks', 'Local Banks', 'Local bank transfer', 'Local bank Transfers', 'Local deposits', 'Local deposit', 'local deposits', 'BANKTRANSFERS', 'Bank Deposits', 'Bank deposit and transfer', 'Bank transfer and e-wallets', 'BankDeposit', 'Fiat', 'LOCALBANK', 'OnlineTransfer', 'ZWbanktransfers', 'localbanktransfer', 'Bank transfer Bank wire'],\n  'Bank wire': ['bank', 'Bank', 'BANK', 'bank payment', 'banks', 'Banks', 'bank wire', 'bankwire', 'Bank wire', 'Bankwire', 'Bank Wire', 'BankWire', 'BANKWIRE', 'Bank wire and e-wallets', 'Bank wire and E-wallets', 'Bank wires', 'Bankwires', 'bank wires and e-wallet', 'Bank wires and e-wallets', 'BankWire transfer', 'E-wallets and bank wires', 'local bank wire', 'LocalBankWire', 'LocalBankwire', 'Wire Bank Transfer', 'WIRE TRANSFER', 'Bank Wire transfer', 'Fiat', 'OnlineTransfer', 'Bank transfer Bank wire'],\n  BankABC: ['BankABC', 'BANCABC BANK'],\n  'Bank BTN': ['Bank BTN', 'BTN'],\n  'Bank of the Philippine Islands (BPI)': ['Bank of the Philippine Islands (BPI)', 'BPI'],\n  'BCA bank': ['BCA bank', 'BCA', 'BankBCA', 'bca'],\n  'BDO Unibank': ['BDO Unibank', 'BDO'],\n  BHIM: ['BHIM', 'Bhim', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe'],\n  'BMCE Bank': ['BMCE Bank', 'Bmce Bank'],\n  'CABS Bank': ['CABS Bank', 'Cabs bank', 'CABS transfer'],\n  Card: ['Card', 'card', 'cards', 'Cards', 'Credit card', 'Debit Card', 'Mastercard', 'MasterCard', 'visa', 'Visa', 'VISA', 'Visa card', 'Bank cards', 'Carteiras Electronicas', 'Fiat', 'Master card'],\n  Cash: ['cash', 'Cash', 'Cash deposit', 'Cash deposits', 'Cash in USD or Local', 'electronic transfers and cash deposits', 'FNB cash deposit', 'physical local and foreign bank notes', 'USD', 'USD cash', 'Cash Deposit', 'Fiat', 'INR', 'USDCash', 'Zwcash'],\n  'Cash send ABSA bank': ['Cash send ABSA bank', 'ABSA Cash Send', 'Cashsend', 'Cash Send', 'CashSend', 'cash send Absa', 'Cash send Absa bank'],\n  'Chipper Cash': ['Chipper Cash', 'Chipper', 'Chippercash', 'Chipperchash'],\n  'CIH Bank': ['CIH Bank', 'Cih Bank'],\n  CIMB: ['CIMB', 'CIMBNIAGA', 'NIAGA'],\n  'City Hopper': ['City hopper', 'City Hopper'],\n  'Co-operative Bank of Kenya': ['Co-operative Bank of Kenya', 'cooperativebank'],\n  'Commercial Bank': ['Commercial Bank', 'Commercialbank'],\n  'CRDB Bank': ['CRDB Bank', 'CRDBBANK'],\n  Crypto: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'bitcoin', 'Bitcoin', 'BITCOIN', 'bitcoins', 'Bitcoins', 'btc', 'BTC', 'btc smega', 'Cripto', 'crypto', 'Crypto', 'Cyptocurrency', 'cryptocurrencies', 'Cryptocurrencies', 'Crypto Currencies', 'CRYPTOCURRENCIES', 'cryptocurrency', 'Cryptocurrency', 'CRYPTOCURRENCY', 'Cryptos', 'ETH', 'eUSDT', 'EUSDT', 'LTC', 'Tether', 'TRON', 'USDC', 'USDT', 'UST', 'We accept Crypto', 'BCH', 'Btc', 'Criptomoedas', 'Crypto Payment', 'Crypto transfer', 'CryptoTransfer', 'E-Wallets and Crypto', 'E-wallets and Crypto', 'Ethereum', 'Etherium', 'Litecoin', 'Skrill Neteller Crypto', 'SkrillCrypto', 'Tether ERC20', 'Tether Omni', 'Thether', 'Usdt', 'cryptos', 'ethereum', 'litecoin'],\n  'Diamond Bank': ['Diamond bank', 'Diamond Bank', 'DiamondBank'],\n  'E-Mola': ['E-Mola', 'E-mola', 'Emola'],\n  'E-money': ['E-money', 'e money'],\n  'E-payment': ['E-payment', 'all form of E-payments', 'All form of E-payments', 'all forms of E-payments', 'and all other forms of Epayment', 'bank transfer and all form of E-payments', 'Bank Transfer and all Forms of E-payments', 'E-payments', 'Epayments', 'All forms of E-Payments', 'DigitalPayment', 'OnlineTransfer', 'all forms of E-Payment'],\n  'E-transfer': ['E-transfer', 'electronic transfers and cash deposits', 'E-Transfers', 'OnlineTransfer'],\n  'E-wallet': ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Bank and E-wallet', 'bank ewallet', 'Bank wire and e-wallets', 'Bank wire and E-wallets', 'bank wires and e-wallet', 'Bank wires and e-wallets', 'Digital Wallets', 'electronic wallets', 'e-wallers', 'e-wallet', 'ewallet', 'eWallet', 'E-wallet', 'Ewallet', 'EWALLET', 'E-wallet Bank transfer', 'E wallet FNB', 'E-wallet payment', 'Ewallet payment', 'e-wallets', 'ewallets', 'e-Wallets', 'e-WALLETS', 'E- wallets', 'E-wallets', 'Ewallets', 'E-Wallets', 'E-wallets and bank wires', 'fnb ewallet', 'MY WALLET', 'wallet', 'Bank transfer and e-wallets', 'E-Wallets and Crypto', 'E-wallets and Crypto', 'E-Wallet', 'EWallets', 'Fiat', 'OnlineTransfer', 'ewalllets', 'ewalltets', 'local bank wallets and Orange money'],\n  Easypaisa: ['easypaisa', 'Easy paisa', 'Easypaisa', 'Easy Paisa', 'EasyPaisaTransfer'],\n  Ecobank: ['Ecobank', 'Eco Bank', 'ECO BANK', 'Eco bank Transfers'],\n  EcoCash: ['Eco cash', 'Ecocash', 'EcoCash', 'ECOCASH', 'Ecocash FCA', 'Ecocash method', 'ECOCASH WALLET', 'Ecocash ZWL', 'EcocashMobileMoney', 'Zwecocash'],\n  'Electronic Funds Transfer (EFT)': ['Electronic Funds Transfer (EFT)', 'EFT'],\n  'Equity Bank': ['Equity bank', 'Equity Bank', 'equitybankmoneytransfer'],\n  'EU Mobile Money': ['EU Mobile Money', 'all mobile money', 'EU MONEY'],\n  EzyPesa: ['EzyPesa', 'Ezypesa', 'Ezzy pesa', 'Ezzy Pesa', 'EzzyPesa'],\n  FasaPay: ['fasapay', 'Fasa pay', 'FasaPay'],\n  'Fast Payment': ['Fast payment', 'Fast Payment'],\n  'Faysal Bank': ['Faysal Bank', 'FaysalBank'],\n  'FBC Bank': ['FBC Bank', 'FBC BANK'],\n  'Fidelity Bank': ['Fidelity Bank', 'fidelitybank'],\n  Finbank: ['Finbank', 'Fin bank', 'FinBank'],\n  'First Bank of Nigeria': ['First Bank of Nigeria', 'First bank', 'First Bank', 'FirstBank', 'FIRST BANK', 'Firstbank'],\n  'First City Monument Bank (FCMB)': ['First City Monument Bank (FCMB)', 'FCMB', 'fcmb'],\n  'First MicroFinanceBank (FMFB)': ['First MicroFinanceBank (FMFB)', 'FMFB'],\n  'First National Bank (FNB)': ['First National Bank (FNB)', 'Direct deposit FNB and ABSA', 'E wallet FNB', 'First National Bank', 'fnb', 'FNB', 'FNB ATM deposit', 'Fnbbank', 'FNB Bank', 'FNBB Bank Transfer', 'FNB cash deposit', 'fnb ewallet', 'FNB First National Bank', 'FNB pay2cell', 'FNB pay to cell', 'FNB pay to sell', 'Pay to cell FNB', 'FNB bank transfer', 'FNBB', 'FNBBank', 'FirNationalBank', 'First National Bank of Botswana', 'Firstnationalbank', 'Fnb'],\n  Gmoney: ['Gmoney', 'GMONEY'],\n  'Google Pay': ['Google Pay', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Google pay', 'gpay', 'Gpay', 'GPay'],\n  'Grup BCA': ['Grup BCA', 'GrupBCA'],\n  'GT bank': ['GT bank', 'Gtb', 'GTB', 'Gt Bank', 'GT Bank', 'GTBank', 'GT BANK', 'Gtbank', 'Guarantee Trust Bank', 'GuarantyTrustBank'],\n  Halopesa: ['halopesa', 'Halo pesa', 'Halopesa', 'Halo Pesa', 'HaloPesa', 'HALOPESA'],\n  'Hatton National Bank': ['Hatton National Bank', 'HattonNationalBank'],\n  HBL: ['HBL', 'HBLMFB', 'KONNET HBL'],\n  Help2Pay: ['Help2Pay', 'help2pay'],\n  'HNB Bank': ['HNB Bank', 'HNB'],\n  'IMPS Transfer': ['imps', 'Imps', 'IMPS', 'IMPS Transfer'],\n  'ING Bank': ['ING Bank', 'ING'],\n  Innbucks: ['Innbucks', 'INNBUCKS'],\n  'Instant Money': ['Instant Money', 'InstantMoney', 'Instant money stambic bank', 'Instant money stanbic', 'Instant money'],\n  'Inter Bank Fund Transfer': ['Inter Bank Fund Transfer', 'InterBankfundtransfer', 'Interbank Transfer'],\n  'Itau Bank': ['Itau Bank', 'Itau'],\n  IZI: ['IZI', 'Izzy'],\n  JazzCash: ['JazzCash', 'jazzcash', 'Jazz cash', 'Jazzcash', 'Jazz-Cash', 'JazzCashTransfer'],\n  JENIUS: ['JENIUS', 'Jenius'],\n  Jeton: ['Jeton', 'jeton', 'JetonWallet'],\n  'Key Stone Bank': ['Key Stone Bank', 'Keystone'],\n  'Kuda Bank': ['Kuda Bank', 'KUDA BANK', 'Kuda MFB', 'KudaMFB', 'KUDA MICROFINANCE BANK 2014563937', 'Kuda Microfinance', 'KUDA'],\n  'Luno Wallet': ['Luno Wallet', 'Luno', 'Luno crypto wallet', 'Luno e-wallet', 'Luno ewallet', 'luno'],\n  'Mandiri Bank': ['Mandiri Bank', 'Mandiri', 'MANDIRI', 'MandiriSyariah', 'BankMandiri'],\n  'Meezan Bank': ['Meezan Bank', 'MeezanBank'],\n  'Millenium Bim Visa': ['Millenium Bim Visa', 'Millenium Bim'],\n  MIX: ['mix', 'Mix', 'MIX', 'Mixed'],\n  'Mobile money': ['all mobile money', 'mobile banking', 'Mobile banking', 'Mobile money', 'Mobile Money', 'MobileMoney', 'Mobile money MTN', 'Mobile Money transfer', 'MOBILE MONEY TRANSFER', 'Mobile money transfers', 'Mobilemoneyoption', 'OnlineTransfer'],\n  'Mojo Mula': ['Mojo money', 'Mojo Mula', 'MOJO MULA', 'MoMo pay', 'Mojo Moolah'],\n  MoMo: ['MoMo', 'MOMO', 'MoMo pay', 'MTN MOMO', 'MTNMOMO'],\n  MoneyGram: ['Moneygram', 'Money Gram', 'MoneyGram', 'Money grame'],\n  'M-PESA': ['AbesafaricomMpesa Transfers', 'mpesa', 'M pesa', 'M-pesa', 'Mpesa', 'M Pesa', 'M-Pesa', 'MPesa', 'M PESA', 'M-PESA', 'MPESA', 'M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'safaricom mpesa', 'MPESA 0710393947 Albert Kyalo', 'VodacomMpesa'],\n  'MTN MOMO': ['all mobile money', 'Mobile money MTN', 'MoMo', 'MOMO', 'MTN', 'MTN mobile money', 'MTN Mobile money', 'MTN Mobile Money', 'MTN MOBILE MONEY', 'MTNMOBILEMONEY', 'MTN MOMO', 'MTNMOMO', 'MTN MONEY'],\n  'Mukuru money transfers': ['Mukuru', 'Mukuru money transfers', 'MukuruMoneyTransfer', 'USDMukurutransfer'],\n  'MyZaka Mascom Money': ['MyZaka Mascom Money', 'mascom', 'mascom myZaka', 'Mascom MyZaka', 'myzaka', 'My zaka', 'Myzaka', 'MyZaka', 'My zaka mascom money', 'my Zaka', 'myzaaka'],\n  Neft: ['neft', 'Neft', 'NEFT'],\n  Nequi: ['Nequi', 'Nequi o Daviplata al 300 6839026'],\n  Neteller: ['neTeller', 'Neteller', 'NETELLER', 'NETelle', 'Skrill Neteller Crypto', 'neteller', 'netteller'],\n  'Nigeria local bank': ['Nigeria Local', 'Nigeria local bank', 'NIGERIA LOCAL BANK'],\n  'NMB Bank': ['NMB Bank', 'NATIONALMICROFINANCEBANK', 'Nmb bank'],\n  'One Money': ['OM', 'Onemoney', 'One Money', 'One money service', 'OneMoney', 'OneMoneyMobileMoney'],\n  Opay: ['Opay', 'OPAY'],\n  'Orange Money Transfer': ['Absa fund transfer and orange money services', 'Orange Cameroon', 'orange money', 'orangemoney', 'Orange money', 'Orangemoney', 'Orange Money', 'OrangeMoney', 'ORANGE MONEY', 'Orange Money Transfer', 'local bank wallets and Orange money'],\n  PalmPay: ['PalmPay', 'PALMPAY'],\n  'Pay safe Card': ['paysafecard', 'Pay safe Card'],\n  Pay2Cell: ['FNB pay2cell', 'FNB pay to cell', 'FNB pay to sell', 'Pay2cell', 'Pay2Cell', 'PAY2CELL', 'pay to cell', 'Pay to cell', 'Paytocell', 'Pay to Cell', 'Pay to cell FNB', 'PayToCell', 'pay2cell'],\n  'Payment Checks': ['Payment checks', 'Payment Checks'],\n  PayPal: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Paypal', 'PayPal', 'PAYPAL', 'paypal'],\n  PayTM: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Paytm', 'PayTM'],\n  'Perfect Money': ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'perfect money', 'perfectmoney', 'Perfect money', 'Perfectmoney', 'Perfect Money', 'PerfectMoney', 'PERFECT MONEY', 'Perfect Money and Webmoney', 'PM', 'PERFECTMONEY', 'PERFECT'],\n  'Permata Bank': ['Permata Bank', 'PermataBank', 'PERMATA'],\n  PhonePhe: ['PhonePhe', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Phonepay', 'phonepe', 'Phonepe', 'PhonePe', 'Phone pay', 'PhonePay'],\n  Pix: ['Pix', 'PIX'],\n  'Polaris Bank': ['Polaris Bank', 'Polaris'],\n  'Ponto 24': ['Conta movel', 'Conta Movel', 'ContamovelBCI', 'Ponto 24', 'Ponto24'],\n  'Pos deposit': ['Pos', 'POS', 'Pos deposit'],\n  'Postal transfer': ['Postal transfer', 'Egyptian postal transfers'],\n  RIA: ['Ria', 'RIA'],\n  'RTGS Transfers': ['RTGS Transfers', 'rtgs', 'RTGS', 'Rtgs bank transfer', 'RTGS transfers', 'Rtgs'],\n  Safaricom: ['Safaricom', 'AbesafaricomMpesa Transfers', 'AbeSafaricomMpesaTransfers', 'safaricom mpesa'],\n  'Sama Money': ['Sama Money', 'Sama money'],\n  ShopeePay: ['ShopeePay', 'SHOPEEPAY'],\n  Skrill: ['Skrill', 'Skill', 'Skril', 'skrill', 'SKRILL', 'skrillpayments', 'Skrll', 'SkrillCrypto', 'Skrill Neteller Crypto'],\n  Smega: ['btc smega', 'smega', 'Smega'],\n  'Standard Bank Namibia': ['Standard Bank Namibia', 'Standard Bank', 'StandardBank'],\n  'Stanbic Bank': ['Instant money stambic bank', 'Instant money stanbic', 'stanbic', 'Stanbic', 'Stanbic Bank', 'StanbicBank', 'Stanbic Bank Transfer', 'Stanbic Money Transfer', 'Standbic', 'Stanbic IBTC', 'Stanbic bank'],\n  'Standard Charted Bank': ['STANCHART', 'Standard Charted Bank', 'Standard chartered', 'Standard chartered bank', 'Standard Chartered Bank Transfer', 'Standard Chatterd Bank'],\n  'Steward remit': ['Steward remit', 'Steward Remmitt'],\n  'T-pesa': ['M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'T-pesa', 'Tpesa', 'T PESA', 'TTCLpesa'],\n  'Tigo Cash': ['Tigo', 'Tigo Cash', 'AirtelTigo cash'],\n  'Tigo Mobile Money': ['Tigo Mobile Money', 'Airtel Tigo', 'all mobile money', 'Tigo', 'TIGO MOBILE MONEY', 'TIGOMOBILEMONEY', 'AirtelTigo cash'],\n  'Tigo Pesa': ['M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'Tigo', 'tigopesa', 'Tigo pesa', 'Tigopesa', 'Tigo Pesa', 'TigoPesa', 'TIGO PESA', 'TTCLpesa', 'TIGOPESA'],\n  'Transferencia bancaria': ['Transferencia bancaria', 'Transferencia Eletronica TED', 'Transferencias bancarias', 'Ted', 'Transferencia Bancaria'],\n  'UBA Bank': ['UBA', 'UBA Bank', 'UBA BANK'],\n  'Union Bank': ['Union Bank', 'Unionbank', 'Union'],\n  'United Bank Limited (UBL)': ['United Bank Limited (UBL)', 'UBL Bank'],\n  UPI: ['All UPI Transfer', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'upi', 'UPI', 'UPI transfer', 'AmazonUPI', 'PaytmUPI', 'Upi'],\n  'USSD code transfer': ['USSD code transfer', 'Or USSD transfer from all Nigeria banks', 'USSD Code', 'USSD CODE', 'Ussd code Transfer from all Nigerian banks', 'Ussd transfer', 'USSD transfer', 'USSD Transfer', 'ussd transfer'],\n  Vodacom: ['Vodacom', 'VodacomMpesa'],\n  'Vodafone Cash': ['Vodafon Cash Methods', 'Vodafone cash', 'Vodafone Cash', 'VODAFONE CASH', 'VODAFONECASH'],\n  Webmoney: ['Perfect Money and Webmoney', 'Webmoney', 'WebMoney', 'Web Money', 'Web money'],\n  'WeChat Pay': ['WeChat Pay', 'WeChatPay'],\n  'Wema Bank': ['Wema Bank', 'Wema'],\n  WesternUnion: ['Western union', 'Western Union', 'WesternUnion', 'westernunion'],\n  Wise: ['Wise', 'transferwise'],\n  'World Remit': ['World remit', 'World Remit', 'CoinbaseworldRemit'],\n  'Zanaco bank': ['ZANACO', 'Zanaco bank'],\n  'Zenith bank': ['Zenith bank', 'Zenithbank', 'Zenith Bank', 'ZenithBank', 'ZENITH BANK', 'Zenith', 'zenithbank'],\n  Zipit: ['Zipit', 'ZIPIT', 'ZIPIT bank transfers']\n};\n/* harmony default export */ const constants = ({\n  containers: containers,\n  map_action: map_action,\n  icon_payment_methods: icon_payment_methods,\n  payment_methods: payment_methods\n});\n// EXTERNAL MODULE: ./utils/utility.js\nvar utility = __webpack_require__(\"./utils/utility.js\");\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-card/helpers/helpers.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nvar hasNormalizedPaymentMethods = function hasNormalizedPaymentMethods(all_payment_methods) {\n  if (all_payment_methods.length > 0) {\n    return !all_payment_methods.every(function (method) {\n      return (0,utility/* getNormalizedPaymentMethod */.wx)(method.payment_method, constants.icon_payment_methods, true) === '';\n    });\n  }\n\n  return false;\n};\nvar getUniquePaymentAgentSupportedBanks = function getUniquePaymentAgentSupportedBanks(supported_banks) {\n  var normalized_payment_methods = supported_banks.map(function (bank) {\n    return (0,utility/* getNormalizedPaymentMethod */.wx)(bank.payment_method, constants.icon_payment_methods, true);\n  }).filter(Boolean);\n  return _toConsumableArray(new Set(normalized_payment_methods));\n};\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-card/helpers/index.js\n\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-detail/payment-agent-detail.jsx\nvar _excluded = [\"action\", \"children\", \"className\", \"has_red_color\", \"icon\", \"is_link\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\nvar PaymentAgentDetail = function PaymentAgentDetail(_ref) {\n  var action = _ref.action,\n      children = _ref.children,\n      className = _ref.className,\n      has_red_color = _ref.has_red_color,\n      icon = _ref.icon,\n      is_link = _ref.is_link,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var detail = Array.isArray(children) ? children : [children];\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('payment-agent-detail', _defineProperty({}, className, !!className))\n  }, icon && /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-detail__icon-wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: icon,\n    data_testid: \"dt_payment_agent_detail_icon\"\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-detail__desc-wrapper\"\n  }, title && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"s\",\n    size: \"xs\"\n  }, title), detail.map(function (child, id) {\n    return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, {\n      key: id\n    }, action || is_link ? /*#__PURE__*/external_react_default().createElement(components_.Text, _extends({\n      as: \"a\",\n      color: has_red_color ? 'red' : 'prominent',\n      \"data-testid\": \"dt_payment_agent_detail_link\",\n      href: \"\".concat(action ? \"\".concat(action, \":\") : '').concat(child),\n      line_height: \"s\",\n      size: !title ? 'xxs' : 'xs',\n      weight: \"bold\",\n      className: \"payment-agent-detail__link\"\n    }, rest), child, id === detail.length - 1 ? '' : ', ') : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      as: \"p\",\n      className: \"payment-agent-detail__paragraph\",\n      \"data-testid\": \"dt_payment_agent_detail_paragraph\",\n      line_height: \"s\",\n      size: !title ? 'xxs' : 'xs',\n      weight: \"bold\"\n    }, child));\n  })));\n};\n\nPaymentAgentDetail.propTypes = {\n  action: (prop_types_default()).string,\n  children: prop_types_default().oneOfType([(prop_types_default()).array, (prop_types_default()).element, (prop_types_default()).string]),\n  className: (prop_types_default()).string,\n  has_red_color: (prop_types_default()).bool,\n  icon: (prop_types_default()).string,\n  is_link: (prop_types_default()).bool,\n  title: (prop_types_default()).string\n};\n/* harmony default export */ const payment_agent_detail = (PaymentAgentDetail);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-detail/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_detail = (payment_agent_detail);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-card/payment-agent-card-description.jsx\n\n\n\n\n\n\n\n\nvar PaymentAgentCardDescription = function PaymentAgentCardDescription(_ref) {\n  var is_dark_mode_on = _ref.is_dark_mode_on,\n      payment_agent = _ref.payment_agent;\n  var payment_agent_urls = (0,external_mobx_.toJS)(payment_agent.urls);\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-card__description-container\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"s\",\n    size: \"xs\",\n    weight: \"bold\"\n  }, payment_agent.name), payment_agent.further_information && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    className: \"payment-agent-card__description-container-further-information\",\n    line_height: \"s\",\n    size: \"xs\"\n  }, (0,shared_.capitalizeFirstLetter)(payment_agent.further_information).replace(/( ?Skril?l,? ?)|( ?Net?tel?ler,? ?)/gi, '')), payment_agent_urls && /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n    has_red_color: true,\n    is_link: true,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, payment_agent_urls.map(function (url) {\n    return url.url;\n  })), hasNormalizedPaymentMethods(payment_agent.supported_banks) && /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-card__description-container-icons-container\"\n  }, getUniquePaymentAgentSupportedBanks(payment_agent.supported_banks).map(function (bank, idx) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n      data_testid: \"dt_payment_method_icon\",\n      key: idx,\n      icon: \"IcCashier\".concat(bank).concat(is_dark_mode_on ? 'Dark' : 'Light')\n    });\n  })));\n};\n\nPaymentAgentCardDescription.propTypes = {\n  is_dark_mode_on: (prop_types_default()).bool,\n  payment_agent: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_card_description = (PaymentAgentCardDescription);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-deposit-details/payment-agent-deposit-details.jsx\n\n\n\n\n\n\n\n\nvar PaymentAgentDepositDetails = function PaymentAgentDepositDetails(_ref) {\n  var payment_agent = _ref.payment_agent;\n  var payment_agent_phones = (0,external_mobx_.toJS)(payment_agent.phones);\n\n  var PaymentAgentPhonesDetails = function PaymentAgentPhonesDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      action: \"tel\",\n      icon: \"IcPhone\",\n      title: (0,translations_.localize)('Phone number')\n    }, payment_agent.phones.map(function (phone) {\n      return phone.phone_number;\n    }));\n  };\n\n  var PaymentAgentEmailDetails = function PaymentAgentEmailDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      action: \"mailto\",\n      icon: \"IcEmailOutlineNew\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      has_red_color: true,\n      title: (0,translations_.localize)('Email')\n    }, payment_agent.email);\n  };\n\n  var PaymentAgentMinimumWithdrawalDetails = function PaymentAgentMinimumWithdrawalDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      icon: \"IcCashierMinimumWithdrawal\",\n      title: (0,translations_.localize)('Minimum withdrawal')\n    }, /*#__PURE__*/external_react_default().createElement(components_.Money, {\n      amount: payment_agent.min_withdrawal,\n      currency: payment_agent.currency,\n      show_currency: true\n    }));\n  };\n\n  var PaymentAgentMaximumWithdrawalDetails = function PaymentAgentMaximumWithdrawalDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      icon: \"IcCashierMaximumWithdrawal\",\n      title: (0,translations_.localize)('Maximum withdrawal')\n    }, /*#__PURE__*/external_react_default().createElement(components_.Money, {\n      amount: payment_agent.max_withdrawal,\n      currency: payment_agent.currency,\n      show_currency: true\n    }));\n  };\n\n  var PaymentAgentDepositComissionDetails = function PaymentAgentDepositComissionDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      icon: \"IcCashierCommissionDeposit\",\n      className: \"deposit-commission\",\n      title: (0,translations_.localize)('Commission on deposits')\n    }, \"\".concat(payment_agent.deposit_commission, \"%\"));\n  };\n\n  var PaymentAgentWithdrawalComissionDetails = function PaymentAgentWithdrawalComissionDetails() {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n      icon: \"IcCashierCommissionWithdrawal\",\n      className: \"withdrawal_commission\",\n      title: (0,translations_.localize)('Commission on withdrawal')\n    }, \"\".concat(payment_agent.withdrawal_commission, \"%\"));\n  };\n\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-deposit-details\"\n  }, payment_agent_phones && /*#__PURE__*/external_react_default().createElement(PaymentAgentPhonesDetails, null), payment_agent.email && /*#__PURE__*/external_react_default().createElement(PaymentAgentEmailDetails, null), payment_agent.min_withdrawal && /*#__PURE__*/external_react_default().createElement(PaymentAgentMinimumWithdrawalDetails, null), payment_agent.deposit_commission && /*#__PURE__*/external_react_default().createElement(PaymentAgentDepositComissionDetails, null), payment_agent.max_withdrawal && /*#__PURE__*/external_react_default().createElement(PaymentAgentMaximumWithdrawalDetails, null), payment_agent.withdrawal_commission && /*#__PURE__*/external_react_default().createElement(PaymentAgentWithdrawalComissionDetails, null));\n};\n\nPaymentAgentDepositDetails.propTypes = {\n  payment_agent: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_deposit_details = (PaymentAgentDepositDetails);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-deposit-details/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_deposit_details = (payment_agent_deposit_details);\n// EXTERNAL MODULE: ../../../node_modules/formik/dist/formik.esm.js + 121 modules\nvar formik_esm = __webpack_require__(\"../../../node_modules/formik/dist/formik.esm.js\");\n// EXTERNAL MODULE: ./components/error-dialog/index.ts + 1 modules\nvar error_dialog = __webpack_require__(\"./components/error-dialog/index.ts\");\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-listed-withdraw-form/payment-agent-listed-withdraw-form.jsx\nfunction payment_agent_listed_withdraw_form_extends() { payment_agent_listed_withdraw_form_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return payment_agent_listed_withdraw_form_extends.apply(this, arguments); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { payment_agent_listed_withdraw_form_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction payment_agent_listed_withdraw_form_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar validateWithdrawal = function validateWithdrawal(values, _ref) {\n  var balance = _ref.balance,\n      currency = _ref.currency,\n      _ref$payment_agent = _ref.payment_agent,\n      payment_agent = _ref$payment_agent === void 0 ? {} : _ref$payment_agent;\n  var errors = {};\n\n  var _validNumber = (0,shared_.validNumber)(values.amount, _objectSpread({\n    type: 'float',\n    decimals: (0,shared_.getDecimalPlaces)(currency)\n  }, payment_agent.min_withdrawal && {\n    min: payment_agent.min_withdrawal,\n    max: payment_agent.max_withdrawal\n  })),\n      is_ok = _validNumber.is_ok,\n      message = _validNumber.message;\n\n  if (!values.amount) {\n    errors.amount = (0,translations_.localize)('This field is required.');\n  } else if (!is_ok) {\n    errors.amount = message;\n  } else if (+balance < +values.amount) {\n    errors.amount = (0,translations_.localize)('Insufficient balance.');\n  }\n\n  return errors;\n};\n\nvar PaymentAgentListedWithdrawForm = (0,src/* observer */.Pi)(function (_ref2) {\n  var payment_agent = _ref2.payment_agent;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      _useStore$modules$cas = _useStore.modules.cashier,\n      general_store = _useStore$modules$cas.general_store,\n      payment_agenr_store = _useStore$modules$cas.payment_agent;\n\n  var balance = client.balance,\n      currency = client.currency,\n      verification_code = client.verification_code.payment_agent_withdraw;\n  var is_crypto = general_store.is_crypto,\n      is_loading = general_store.is_loading;\n  var error = payment_agenr_store.error,\n      onMount = payment_agenr_store.onMountPaymentAgentWithdraw,\n      payment_agent_list = payment_agenr_store.agents,\n      requestTryPaymentAgentWithdraw = payment_agenr_store.requestTryPaymentAgentWithdraw,\n      selected_bank = payment_agenr_store.selected_bank;\n  external_react_default().useEffect(function () {\n    onMount();\n  }, [onMount]);\n  var input_ref = external_react_default().useRef(null);\n  external_react_default().useEffect(function () {\n    if (input_ref.current) {\n      input_ref.current.value = null;\n    }\n  }, [selected_bank]);\n\n  var validateWithdrawalPassthrough = function validateWithdrawalPassthrough(values) {\n    return validateWithdrawal(values, {\n      balance: balance,\n      currency: currency,\n      payment_agent: payment_agent_list.find(function (pa) {\n        return pa.value === payment_agent.paymentagent_loginid;\n      })\n    });\n  };\n\n  var onWithdrawalPassthrough = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(values, actions) {\n      var payment_agent_withdraw;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return requestTryPaymentAgentWithdraw({\n                loginid: payment_agent.paymentagent_loginid,\n                currency: currency,\n                amount: values.amount,\n                verification_code: verification_code\n              });\n\n            case 2:\n              payment_agent_withdraw = _context.sent;\n\n              if (payment_agent_withdraw !== null && payment_agent_withdraw !== void 0 && payment_agent_withdraw.error) {\n                actions.setSubmitting(false);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onWithdrawalPassthrough(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  if (is_loading || !payment_agent_list.length) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n      className: \"cashier__loader\",\n      is_fullscreen: false\n    });\n  }\n\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-listed-withdraw-form\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    className: \"payment-agent-listed-withdraw-form__header\",\n    line_height: \"s\",\n    size: \"xs\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Withdrawal amount\"\n  })), /*#__PURE__*/external_react_default().createElement(formik_esm.Formik, {\n    initialValues: {\n      amount: ''\n    },\n    validate: validateWithdrawalPassthrough,\n    onSubmit: onWithdrawalPassthrough\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        isSubmitting = _ref4.isSubmitting,\n        isValid = _ref4.isValid,\n        touched = _ref4.touched,\n        values = _ref4.values;\n\n    var getHint = function getHint() {\n      return payment_agent_list.find(function (pa) {\n        return pa.value === payment_agent.paymentagent_loginid;\n      }) && /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Withdrawal limits: <0 />-<1 />\",\n        components: [/*#__PURE__*/external_react_default().createElement(components_.Money, {\n          key: 0,\n          amount: payment_agent_list.find(function (pa) {\n            return pa.value === payment_agent.paymentagent_loginid;\n          }).min_withdrawal,\n          currency: payment_agent.currency,\n          show_currency: true\n        }), /*#__PURE__*/external_react_default().createElement(components_.Money, {\n          key: 1,\n          amount: payment_agent_list.find(function (pa) {\n            return pa.value === payment_agent.paymentagent_loginid;\n          }).max_withdrawal,\n          currency: payment_agent.currency,\n          show_currency: true\n        })]\n      });\n    };\n\n    return /*#__PURE__*/external_react_default().createElement(formik_esm.Form, {\n      className: \"payment-agent-listed-withdraw-form__form\"\n    }, /*#__PURE__*/external_react_default().createElement(formik_esm.Field, {\n      name: \"amount\"\n    }, function (_ref5) {\n      var field = _ref5.field;\n      return /*#__PURE__*/external_react_default().createElement(components_.Input, payment_agent_listed_withdraw_form_extends({}, field, {\n        className: classnames_default()('dc-input--no-placeholder', {\n          'dc-input--crypto-hint': is_crypto\n        }),\n        type: \"text\",\n        label: (0,translations_.localize)('Enter amount'),\n        error: touched.amount && errors.amount,\n        required: true,\n        autoComplete: \"off\",\n        maxLength: 30,\n        hint: getHint(),\n        ref: input_ref,\n        trailing_icon: /*#__PURE__*/external_react_default().createElement(\"span\", {\n          className: classnames_default()('symbols', \"symbols--\".concat(currency.toLowerCase()))\n        }, (0,shared_.getCurrencyDisplayCode)(currency))\n      }));\n    }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n      type: \"submit\",\n      is_disabled: !isValid || isSubmitting || !values.amount,\n      primary: true,\n      large: true\n    }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Continue\"\n    })));\n  }), /*#__PURE__*/external_react_default().createElement(error_dialog/* default */.Z, {\n    error: error,\n    className: \"payment-agent-list__error-dialog\"\n  }));\n});\nPaymentAgentListedWithdrawForm.propTypes = {\n  payment_agent: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_listed_withdraw_form = (PaymentAgentListedWithdrawForm);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-listed-withdraw-form/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_listed_withdraw_form = (payment_agent_listed_withdraw_form);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-card/payment-agent-card.jsx\n\n\n\n\n\n\n\n\n\nvar PaymentAgentCard = function PaymentAgentCard(_ref) {\n  var is_dark_mode_on = _ref.is_dark_mode_on,\n      is_deposit = _ref.is_deposit,\n      payment_agent = _ref.payment_agent;\n  var message = {\n    header: /*#__PURE__*/external_react_default().createElement(payment_agent_card_description, {\n      is_dark_mode_on: is_dark_mode_on,\n      payment_agent: payment_agent\n    }),\n    content: is_deposit ? /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_deposit_details, {\n      payment_agent: payment_agent\n    }) : /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_listed_withdraw_form, {\n      payment_agent: payment_agent\n    })\n  };\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('payment-agent-card', {\n      'payment-agent-card--dark': is_dark_mode_on\n    })\n  }, /*#__PURE__*/external_react_default().createElement(components_.ExpansionPanel, {\n    message: message\n  }));\n};\n\nPaymentAgentCard.propTypes = {\n  is_dark_mode_on: (prop_types_default()).bool,\n  is_deposit: (prop_types_default()).bool,\n  payment_agent: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_card = (PaymentAgentCard);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-card/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_card = (payment_agent_card);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-disclaimer/payment-agent-disclaimer.jsx\n\n\n\n\n\n\nvar PaymentAgentDisclaimer = function PaymentAgentDisclaimer() {\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-disclaimer\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    className: \"payment-agent-disclaimer__title\",\n    size: \"xs\",\n    lh: \"m\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"DISCLAIMER\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: \"xxs\",\n    lh: \"s\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"{{website_name}} is not affiliated with any payment agents. Customers deal with payment agents at their sole risk. Customers are advised to check the credentials of payment agents and the accuracy of any information about payment agents (on {{website_name}} or elsewhere) before using their services.\",\n    values: {\n      website_name: shared_.website_name\n    }\n  })));\n};\n\n/* harmony default export */ const payment_agent_disclaimer = (PaymentAgentDisclaimer);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-disclaimer/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_disclaimer = (payment_agent_disclaimer);\n// EXTERNAL MODULE: external \"react-router\"\nvar external_react_router_ = __webpack_require__(\"react-router\");\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-receipt/payment-agent-receipt.jsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar openStatement = function openStatement(history, resetPaymentAgent) {\n  history.push(shared_.routes.statement);\n  resetPaymentAgent();\n};\n\nvar PaymentAgentDetails = function PaymentAgentDetails(_ref) {\n  var payment_agent_email = _ref.payment_agent_email,\n      payment_agent_phones = _ref.payment_agent_phones,\n      payment_agent_urls = _ref.payment_agent_urls;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-receipt__transferred-contact\"\n  }, payment_agent_phones && /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n    action: \"tel\",\n    icon: \"IcPhone\"\n  }, payment_agent_phones.map(function (phone) {\n    return phone.phone_number;\n  })), payment_agent_email && /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n    action: \"mailto\",\n    icon: \"IcEmailOutlineNew\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, payment_agent_email), payment_agent_urls && /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_detail, {\n    icon: \"IcWebsite\",\n    is_link: true,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, payment_agent_urls.map(function (url) {\n    return url.url;\n  })));\n};\n\nvar PaymentAgentReceipt = (0,src/* observer */.Pi)(function (_ref2) {\n  var history = _ref2.history;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      common = _useStore.common,\n      payment_agent_store = _useStore.modules.cashier.payment_agent;\n\n  var currency = client.currency;\n  var is_from_derivgo = common.is_from_derivgo;\n  var receipt = payment_agent_store.receipt,\n      resetPaymentAgent = payment_agent_store.resetPaymentAgent;\n  external_react_default().useEffect(function () {\n    return function () {\n      return resetPaymentAgent();\n    };\n  }, [resetPaymentAgent]);\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__wrapper--align-center payment-agent-receipt\"\n  }, /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n    className: \"payment-agent-list__side-note\",\n    has_title: false,\n    is_mobile: true\n  }, /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_disclaimer, null)), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h1\",\n    align: \"center\",\n    color: \"prominent\",\n    line_height: \"m\",\n    size: (0,shared_.isMobile)() ? 'xsm' : 'sm',\n    weight: \"bold\",\n    className: classnames_default()('payment-agent-receipt__header', {\n      'payment-agent-receipt__header-listed': receipt.payment_agent_name,\n      'payment-agent-receipt__header-unlisted': !receipt.payment_agent_name\n    })\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"You\\u2019ve transferred {{amount}} {{currency}}\",\n    values: {\n      amount: receipt.amount_transferred,\n      currency: currency\n    }\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    align: \"center\",\n    color: \"prominent\",\n    line_height: \"m\",\n    size: \"xs\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Important notice to receive your funds\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    align: \"center\",\n    color: \"prominent\",\n    size: \"xxs\",\n    line_height: \"m\",\n    className: classnames_default()('payment-agent-receipt__explanation', {\n      'payment-agent-receipt__explanation-unlisted': !receipt.payment_agent_name\n    })\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"{{ text }}. <0></0>You can view the summary of this transaction in your email.\",\n    components: !(0,shared_.isMobile)() ? [/*#__PURE__*/external_react_default().createElement(\"br\", {\n      key: 0\n    })] : [],\n    values: {\n      text: receipt.payment_agent_name ? (0,translations_.localize)('To receive your funds, contact the payment agent with the details below') : (0,translations_.localize)('To receive your funds, contact the payment agent')\n    },\n    key: 0\n  })), receipt.payment_agent_name && /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-receipt__transferred-contact-wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    align: \"center\",\n    as: \"p\",\n    size: \"xxs\",\n    line_height: \"m\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"<0>{{payment_agent}}</0><1>'s</1> contact details\",\n    components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n      key: 0\n    }), /*#__PURE__*/external_react_default().createElement(\"span\", {\n      key: 1\n    })],\n    values: {\n      payment_agent: receipt.payment_agent_name\n    },\n    options: {\n      interpolation: {\n        escapeValue: false\n      }\n    }\n  })), /*#__PURE__*/external_react_default().createElement(PaymentAgentDetails, {\n    payment_agent_email: receipt.payment_agent_email,\n    payment_agent_phones: receipt.payment_agent_phone,\n    payment_agent_urls: receipt.payment_agent_url\n  })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__form-submit\"\n  }, !is_from_derivgo && /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"cashier__form-submit-button\",\n    has_effect: true,\n    text: (0,translations_.localize)('View transaction'),\n    onClick: function onClick() {\n      return openStatement(history, resetPaymentAgent);\n    },\n    secondary: true,\n    large: true\n  }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"cashier__form-submit-button cashier__done-button\",\n    has_effect: true,\n    text: (0,translations_.localize)('Make a new withdrawal'),\n    onClick: resetPaymentAgent,\n    primary: true,\n    large: true\n  })));\n});\nPaymentAgentReceipt.propTypes = {\n  history: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_receipt = ((0,external_react_router_.withRouter)(PaymentAgentReceipt));\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-receipt/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_receipt = (payment_agent_receipt);\n// EXTERNAL MODULE: ../../../node_modules/lodash.debounce/index.js\nvar lodash_debounce = __webpack_require__(\"../../../node_modules/lodash.debounce/index.js\");\nvar lodash_debounce_default = /*#__PURE__*/__webpack_require__.n(lodash_debounce);\n;// CONCATENATED MODULE: ./components/cashier-search-box/cashier-search-box.jsx\nfunction cashier_search_box_extends() { cashier_search_box_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return cashier_search_box_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\nvar CashierSearchBox = function CashierSearchBox(_ref) {\n  var className = _ref.className,\n      onClear = _ref.onClear,\n      onSearch = _ref.onSearch,\n      placeholder = _ref.placeholder,\n      search_term = _ref.search_term,\n      setIsSearchLoading = _ref.setIsSearchLoading;\n  external_react_default().useEffect(function () {\n    return onClear; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var onSearchClear = function onSearchClear(setFieldValue) {\n    setFieldValue('search', '');\n    onClear();\n  };\n\n  var onSearchKeyUpDown = function onSearchKeyUpDown(submitForm, search) {\n    if (!search.trim() && search_term) {\n      onClear();\n    } else if (!search.trim()) return;\n\n    setIsSearchLoading(true);\n    submitForm();\n  };\n\n  var onSearchSubmit = function onSearchSubmit(_ref2) {\n    var search = _ref2.search;\n    onSearch(search);\n  };\n\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('cashier-search-box', className)\n  }, /*#__PURE__*/external_react_default().createElement(formik_esm.Formik, {\n    initialValues: {\n      search: ''\n    },\n    onSubmit: onSearchSubmit\n  }, function (_ref3) {\n    var submitForm = _ref3.submitForm,\n        search = _ref3.values.search,\n        setFieldValue = _ref3.setFieldValue;\n    return /*#__PURE__*/external_react_default().createElement(formik_esm.Form, null, /*#__PURE__*/external_react_default().createElement(formik_esm.Field, {\n      name: \"search\"\n    }, function (_ref4) {\n      var field = _ref4.field;\n      return /*#__PURE__*/external_react_default().createElement(components_.Input, cashier_search_box_extends({}, field, {\n        type: \"text\",\n        name: \"search\",\n        placeholder: placeholder,\n        onKeyUp: function onKeyUp() {\n          return onSearchKeyUpDown(submitForm, search);\n        },\n        onKeyDown: function onKeyDown() {\n          return onSearchKeyUpDown(submitForm, search);\n        },\n        leading_icon: /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n          icon: \"IcSearch\",\n          data_testid: \"dt_search_icon\"\n        }),\n        trailing_icon: search && /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n          color: \"general\",\n          data_testid: \"dt_close_icon\",\n          icon: \"IcCloseCircle\",\n          onClick: function onClick() {\n            return onSearchClear(setFieldValue);\n          }\n        })\n      }));\n    }));\n  }));\n};\n\nCashierSearchBox.propTypes = {\n  className: (prop_types_default()).string,\n  onClear: (prop_types_default()).func,\n  onSearch: (prop_types_default()).func,\n  placeholder: (prop_types_default()).string,\n  search_term: (prop_types_default()).string,\n  setIsSearchLoading: (prop_types_default()).func\n};\n/* harmony default export */ const cashier_search_box = (CashierSearchBox);\n;// CONCATENATED MODULE: ./components/cashier-search-box/index.js\n\n/* harmony default export */ const components_cashier_search_box = (cashier_search_box);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-search-box/payment-agent-search-box.jsx\n\n\n\n\n\nvar PaymentAgentSearchBox = (0,src/* observer */.Pi)(function () {\n  var _useStore = (0,src/* useStore */.oR)(),\n      payment_agent = _useStore.modules.cashier.payment_agent;\n\n  var filterPaymentAgentList = payment_agent.filterPaymentAgentList,\n      setIsSearchLoading = payment_agent.setIsSearchLoading,\n      search_term = payment_agent.search_term,\n      setSearchTerm = payment_agent.setSearchTerm;\n  var debouncedFunction = lodash_debounce_default()(function () {\n    filterPaymentAgentList();\n  }, 500);\n\n  var onClear = function onClear() {\n    setSearchTerm('');\n    filterPaymentAgentList();\n  };\n\n  var onSearch = function onSearch(search) {\n    setSearchTerm(search.trim());\n    debouncedFunction();\n  };\n\n  return /*#__PURE__*/external_react_default().createElement(components_cashier_search_box, {\n    onClear: onClear,\n    onSearch: onSearch,\n    placeholder: (0,translations_.localize)('Search payment agent name'),\n    search_term: search_term,\n    setIsSearchLoading: setIsSearchLoading\n  });\n});\n/* harmony default export */ const payment_agent_search_box = (PaymentAgentSearchBox);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-search-box/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_search_box = (payment_agent_search_box);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-unlisted-withdraw-form/payment-agent-unlisted-withdraw-form.jsx\nfunction payment_agent_unlisted_withdraw_form_extends() { payment_agent_unlisted_withdraw_form_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return payment_agent_unlisted_withdraw_form_extends.apply(this, arguments); }\n\nfunction payment_agent_unlisted_withdraw_form_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction payment_agent_unlisted_withdraw_form_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { payment_agent_unlisted_withdraw_form_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { payment_agent_unlisted_withdraw_form_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar payment_agent_unlisted_withdraw_form_validateWithdrawal = function validateWithdrawal(values, _ref) {\n  var balance = _ref.balance,\n      currency = _ref.currency;\n  var errors = {};\n\n  var _validNumber = (0,shared_.validNumber)(values.amount, {\n    type: 'float',\n    decimals: (0,shared_.getDecimalPlaces)(currency)\n  }),\n      is_ok = _validNumber.is_ok,\n      message = _validNumber.message;\n\n  if (!values.amount) {\n    errors.amount = (0,translations_.localize)('This field is required.');\n  } else if (!is_ok) {\n    errors.amount = message;\n  } else if (+balance < +values.amount) {\n    errors.amount = (0,translations_.localize)('Insufficient balance.');\n  } else if (!values.account_number) {\n    errors.account_number = (0,translations_.localize)('This field is required.'); // TODO: improve broker code validation of the account number when the wallets project will be released\n  } else if (!/^[C][R]\\d+$/.test(values.account_number)) {\n    errors.account_number = (0,translations_.localize)('Please enter a valid account number. Example: CR123456789');\n  }\n\n  return errors;\n};\n\nvar PaymentAgentUnlistedWithdrawForm = (0,src/* observer */.Pi)(function (_ref2) {\n  var verification_code = _ref2.verification_code,\n      setIsUnlistedWithdraw = _ref2.setIsUnlistedWithdraw;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      payment_agent = _useStore.modules.cashier.payment_agent;\n\n  var balance = client.balance,\n      currency = client.currency;\n  var error = payment_agent.error,\n      onMount = payment_agent.onMountPaymentAgentWithdraw,\n      requestTryPaymentAgentWithdraw = payment_agent.requestTryPaymentAgentWithdraw;\n  external_react_default().useEffect(function () {\n    onMount();\n  }, [onMount]);\n\n  var validateWithdrawalPassthrough = function validateWithdrawalPassthrough(values) {\n    return payment_agent_unlisted_withdraw_form_validateWithdrawal(values, {\n      balance: balance,\n      currency: currency\n    });\n  };\n\n  var onWithdrawalPassthrough = /*#__PURE__*/function () {\n    var _ref3 = payment_agent_unlisted_withdraw_form_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(values, actions) {\n      var payment_agent_withdraw;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return requestTryPaymentAgentWithdraw({\n                loginid: values.account_number,\n                currency: currency,\n                amount: values.amount,\n                verification_code: verification_code\n              });\n\n            case 2:\n              payment_agent_withdraw = _context.sent;\n\n              if (payment_agent_withdraw !== null && payment_agent_withdraw !== void 0 && payment_agent_withdraw.error) {\n                actions.setSubmitting(false);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onWithdrawalPassthrough(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-withdraw-form\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-withdraw-form__page-return\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    data_testid: 'dt-back-arrow-icon',\n    icon: \"icArrowLeftBold\",\n    onClick: function onClick() {\n      return setIsUnlistedWithdraw(false);\n    }\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"m\",\n    size: \"xs\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Back to list\"\n  }))), /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n    className: \"payment-agent-list__side-note\",\n    has_title: false,\n    is_mobile: true\n  }, /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_disclaimer, null)), /*#__PURE__*/external_react_default().createElement(formik_esm.Formik, {\n    initialValues: {\n      account_number: '',\n      amount: ''\n    },\n    validate: validateWithdrawalPassthrough,\n    onSubmit: onWithdrawalPassthrough\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        isSubmitting = _ref4.isSubmitting,\n        isValid = _ref4.isValid,\n        touched = _ref4.touched,\n        values = _ref4.values,\n        setFieldValue = _ref4.setFieldValue;\n    return /*#__PURE__*/external_react_default().createElement(formik_esm.Form, {\n      className: \"payment-agent-withdraw-form__form\"\n    }, /*#__PURE__*/external_react_default().createElement(formik_esm.Field, {\n      name: \"account_number\"\n    }, function (_ref5) {\n      var field = _ref5.field;\n      return /*#__PURE__*/external_react_default().createElement(components_.Input, payment_agent_unlisted_withdraw_form_extends({}, field, {\n        type: \"text\",\n        className: \"payment-agent-withdraw-form__form-account-number\",\n        label: (0,translations_.localize)('Enter the payment agent account number'),\n        error: touched.account_number && errors.account_number,\n        hint: (0,translations_.localize)('Example: CR123456789'),\n        required: true,\n        autoComplete: \"off\",\n        maxLength: 30,\n        trailing_icon: errors.account_number === (0,translations_.localize)('Please enter a valid account number. Example: CR123456789') ? /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n          icon: \"IcCloseCircleRed\",\n          onClick: function onClick() {\n            setFieldValue('account_number', '');\n          }\n        }) : null\n      }));\n    }), /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: \"payment-agent-withdraw-form__form-amount\"\n    }, /*#__PURE__*/external_react_default().createElement(formik_esm.Field, {\n      name: \"amount\"\n    }, function (_ref6) {\n      var field = _ref6.field;\n      return /*#__PURE__*/external_react_default().createElement(components_.Input, payment_agent_unlisted_withdraw_form_extends({}, field, {\n        type: \"text\",\n        label: (0,translations_.localize)('Enter amount'),\n        error: touched.amount && errors.amount,\n        required: true,\n        autoComplete: \"off\",\n        maxLength: 30,\n        trailing_icon: /*#__PURE__*/external_react_default().createElement(\"span\", {\n          className: classnames_default()('symbols', \"symbols--\".concat(currency.toLowerCase()))\n        }, (0,shared_.getCurrencyDisplayCode)(currency))\n      }));\n    }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n      type: \"submit\",\n      is_disabled: !isValid || isSubmitting || !values.account_number || !values.amount,\n      primary: true,\n      large: true\n    }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Continue\"\n    }))));\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    color: \"less-prominent\",\n    line_height: \"s\",\n    size: \"xxs\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Note: {{website_name}} does not charge any transfer fees.\",\n    values: {\n      website_name: shared_.website_name\n    }\n  })), /*#__PURE__*/external_react_default().createElement(error_dialog/* default */.Z, {\n    error: error,\n    className: \"payment-agent-list__error-dialog\"\n  }));\n});\nPaymentAgentUnlistedWithdrawForm.propTypes = {\n  verification_code: (prop_types_default()).string,\n  setIsUnlistedWithdraw: (prop_types_default()).func\n};\n/* harmony default export */ const payment_agent_unlisted_withdraw_form = (PaymentAgentUnlistedWithdrawForm);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-unlisted-withdraw-form/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_unlisted_withdraw_form = (payment_agent_unlisted_withdraw_form);\n// EXTERNAL MODULE: ./components/transfer-confirm/index.ts + 1 modules\nvar transfer_confirm = __webpack_require__(\"./components/transfer-confirm/index.ts\");\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-withdraw-confirm/payment-agent-withdraw-confirm.jsx\n\n\n\n\n\n\nvar PaymentAgentWithdrawConfirm = (0,src/* observer */.Pi)(function (_ref) {\n  var verification_code = _ref.verification_code;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      payment_agent = _useStore.modules.cashier.payment_agent;\n\n  var client_loginid = client.loginid;\n  var _payment_agent$confir = payment_agent.confirm,\n      amount = _payment_agent$confir.amount,\n      currency = _payment_agent$confir.currency,\n      loginid = _payment_agent$confir.loginid,\n      payment_agent_name = _payment_agent$confir.payment_agent_name,\n      error = payment_agent.error,\n      requestPaymentAgentWithdraw = payment_agent.requestPaymentAgentWithdraw,\n      setIsTryWithdrawSuccessful = payment_agent.setIsTryWithdrawSuccessful;\n  return /*#__PURE__*/external_react_default().createElement(transfer_confirm/* default */.Z, {\n    data: [{\n      label: (0,translations_.localize)('From account number'),\n      value: client_loginid,\n      key: 'transfer_from'\n    }, {\n      label: [(0,translations_.localize)('To account number'), (0,translations_.localize)('Account holder name')],\n      value: [loginid.toUpperCase(), payment_agent_name],\n      key: 'transfer_to'\n    }, {\n      label: (0,translations_.localize)('Amount'),\n      value: /*#__PURE__*/external_react_default().createElement(components_.Money, {\n        currency: currency,\n        amount: amount,\n        show_currency: true\n      }),\n      key: 'amount'\n    }],\n    error: error,\n    is_payment_agent_withdraw: true,\n    onClickBack: function onClickBack() {\n      setIsTryWithdrawSuccessful(false);\n    },\n    onClickConfirm: function onClickConfirm() {\n      requestPaymentAgentWithdraw({\n        loginid: loginid,\n        currency: currency,\n        amount: amount,\n        verification_code: verification_code\n      });\n    }\n  });\n});\nPaymentAgentWithdrawConfirm.propTypes = {\n  verification_code: (prop_types_default()).string\n};\n/* harmony default export */ const payment_agent_withdraw_confirm = (PaymentAgentWithdrawConfirm);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-withdraw-confirm/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_withdraw_confirm = (payment_agent_withdraw_confirm);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-container/payment-agent-container.jsx\nfunction payment_agent_container_toConsumableArray(arr) { return payment_agent_container_arrayWithoutHoles(arr) || payment_agent_container_iterableToArray(arr) || payment_agent_container_unsupportedIterableToArray(arr) || payment_agent_container_nonIterableSpread(); }\n\nfunction payment_agent_container_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction payment_agent_container_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction payment_agent_container_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return payment_agent_container_arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || payment_agent_container_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction payment_agent_container_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return payment_agent_container_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return payment_agent_container_arrayLikeToArray(o, minLen); }\n\nfunction payment_agent_container_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PaymentAgentSearchWarning = function PaymentAgentSearchWarning() {\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-list__search-warning cashier__wrapper--align-center\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"IcCashierSearch\",\n    size: 64\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"m\",\n    size: \"xs\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"No payment agents found for your search\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"m\",\n    size: \"xs\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Try changing your search criteria.\"\n  })));\n};\n\nvar PaymentAgentContainer = (0,src/* observer */.Pi)(function (_ref) {\n  var is_deposit = _ref.is_deposit,\n      verification_code = _ref.verification_code;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      ui = _useStore.ui,\n      payment_agent_store = _useStore.modules.cashier.payment_agent;\n\n  var app_contents_scroll_ref = ui.app_contents_scroll_ref,\n      is_dark_mode_on = ui.is_dark_mode_on;\n  var has_payment_agent_search_warning = payment_agent_store.has_payment_agent_search_warning,\n      is_search_loading = payment_agent_store.is_search_loading,\n      is_try_withdraw_successful = payment_agent_store.is_try_withdraw_successful,\n      is_withdraw_successful = payment_agent_store.is_withdraw_successful,\n      onChangePaymentMethod = payment_agent_store.onChangePaymentMethod,\n      payment_agent_list = payment_agent_store.filtered_list,\n      resetPaymentAgent = payment_agent_store.resetPaymentAgent,\n      selected_bank = payment_agent_store.selected_bank,\n      supported_banks = payment_agent_store.supported_banks;\n  external_react_default().useEffect(function () {\n    return function () {\n      if (!is_deposit) {\n        resetPaymentAgent();\n      }\n    };\n  }, [is_deposit, resetPaymentAgent]);\n  external_react_default().useEffect(function () {\n    return function () {\n      onChangePaymentMethod({\n        target: {\n          value: '0'\n        }\n      });\n    };\n  }, [onChangePaymentMethod]);\n  external_react_default().useEffect(function () {\n    if (app_contents_scroll_ref) app_contents_scroll_ref.current.scrollTop = 0; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [is_try_withdraw_successful, is_withdraw_successful]);\n\n  var _React$useState = external_react_default().useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      is_unlisted_withdraw = _React$useState2[0],\n      setIsUnlistedWithdraw = _React$useState2[1];\n\n  var list_with_default = [{\n    text: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"All payment methods\"\n    }),\n    value: 0\n  }].concat(payment_agent_container_toConsumableArray(supported_banks));\n\n  if (is_try_withdraw_successful) {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_withdraw_confirm, {\n      verification_code: verification_code\n    });\n  }\n\n  if (is_withdraw_successful) {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_receipt, null);\n  }\n\n  if (is_unlisted_withdraw) {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_unlisted_withdraw_form, {\n      verification_code: verification_code,\n      setIsUnlistedWithdraw: setIsUnlistedWithdraw\n    });\n  }\n\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, !has_payment_agent_search_warning && /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n    className: \"payment-agent-list__side-note\",\n    has_title: false,\n    is_mobile: true\n  }, /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_disclaimer, null)), /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n    className: \"payment-agent-list__side-note-second\",\n    has_title: false,\n    is_mobile: true\n  }, /*#__PURE__*/external_react_default().createElement(payment_agent_missing_payment_method_note, null)), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-list__list-header\"\n  }, is_deposit ? /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"s\",\n    size: \"xs\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Contact your preferred payment agent for payment instructions and make your deposit.\"\n  })) : /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    line_height: \"s\",\n    size: \"xs\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Choose your preferred payment agent and enter your withdrawal amount. If your payment agent is not listed, <0>search for them using their account number</0>.\",\n    components: [/*#__PURE__*/external_react_default().createElement(\"span\", {\n      \"data-testid\": \"dt_withdrawal_link\",\n      key: 0,\n      className: \"link\",\n      onClick: function onClick() {\n        return setIsUnlistedWithdraw(!is_unlisted_withdraw);\n      }\n    })]\n  }))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-list__list-selector\"\n  }, /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_search_box, null), supported_banks.length >= 1 && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.DesktopWrapper, null, /*#__PURE__*/external_react_default().createElement(components_.Dropdown, {\n    id: \"payment_methods\",\n    classNameItems: \"cashier__drop-down-items\",\n    list: list_with_default,\n    name: \"payment_methods\",\n    value: selected_bank,\n    onChange: onChangePaymentMethod\n  })), /*#__PURE__*/external_react_default().createElement(components_.MobileWrapper, null, /*#__PURE__*/external_react_default().createElement(components_.SelectNative, {\n    placeholder: (0,translations_.localize)('All payment methods'),\n    name: \"payment_methods\",\n    list_items: supported_banks,\n    value: selected_bank === 0 ? '' : selected_bank.toString(),\n    label: selected_bank === 0 ? (0,translations_.localize)('All payment methods') : (0,translations_.localize)('Type'),\n    onChange: function onChange(e) {\n      return onChangePaymentMethod({\n        target: {\n          name: 'payment_methods',\n          value: e.target.value ? e.target.value.toLowerCase() : 0\n        }\n      });\n    },\n    use_text: false\n  })))), is_search_loading ? /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n    is_fullscreen: false,\n    className: \"payment-agent-list__search-loader\"\n  }) : /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, has_payment_agent_search_warning ? /*#__PURE__*/external_react_default().createElement(PaymentAgentSearchWarning, null) : payment_agent_list.map(function (payment_agent, idx) {\n    return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_card, {\n      key: idx,\n      is_dark_mode_on: is_dark_mode_on,\n      is_deposit: is_deposit,\n      payment_agent: payment_agent\n    });\n  })));\n});\nPaymentAgentContainer.propTypes = {\n  is_deposit: (prop_types_default()).bool,\n  verification_code: (prop_types_default()).string\n};\n/* harmony default export */ const payment_agent_container = (PaymentAgentContainer);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-container/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_container = (payment_agent_container);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-list/deposit-tab.tsx\n\n\n\n\nvar DepositTab = (0,src/* observer */.Pi)(function () {\n  var _useStore = (0,src/* useStore */.oR)(),\n      modules = _useStore.modules;\n\n  var _modules$cashier = modules.cashier,\n      payment_agent = _modules$cashier.payment_agent,\n      general_store = _modules$cashier.general_store;\n  external_react_default().useEffect(function () {\n    payment_agent.onMountPaymentAgentList();\n  }, [payment_agent]);\n  return /*#__PURE__*/external_react_default().createElement(\"div\", null, general_store.is_loading ? /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n    is_fullscreen: false\n  }) : /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_container, {\n    is_deposit: true\n  }));\n});\n/* harmony default export */ const deposit_tab = (DepositTab);\n// EXTERNAL MODULE: ../../hooks/src/index.ts + 7 modules\nvar hooks_src = __webpack_require__(\"../../hooks/src/index.ts\");\n// EXTERNAL MODULE: ./components/email-verification-empty-state/index.ts + 2 modules\nvar email_verification_empty_state = __webpack_require__(\"./components/email-verification-empty-state/index.ts\");\n// EXTERNAL MODULE: external \"react-router-dom\"\nvar external_react_router_dom_ = __webpack_require__(\"react-router-dom\");\n// EXTERNAL MODULE: ./components/error/index.ts + 1 modules\nvar components_error = __webpack_require__(\"./components/error/index.ts\");\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-withdrawal-locked/payment-agent-withdrawal-locked.jsx\nfunction payment_agent_withdrawal_locked_toConsumableArray(arr) { return payment_agent_withdrawal_locked_arrayWithoutHoles(arr) || payment_agent_withdrawal_locked_iterableToArray(arr) || payment_agent_withdrawal_locked_unsupportedIterableToArray(arr) || payment_agent_withdrawal_locked_nonIterableSpread(); }\n\nfunction payment_agent_withdrawal_locked_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction payment_agent_withdrawal_locked_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return payment_agent_withdrawal_locked_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return payment_agent_withdrawal_locked_arrayLikeToArray(o, minLen); }\n\nfunction payment_agent_withdrawal_locked_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction payment_agent_withdrawal_locked_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return payment_agent_withdrawal_locked_arrayLikeToArray(arr); }\n\nfunction payment_agent_withdrawal_locked_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\nvar PaymentAgentWithdrawalLockedItem = function PaymentAgentWithdrawalLockedItem(_ref) {\n  var item = _ref.item;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"cashier__wrapper--align-center payment-agent-withdrawal-locked\"\n  }, item.title && /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    align: \"center\",\n    as: \"p\",\n    className: \"payment-agent-withdrawal-locked__title\",\n    line_height: \"s\",\n    size: \"s\"\n  }, item.title), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    align: \"center\",\n    as: \"p\",\n    className: \"payment-agent-withdrawal-locked__text\",\n    line_height: \"s\",\n    size: \"xs\"\n  }, item.content), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"payment-agent-withdrawal-locked__btn-confirm\",\n    onClick: item.onConfirm,\n    primary: true,\n    large: true,\n    type: \"button\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: item.btn_confirm_text\n  })));\n};\n\nvar PaymentAgentWithdrawalLocked = function PaymentAgentWithdrawalLocked(_ref2) {\n  var error = _ref2.error,\n      history = _ref2.history;\n  var items = [].concat(payment_agent_withdrawal_locked_toConsumableArray(error.code === 'PaymentAgentWithdrawSameMethod' ? [{\n    btn_confirm_text: (0,translations_.localize)('OK'),\n    content: (0,translations_.localize)('To withdraw your funds, please choose the same payment method you used to make your deposits.'),\n    onConfirm: function onConfirm() {\n      return history.push(shared_.routes.cashier_withdrawal);\n    }\n  }] : []), payment_agent_withdrawal_locked_toConsumableArray(error.code === 'PaymentAgentUseOtherMethod' ? [{\n    btn_confirm_text: (0,translations_.localize)('OK'),\n    content: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      i18n_default_text: \"Please use an e-wallet that you have used for deposits previously. Ensure the e-wallet supports withdrawal. See the list of e-wallets that support withdrawals <0>here</0>.\",\n      components: [/*#__PURE__*/external_react_default().createElement(components_.StaticUrl, {\n        key: 0,\n        className: \"link\",\n        href: \"/payment-methods\"\n      })]\n    }),\n    onConfirm: function onConfirm() {\n      return history.push(shared_.routes.cashier_withdrawal);\n    },\n    title: (0,translations_.localize)('Please use an e-wallet to withdraw your funds.')\n  }] : []));\n\n  if (error.onClickButton || error.code !== 'PaymentAgentWithdrawSameMethod' || error.code !== 'PaymentAgentUseOtherMethod') {\n    return /*#__PURE__*/external_react_default().createElement(components_error/* default */.Z, {\n      error: error\n    });\n  }\n\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, items.map(function (item, index) {\n    return /*#__PURE__*/external_react_default().createElement(PaymentAgentWithdrawalLockedItem, {\n      item: item,\n      key: index\n    });\n  }));\n};\n\nPaymentAgentWithdrawalLocked.propTypes = {\n  error: (prop_types_default()).object,\n  history: (prop_types_default()).object\n};\nPaymentAgentWithdrawalLockedItem.propTypes = {\n  item: (prop_types_default()).object\n};\n/* harmony default export */ const payment_agent_withdrawal_locked = ((0,external_react_router_dom_.withRouter)(PaymentAgentWithdrawalLocked));\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-withdrawal-locked/index.js\n\n/* harmony default export */ const payment_agent_payment_agent_withdrawal_locked = (payment_agent_withdrawal_locked);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-list/withdrawal-tab.tsx\n\n\n\n\n\n\nvar WithdrawalTab = (0,src/* observer */.Pi)(function () {\n  var verify = (0,hooks_src/* useVerifyEmail */.hU)('paymentagent_withdraw');\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      modules = _useStore.modules;\n\n  var payment_agent = modules.cashier.payment_agent;\n  var verification_code = client.verification_code.payment_agent_withdraw;\n  external_react_default().useEffect(function () {\n    if (payment_agent.active_tab_index && !verification_code) {\n      verify.send();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [payment_agent.active_tab_index, verification_code]); // TODO: `verify` should not be a dependency of the `useEffect` hook as it will cause a loop,\n  // We shouldn't call `verify.send()` inside the `useEffect` and we should improve the UX to\n  // match the behavior of the `Withdrawal` page and first inform the user.\n\n  if (verify.error && 'code' in verify.error) return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_withdrawal_locked, {\n    error: verify.error\n  });\n  if (!verify.is_loading && verify.has_been_sent) return /*#__PURE__*/external_react_default().createElement(email_verification_empty_state/* default */.Z, {\n    type: 'paymentagent_withdraw'\n  });\n  if (verification_code || payment_agent.is_withdraw) return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_container, {\n    verification_code: verification_code\n  });\n  return null;\n});\n/* harmony default export */ const withdrawal_tab = (WithdrawalTab);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-list/payment-agent-list.tsx\n\n\n\n\n\n\n\n\n\n\n\n\nvar PaymentAgentList = (0,src/* observer */.Pi)(function (_ref) {\n  var setSideNotes = _ref.setSideNotes;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      modules = _useStore.modules;\n\n  var _modules$cashier = modules.cashier,\n      payment_agent = _modules$cashier.payment_agent,\n      general_store = _modules$cashier.general_store;\n  external_react_default().useEffect(function () {\n    if (!general_store.is_loading && !payment_agent.is_try_withdraw_successful) {\n      setSideNotes === null || setSideNotes === void 0 ? void 0 : setSideNotes([/*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n        has_title: false,\n        key: 0\n      }, /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_disclaimer, null)), /*#__PURE__*/external_react_default().createElement(side_note/* default */.Z, {\n        has_title: false,\n        key: 1\n      }, /*#__PURE__*/external_react_default().createElement(payment_agent_missing_payment_method_note, null))]);\n    } else {\n      setSideNotes === null || setSideNotes === void 0 ? void 0 : setSideNotes([]);\n    }\n  }, [setSideNotes, general_store.is_loading, payment_agent.is_try_withdraw_successful]);\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"payment-agent-list cashier__wrapper--align-left\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: classnames_default()('payment-agent-list__instructions', {\n      'payment-agent-list__instructions-hide-tabs': payment_agent.is_try_withdraw_successful\n    })\n  }, /*#__PURE__*/external_react_default().createElement(components_.Tabs, {\n    active_index: payment_agent.active_tab_index,\n    className: \"tabs--desktop\",\n    onTabItemClick: payment_agent.setActiveTab,\n    top: true,\n    header_fit_content: (0,shared_.isDesktop)()\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    label: (0,translations_.localize)('Deposit')\n  }, /*#__PURE__*/external_react_default().createElement(deposit_tab, null)), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    label: (0,translations_.localize)('Withdrawal')\n  }, /*#__PURE__*/external_react_default().createElement(withdrawal_tab, null)))));\n});\n/* harmony default export */ const payment_agent_list = (PaymentAgentList);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent-list/index.ts\n\n/* harmony default export */ const payment_agent_payment_agent_list = (payment_agent_list);\n;// CONCATENATED MODULE: ./pages/payment-agent/payment-agent.jsx\n\n\n\n\n\n\n\nvar PaymentAgent = (0,src/* observer */.Pi)(function (_ref) {\n  var setSideNotes = _ref.setSideNotes;\n\n  var _useStore = (0,src/* useStore */.oR)(),\n      client = _useStore.client,\n      _useStore$modules$cas = _useStore.modules.cashier,\n      general_store = _useStore$modules$cas.general_store,\n      payment_agent = _useStore$modules$cas.payment_agent;\n\n  var is_switching = client.is_switching,\n      is_virtual = client.is_virtual,\n      verification_code = client.verification_code.payment_agent_withdraw;\n  var is_cashier_locked = general_store.is_cashier_locked,\n      setActiveTab = general_store.setActiveTab;\n  var container = payment_agent.container,\n      is_payment_agent_withdraw = payment_agent.is_withdraw,\n      payment_agent_active_tab_index = payment_agent.active_tab_index,\n      setPaymentAgentActiveTabIndex = payment_agent.setActiveTabIndex;\n  var initial_active_index = verification_code || is_payment_agent_withdraw || payment_agent_active_tab_index ? 1 : 0;\n  setPaymentAgentActiveTabIndex(initial_active_index);\n  external_react_default().useEffect(function () {\n    setActiveTab(container);\n    return function () {\n      setPaymentAgentActiveTabIndex(0);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (is_switching) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Loading, null);\n  }\n\n  if (is_virtual) {\n    return /*#__PURE__*/external_react_default().createElement(cashier_container/* Virtual */.o, null);\n  }\n\n  if (is_cashier_locked) {\n    return /*#__PURE__*/external_react_default().createElement(cashier_locked/* default */.Z, null);\n  }\n\n  return /*#__PURE__*/external_react_default().createElement(payment_agent_payment_agent_list, {\n    setSideNotes: setSideNotes\n  });\n});\nPaymentAgent.propTypes = {\n  setSideNotes: (prop_types_default()).func\n};\n/* harmony default export */ const payment_agent = (PaymentAgent);\n;// CONCATENATED MODULE: ./pages/payment-agent/index.js\n\n/* harmony default export */ const pages_payment_agent = (payment_agent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/payment-agent/index.js\n");

/***/ }),

/***/ "./utils/utility.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wx\": () => (/* binding */ getNormalizedPaymentMethod)\n/* harmony export */ });\n/* unused harmony exports createElement, getAccountText, getStaticHash, isEuCountry, PromiseClass, template */\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"@deriv/shared\");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_0__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar template = function template(string, content) {\n  var to_replace = content;\n\n  if (content && !Array.isArray(content)) {\n    to_replace = [content];\n  }\n\n  return string.replace(/\\[_(\\d+)]/g, function (s, index) {\n    return to_replace[+index - 1];\n  });\n};\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\n\n\nvar createElement = function createElement(tag_name) {\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var el = document.createElement(tag_name);\n  Object.keys(attributes).forEach(function (attr) {\n    var value = attributes[attr];\n\n    if (attr === 'text') {\n      el.textContent = value;\n    } else if (attr === 'html') {\n      el.html(value);\n    } else {\n      el.setAttribute(attr, value);\n    }\n  });\n  return el;\n};\n\nvar static_hash;\n\nvar getStaticHash = function getStaticHash() {\n  static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n  return static_hash;\n};\n\nvar PromiseClass = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function PromiseClass() {\n  var _this = this;\n\n  _classCallCheck(this, PromiseClass);\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.reject = reject;\n    _this.resolve = resolve;\n  });\n}))); // TODO: [duplicate_code] - Move this to shared package\n// eu countries to support\n\n\nvar eu_countries = (/* unused pure expression or super */ null && (['it', 'de', 'fr', 'lu', 'gr', 'mf', 'es', 'sk', 'lt', 'nl', 'at', 'bg', 'si', 'cy', 'be', 'ro', 'hr', 'pt', 'pl', 'lv', 'ee', 'cz', 'fi', 'hu', 'dk', 'se', 'ie', 'im', 'gb', 'mt'])); // TODO: [duplicate_code] - Move this to shared package\n// check if client is from EU\n\nvar isEuCountry = function isEuCountry(country) {\n  return eu_countries.includes(country);\n}; // check if mlt or dxtrade for account text\n\n\nvar getAccountText = function getAccountText(account) {\n  var account_text = '';\n\n  if (account.is_dxtrade || account.is_mt) {\n    account_text = account.text;\n  } else {\n    account_text = getCurrencyDisplayCode(account.text);\n  }\n\n  return account_text;\n};\n\nvar getNormalizedPaymentMethod = function getNormalizedPaymentMethod(payment_method, constants) {\n  var is_for_icon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var method = is_for_icon ? payment_method.replace(/[' ',-]/g, '').toLowerCase() : payment_method;\n  var normalized_payment_method = Object.entries(constants).reduce(function (pay_method, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value.some(function (el) {\n      return el === method;\n    }) ? key : pay_method;\n  }, '');\n  return is_for_icon ? normalized_payment_method : normalized_payment_method || payment_method;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy91dGlsaXR5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7OztBQUNBO0FBaUNBOztBQUNBO0FBQUE7QUFBQTs7O0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi91dGlscy91dGlsaXR5LmpzP2U2MjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q3VycmVuY3lEaXNwbGF5Q29kZSB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuXG5jb25zdCB0ZW1wbGF0ZSA9IChzdHJpbmcsIGNvbnRlbnQpID0+IHtcbiAgICBsZXQgdG9fcmVwbGFjZSA9IGNvbnRlbnQ7XG4gICAgaWYgKGNvbnRlbnQgJiYgIUFycmF5LmlzQXJyYXkoY29udGVudCkpIHtcbiAgICAgICAgdG9fcmVwbGFjZSA9IFtjb250ZW50XTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cXFtfKFxcZCspXS9nLCAocywgaW5kZXgpID0+IHRvX3JlcGxhY2VbK2luZGV4IC0gMV0pO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgRE9NIGVsZW1lbnQgYW5kIGFkZHMgYW55IGF0dHJpYnV0ZXMgdG8gaXQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHRhZ19uYW1lOiB0aGUgdGFnIHRvIGNyZWF0ZSwgZS5nLiAnZGl2JywgJ2EnLCBldGNcbiAqIEBwYXJhbSB7T2JqZWN0fSBhdHRyaWJ1dGVzOiBhbGwgdGhlIGF0dHJpYnV0ZXMgdG8gYXNzaWduLCBlLmcuIHsgaWQ6ICcuLi4nLCBjbGFzczogJy4uLicsIGh0bWw6ICcuLi4nLCAuLi4gfVxuICogQHJldHVybiB0aGUgY3JlYXRlZCBET00gZWxlbWVudFxuICovXG5jb25zdCBjcmVhdGVFbGVtZW50ID0gKHRhZ19uYW1lLCBhdHRyaWJ1dGVzID0ge30pID0+IHtcbiAgICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnX25hbWUpO1xuICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goYXR0ciA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlc1thdHRyXTtcbiAgICAgICAgaWYgKGF0dHIgPT09ICd0ZXh0Jykge1xuICAgICAgICAgICAgZWwudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChhdHRyID09PSAnaHRtbCcpIHtcbiAgICAgICAgICAgIGVsLmh0bWwodmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKGF0dHIsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBlbDtcbn07XG5cbmxldCBzdGF0aWNfaGFzaDtcbmNvbnN0IGdldFN0YXRpY0hhc2ggPSAoKSA9PiB7XG4gICAgc3RhdGljX2hhc2ggPVxuICAgICAgICBzdGF0aWNfaGFzaCB8fCAoZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYyo9XCJtYWluXCJdJykuZ2V0QXR0cmlidXRlKCdzcmMnKSB8fCAnJykuc3BsaXQoJy4nKVsxXTtcbiAgICByZXR1cm4gc3RhdGljX2hhc2g7XG59O1xuXG5jbGFzcyBQcm9taXNlQ2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlamVjdCA9IHJlamVjdDtcbiAgICAgICAgICAgIHRoaXMucmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8gVE9ETzogW2R1cGxpY2F0ZV9jb2RlXSAtIE1vdmUgdGhpcyB0byBzaGFyZWQgcGFja2FnZVxuLy8gZXUgY291bnRyaWVzIHRvIHN1cHBvcnRcbmNvbnN0IGV1X2NvdW50cmllcyA9IFtcbiAgICAnaXQnLFxuICAgICdkZScsXG4gICAgJ2ZyJyxcbiAgICAnbHUnLFxuICAgICdncicsXG4gICAgJ21mJyxcbiAgICAnZXMnLFxuICAgICdzaycsXG4gICAgJ2x0JyxcbiAgICAnbmwnLFxuICAgICdhdCcsXG4gICAgJ2JnJyxcbiAgICAnc2knLFxuICAgICdjeScsXG4gICAgJ2JlJyxcbiAgICAncm8nLFxuICAgICdocicsXG4gICAgJ3B0JyxcbiAgICAncGwnLFxuICAgICdsdicsXG4gICAgJ2VlJyxcbiAgICAnY3onLFxuICAgICdmaScsXG4gICAgJ2h1JyxcbiAgICAnZGsnLFxuICAgICdzZScsXG4gICAgJ2llJyxcbiAgICAnaW0nLFxuICAgICdnYicsXG4gICAgJ210Jyxcbl07XG4vLyBUT0RPOiBbZHVwbGljYXRlX2NvZGVdIC0gTW92ZSB0aGlzIHRvIHNoYXJlZCBwYWNrYWdlXG4vLyBjaGVjayBpZiBjbGllbnQgaXMgZnJvbSBFVVxuY29uc3QgaXNFdUNvdW50cnkgPSBjb3VudHJ5ID0+IGV1X2NvdW50cmllcy5pbmNsdWRlcyhjb3VudHJ5KTtcblxuLy8gY2hlY2sgaWYgbWx0IG9yIGR4dHJhZGUgZm9yIGFjY291bnQgdGV4dFxuY29uc3QgZ2V0QWNjb3VudFRleHQgPSBhY2NvdW50ID0+IHtcbiAgICBsZXQgYWNjb3VudF90ZXh0ID0gJyc7XG4gICAgaWYgKGFjY291bnQuaXNfZHh0cmFkZSB8fCBhY2NvdW50LmlzX210KSB7XG4gICAgICAgIGFjY291bnRfdGV4dCA9IGFjY291bnQudGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBhY2NvdW50X3RleHQgPSBnZXRDdXJyZW5jeURpc3BsYXlDb2RlKGFjY291bnQudGV4dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjY291bnRfdGV4dDtcbn07XG5cbmNvbnN0IGdldE5vcm1hbGl6ZWRQYXltZW50TWV0aG9kID0gKHBheW1lbnRfbWV0aG9kLCBjb25zdGFudHMsIGlzX2Zvcl9pY29uID0gZmFsc2UpID0+IHtcbiAgICBjb25zdCBtZXRob2QgPSBpc19mb3JfaWNvbiA/IHBheW1lbnRfbWV0aG9kLnJlcGxhY2UoL1snICcsLV0vZywgJycpLnRvTG93ZXJDYXNlKCkgOiBwYXltZW50X21ldGhvZDtcblxuICAgIGNvbnN0IG5vcm1hbGl6ZWRfcGF5bWVudF9tZXRob2QgPSBPYmplY3QuZW50cmllcyhjb25zdGFudHMpLnJlZHVjZShcbiAgICAgICAgKHBheV9tZXRob2QsIFtrZXksIHZhbHVlXSkgPT4gKHZhbHVlLnNvbWUoZWwgPT4gZWwgPT09IG1ldGhvZCkgPyBrZXkgOiBwYXlfbWV0aG9kKSxcbiAgICAgICAgJydcbiAgICApO1xuICAgIHJldHVybiBpc19mb3JfaWNvbiA/IG5vcm1hbGl6ZWRfcGF5bWVudF9tZXRob2QgOiBub3JtYWxpemVkX3BheW1lbnRfbWV0aG9kIHx8IHBheW1lbnRfbWV0aG9kO1xufTtcblxuZXhwb3J0IHtcbiAgICBjcmVhdGVFbGVtZW50LFxuICAgIGdldEFjY291bnRUZXh0LFxuICAgIGdldE5vcm1hbGl6ZWRQYXltZW50TWV0aG9kLFxuICAgIGdldFN0YXRpY0hhc2gsXG4gICAgaXNFdUNvdW50cnksXG4gICAgUHJvbWlzZUNsYXNzLFxuICAgIHRlbXBsYXRlLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/utility.js\n");

/***/ }),

/***/ "../../hooks/src/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"wN\": () => (/* reexport */ src_useDepositLocked),\n  \"hU\": () => (/* reexport */ src_useVerifyEmail)\n});\n\n// UNUSED EXPORTS: useCountdown, useNeedAuthentication, useNeedFinancialAssessment, useNeedTNC, useRealSTPAccount\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n;// CONCATENATED MODULE: ../../hooks/src/useCountdown.ts\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar ONE_SECOND = 1000;\n\nvar useCountdown = function useCountdown(_ref) {\n  var from = _ref.from,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? 0 : _ref$to,\n      _ref$increment = _ref.increment,\n      increment = _ref$increment === void 0 ? false : _ref$increment;\n\n  var _useState = (0,external_react_.useState)(from),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = (0,external_react_.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      is_running = _useState4[0],\n      setIsRunning = _useState4[1];\n\n  (0,external_react_.useEffect)(function () {\n    var timer;\n\n    if (is_running) {\n      timer = setTimeout(function () {\n        if (count === to) {\n          pause();\n        } else {\n          setCount(function (old) {\n            return increment ? old + 1 : old - 1;\n          });\n        }\n      }, ONE_SECOND);\n    }\n\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [count, is_running, to, increment]);\n\n  var start = function start() {\n    return setIsRunning(true);\n  };\n\n  var pause = function pause() {\n    return setIsRunning(false);\n  };\n\n  var reset = function reset() {\n    return setCount(from);\n  };\n\n  var stop = function stop() {\n    pause();\n    reset();\n  };\n\n  return {\n    count: count,\n    is_running: is_running,\n    start: start,\n    pause: pause,\n    reset: reset,\n    stop: stop\n  };\n};\n\n/* harmony default export */ const src_useCountdown = (useCountdown);\n// EXTERNAL MODULE: ../../api/src/index.ts + 2 modules\nvar src = __webpack_require__(\"../../api/src/index.ts\");\n// EXTERNAL MODULE: ../../stores/src/index.ts + 3 modules\nvar stores_src = __webpack_require__(\"../../stores/src/index.ts\");\n;// CONCATENATED MODULE: ../../hooks/src/useVerifyEmail.ts\nfunction useVerifyEmail_slicedToArray(arr, i) { return useVerifyEmail_arrayWithHoles(arr) || useVerifyEmail_iterableToArrayLimit(arr, i) || useVerifyEmail_unsupportedIterableToArray(arr, i) || useVerifyEmail_nonIterableRest(); }\n\nfunction useVerifyEmail_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction useVerifyEmail_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useVerifyEmail_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useVerifyEmail_arrayLikeToArray(o, minLen); }\n\nfunction useVerifyEmail_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction useVerifyEmail_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction useVerifyEmail_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar RESEND_COUNTDOWN = 60;\n\nvar useVerifyEmail = function useVerifyEmail(type) {\n  var WS = (0,src/* useWS */.q)('verify_email');\n  var counter = src_useCountdown({\n    from: RESEND_COUNTDOWN\n  });\n\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var _useState = (0,external_react_.useState)(0),\n      _useState2 = useVerifyEmail_slicedToArray(_useState, 2),\n      sent_count = _useState2[0],\n      setSentCount = _useState2[1];\n\n  var send = function send() {\n    if (!client.email) return;\n    if (counter.is_running) return;\n    counter.reset();\n    counter.start();\n    setSentCount(function (old) {\n      return old + 1;\n    });\n    WS.send({\n      verify_email: client.email,\n      type: type\n    });\n  };\n\n  return {\n    is_loading: WS.is_loading,\n    error: WS.error,\n    data: WS.data,\n    counter: counter.count,\n    is_counter_running: counter.is_running,\n    sent_count: sent_count,\n    has_been_sent: sent_count !== 0,\n    send: send\n  };\n};\n\n/* harmony default export */ const src_useVerifyEmail = (useVerifyEmail);\n;// CONCATENATED MODULE: ../../hooks/src/useNeedAuthentication.ts\n\n\nvar useNeedAuthentication = function useNeedAuthentication() {\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var is_authentication_needed = client.is_authentication_needed,\n      is_eu = client.is_eu;\n  var is_need_authentication = is_authentication_needed && is_eu;\n  return is_need_authentication;\n};\n\n/* harmony default export */ const src_useNeedAuthentication = (useNeedAuthentication);\n;// CONCATENATED MODULE: ../../hooks/src/useNeedFinancialAssessment.ts\n\n\nvar useNeedFinancialAssessment = function useNeedFinancialAssessment() {\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var is_financial_account = client.is_financial_account,\n      is_financial_information_incomplete = client.is_financial_information_incomplete,\n      is_trading_experience_incomplete = client.is_trading_experience_incomplete;\n  var is_need_financial_assessment = is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n  return is_need_financial_assessment;\n};\n\n/* harmony default export */ const src_useNeedFinancialAssessment = (useNeedFinancialAssessment);\n;// CONCATENATED MODULE: ../../hooks/src/useRealSTPAccount.ts\n\n\nvar useRealSTPAccount = function useRealSTPAccount() {\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var mt5_login_list = client.mt5_login_list;\n  var has_real_stp_account = mt5_login_list.some(function (item) {\n    return item.account_type === 'real' && item.sub_account_type === 'financial_stp';\n  });\n  return has_real_stp_account;\n};\n\n/* harmony default export */ const src_useRealSTPAccount = (useRealSTPAccount);\n;// CONCATENATED MODULE: ../../hooks/src/useNeedTNC.ts\n\n\n\nvar useNeedTNC = function useNeedTNC() {\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var is_eu = client.is_eu,\n      is_tnc_needed = client.is_tnc_needed;\n  var has_real_stp_account = src_useRealSTPAccount();\n  var is_need_tnc = (is_eu || has_real_stp_account) && is_tnc_needed;\n  return is_need_tnc;\n};\n\n/* harmony default export */ const src_useNeedTNC = (useNeedTNC);\n;// CONCATENATED MODULE: ../../hooks/src/useDepositLocked.ts\n\n\n\n\n\nvar useDepositLocked = function useDepositLocked() {\n  var _useStore = (0,stores_src/* useStore */.oR)(),\n      client = _useStore.client;\n\n  var is_deposit_lock = client.is_deposit_lock,\n      is_trading_experience_incomplete = client.is_trading_experience_incomplete,\n      landing_company_shortcode = client.landing_company_shortcode;\n  var is_need_authentication = src_useNeedAuthentication();\n  var is_need_tnc = src_useNeedTNC();\n  var is_need_financial_assessment = src_useNeedFinancialAssessment();\n  var is_malta_invest = landing_company_shortcode === 'maltainvest';\n  var is_trading_experience_incomplete_or_need_financial_assessment = is_malta_invest ? is_trading_experience_incomplete : is_need_financial_assessment;\n  var is_deposit_locked = is_deposit_lock || is_need_authentication || is_need_tnc || is_trading_experience_incomplete_or_need_financial_assessment;\n  return is_deposit_locked;\n};\n\n/* harmony default export */ const src_useDepositLocked = (useDepositLocked);\n;// CONCATENATED MODULE: ../../hooks/src/index.ts\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../hooks/src/index.ts\n");

/***/ }),

/***/ "../../stores/src/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Pi\": () => (/* reexport */ es/* observer */.Pi),\n  \"oR\": () => (/* reexport */ useStore)\n});\n\n// UNUSED EXPORTS: StoreProvider\n\n// EXTERNAL MODULE: ../../../node_modules/mobx-react-lite/es/index.js + 16 modules\nvar es = __webpack_require__(\"../../../node_modules/mobx-react-lite/es/index.js\");\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n// EXTERNAL MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js + 15 modules\nvar esm5 = __webpack_require__(\"../../../node_modules/mobx-persist-store/lib/esm5/index.js\");\n;// CONCATENATED MODULE: ../../stores/src/stores/CounterStore.ts\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar CounterStore_CounterStore = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  function CounterStore() {\n    _classCallCheck(this, CounterStore);\n\n    this.count = 0;\n    makeObservable(this, {\n      count: observable,\n      increment: action.bound,\n      decrement: action.bound,\n      unmount: action.bound\n    });\n    makePersistable(this, {\n      name: 'CounterStore',\n      properties: ['count'],\n      storage: window.localStorage\n    });\n  }\n\n  _createClass(CounterStore, [{\n    key: \"increment\",\n    value: function increment() {\n      this.count = ++this.count;\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      this.count = --this.count;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      stopPersisting(this);\n    }\n  }]);\n\n  return CounterStore;\n}()));\n\n\n;// CONCATENATED MODULE: ../../stores/src/stores/index.ts\n\n;// CONCATENATED MODULE: ../../stores/src/useStore.tsx\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar StoreContext = /*#__PURE__*/(0,external_react_.createContext)(null);\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children,\n      store = _ref.store;\n  var memoizedValue = useMemo(function () {\n    return _objectSpread(_objectSpread({}, store), {}, {\n      counter: new CounterStore()\n    });\n  }, [store]);\n  useEffect(function () {\n    return function () {\n      return memoizedValue.counter.unmount();\n    };\n  }, [memoizedValue]);\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: memoizedValue\n  }, children);\n};\n\nvar useStore = function useStore() {\n  var store = (0,external_react_.useContext)(StoreContext);\n\n  if (!store) {\n    throw new Error('useStore must be used within StoreContext');\n  }\n\n  return store;\n};\n\n\n;// CONCATENATED MODULE: ../../stores/src/index.ts\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vc3RvcmVzL3NyYy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBR0E7QUFBQTs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU9BO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7OztBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUUzQkE7QUFFQTtBQU1BOztBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUZBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7OztBQ3BDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVzL0NvdW50ZXJTdG9yZS50cz81Zjg5Iiwid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVzL2luZGV4LnRzPzk1ODUiLCJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vc3RvcmVzL3NyYy91c2VTdG9yZS50c3g/NjIwNSIsIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi9zdG9yZXMvc3JjL2luZGV4LnRzP2Q2MWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWN0aW9uLCBvYnNlcnZhYmxlLCBtYWtlT2JzZXJ2YWJsZSB9IGZyb20gJ21vYngnO1xuaW1wb3J0IHsgbWFrZVBlcnNpc3RhYmxlLCBzdG9wUGVyc2lzdGluZyB9IGZyb20gJ21vYngtcGVyc2lzdC1zdG9yZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvdW50ZXJTdG9yZSB7XG4gICAgY291bnQgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIG1ha2VPYnNlcnZhYmxlKHRoaXMsIHtcbiAgICAgICAgICAgIGNvdW50OiBvYnNlcnZhYmxlLFxuICAgICAgICAgICAgaW5jcmVtZW50OiBhY3Rpb24uYm91bmQsXG4gICAgICAgICAgICBkZWNyZW1lbnQ6IGFjdGlvbi5ib3VuZCxcbiAgICAgICAgICAgIHVubW91bnQ6IGFjdGlvbi5ib3VuZCxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWFrZVBlcnNpc3RhYmxlKHRoaXMsIHsgbmFtZTogJ0NvdW50ZXJTdG9yZScsIHByb3BlcnRpZXM6IFsnY291bnQnXSwgc3RvcmFnZTogd2luZG93LmxvY2FsU3RvcmFnZSB9KTtcbiAgICB9XG5cbiAgICBpbmNyZW1lbnQoKSB7XG4gICAgICAgIHRoaXMuY291bnQgPSArK3RoaXMuY291bnQ7XG4gICAgfVxuXG4gICAgZGVjcmVtZW50KCkge1xuICAgICAgICB0aGlzLmNvdW50ID0gLS10aGlzLmNvdW50O1xuICAgIH1cblxuICAgIHVubW91bnQoKSB7XG4gICAgICAgIHN0b3BQZXJzaXN0aW5nKHRoaXMpO1xuICAgIH1cbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgYXMgQ291bnRlclN0b3JlIH0gZnJvbSAnLi9Db3VudGVyU3RvcmUnO1xuIiwiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIFByb3BzV2l0aENoaWxkcmVuLCB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUUm9vdFN0b3JlIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgQ291bnRlclN0b3JlIH0gZnJvbSAnLi9zdG9yZXMnO1xuXG5leHBvcnQgdHlwZSBUU3RvcmVzID0gVFJvb3RTdG9yZSAmIHtcbiAgICBjb3VudGVyOiBDb3VudGVyU3RvcmU7XG59O1xuXG5jb25zdCBTdG9yZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFRTdG9yZXMgfCBudWxsPihudWxsKTtcblxuY29uc3QgU3RvcmVQcm92aWRlciA9ICh7IGNoaWxkcmVuLCBzdG9yZSB9OiBQcm9wc1dpdGhDaGlsZHJlbjx7IHN0b3JlOiBUUm9vdFN0b3JlIH0+KSA9PiB7XG4gICAgY29uc3QgbWVtb2l6ZWRWYWx1ZSA9IHVzZU1lbW8oXG4gICAgICAgICgpID0+ICh7XG4gICAgICAgICAgICAuLi5zdG9yZSxcbiAgICAgICAgICAgIGNvdW50ZXI6IG5ldyBDb3VudGVyU3RvcmUoKSxcbiAgICAgICAgfSksXG4gICAgICAgIFtzdG9yZV1cbiAgICApO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtZW1vaXplZFZhbHVlLmNvdW50ZXIudW5tb3VudCgpO1xuICAgICAgICB9O1xuICAgIH0sIFttZW1vaXplZFZhbHVlXSk7XG5cbiAgICByZXR1cm4gPFN0b3JlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17bWVtb2l6ZWRWYWx1ZX0+e2NoaWxkcmVufTwvU3RvcmVDb250ZXh0LlByb3ZpZGVyPjtcbn07XG5cbmNvbnN0IHVzZVN0b3JlID0gKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlID0gdXNlQ29udGV4dChTdG9yZUNvbnRleHQpO1xuXG4gICAgaWYgKCFzdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZVN0b3JlIG11c3QgYmUgdXNlZCB3aXRoaW4gU3RvcmVDb250ZXh0Jyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3JlO1xufTtcblxuZXhwb3J0IHsgU3RvcmVQcm92aWRlciwgdXNlU3RvcmUgfTtcbiIsImV4cG9ydCB7IG9ic2VydmVyIH0gZnJvbSAnbW9ieC1yZWFjdC1saXRlJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlU3RvcmUnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../stores/src/index.ts\n");

/***/ }),

/***/ "../../../node_modules/classnames/index.js":
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/classnames/index.js\n");

/***/ }),

/***/ "../../../node_modules/formik/dist/formik.esm.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Field\": () => (/* binding */ Field),\n  \"Form\": () => (/* binding */ Form),\n  \"Formik\": () => (/* binding */ Formik)\n});\n\n// UNUSED EXPORTS: ErrorMessage, FastField, FieldArray, FormikConsumer, FormikContext, FormikProvider, connect, getActiveElement, getIn, insert, isEmptyArray, isEmptyChildren, isFunction, isInputEvent, isInteger, isNaN, isObject, isPromise, isString, move, prepareDataForValidation, replace, setIn, setNestedObjectValues, swap, useField, useFormik, useFormikContext, validateYupSchema, withFormik, yupToFormErrors\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\n// EXTERNAL MODULE: ../../../node_modules/react-fast-compare/index.js\nvar react_fast_compare = __webpack_require__(\"../../../node_modules/react-fast-compare/index.js\");\nvar react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);\n;// CONCATENATED MODULE: ../../../node_modules/formik/node_modules/deepmerge/dist/es.js\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\n/* harmony default export */ const es = (deepmerge_1);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_freeGlobal.js\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ const _freeGlobal = (freeGlobal);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_root.js\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\n/* harmony default export */ const _root = (root);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Symbol.js\n\n\n/** Built-in value references. */\nvar _Symbol_Symbol = _root.Symbol;\n\n/* harmony default export */ const _Symbol = (_Symbol_Symbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getRawTag.js\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _getRawTag = (getRawTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_objectToString.js\n/** Used for built-in method references. */\nvar _objectToString_objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar _objectToString_nativeObjectToString = _objectToString_objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return _objectToString_nativeObjectToString.call(value);\n}\n\n/* harmony default export */ const _objectToString = (objectToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetTag.js\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar _baseGetTag_symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\n/* harmony default export */ const _baseGetTag = (baseGetTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_overArg.js\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* harmony default export */ const _overArg = (overArg);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getPrototype.js\n\n\n/** Built-in value references. */\nvar getPrototype = _overArg(Object.getPrototypeOf, Object);\n\n/* harmony default export */ const _getPrototype = (getPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObjectLike.js\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ const lodash_es_isObjectLike = (isObjectLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isPlainObject.js\n\n\n\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    isPlainObject_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar isPlainObject_hasOwnProperty = isPlainObject_objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!lodash_es_isObjectLike(value) || _baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = _getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/* harmony default export */ const lodash_es_isPlainObject = (isPlainObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheClear.js\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/* harmony default export */ const _listCacheClear = (listCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/eq.js\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/* harmony default export */ const lodash_es_eq = (eq);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assocIndexOf.js\n\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (lodash_es_eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/* harmony default export */ const _assocIndexOf = (assocIndexOf);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheDelete.js\n\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/* harmony default export */ const _listCacheDelete = (listCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheGet.js\n\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/* harmony default export */ const _listCacheGet = (listCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheHas.js\n\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\n/* harmony default export */ const _listCacheHas = (listCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheSet.js\n\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n/* harmony default export */ const _listCacheSet = (listCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_ListCache.js\n\n\n\n\n\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\n/* harmony default export */ const _ListCache = (ListCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackClear.js\n\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new _ListCache;\n  this.size = 0;\n}\n\n/* harmony default export */ const _stackClear = (stackClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackDelete.js\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/* harmony default export */ const _stackDelete = (stackDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackGet.js\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/* harmony default export */ const _stackGet = (stackGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackHas.js\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/* harmony default export */ const _stackHas = (stackHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObject.js\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* harmony default export */ const lodash_es_isObject = (isObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isFunction.js\n\n\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!lodash_es_isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/* harmony default export */ const lodash_es_isFunction = (isFunction);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_coreJsData.js\n\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root[\"__core-js_shared__\"];\n\n/* harmony default export */ const _coreJsData = (coreJsData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isMasked.js\n\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/* harmony default export */ const _isMasked = (isMasked);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toSource.js\n/** Used for built-in method references. */\nvar _toSource_funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _toSource_funcToString = _toSource_funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return _toSource_funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/* harmony default export */ const _toSource = (toSource);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsNative.js\n\n\n\n\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar _baseIsNative_funcProto = Function.prototype,\n    _baseIsNative_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _baseIsNative_funcToString = _baseIsNative_funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar _baseIsNative_hasOwnProperty = _baseIsNative_objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!lodash_es_isObject(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\n/* harmony default export */ const _baseIsNative = (baseIsNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getValue.js\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/* harmony default export */ const _getValue = (getValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getNative.js\n\n\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\n/* harmony default export */ const _getNative = (getNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Map.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar Map = _getNative(_root, 'Map');\n\n/* harmony default export */ const _Map = (Map);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeCreate.js\n\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\n/* harmony default export */ const _nativeCreate = (nativeCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashClear.js\n\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/* harmony default export */ const _hashClear = (hashClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashDelete.js\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _hashDelete = (hashDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashGet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar _hashGet_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/* harmony default export */ const _hashGet = (hashGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashHas.js\n\n\n/** Used for built-in method references. */\nvar _hashHas_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);\n}\n\n/* harmony default export */ const _hashHas = (hashHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashSet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;\n  return this;\n}\n\n/* harmony default export */ const _hashSet = (hashSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Hash.js\n\n\n\n\n\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\n/* harmony default export */ const _Hash = (Hash);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheClear.js\n\n\n\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\n/* harmony default export */ const _mapCacheClear = (mapCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isKeyable.js\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/* harmony default export */ const _isKeyable = (isKeyable);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getMapData.js\n\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/* harmony default export */ const _getMapData = (getMapData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheDelete.js\n\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _mapCacheDelete = (mapCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheGet.js\n\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\n/* harmony default export */ const _mapCacheGet = (mapCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheHas.js\n\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\n/* harmony default export */ const _mapCacheHas = (mapCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheSet.js\n\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n/* harmony default export */ const _mapCacheSet = (mapCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_MapCache.js\n\n\n\n\n\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\n/* harmony default export */ const _MapCache = (MapCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackSet.js\n\n\n\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof _ListCache) {\n    var pairs = data.__data__;\n    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new _MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n/* harmony default export */ const _stackSet = (stackSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Stack.js\n\n\n\n\n\n\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new _ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = _stackClear;\nStack.prototype['delete'] = _stackDelete;\nStack.prototype.get = _stackGet;\nStack.prototype.has = _stackHas;\nStack.prototype.set = _stackSet;\n\n/* harmony default export */ const _Stack = (Stack);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayEach.js\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayEach = (arrayEach);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_defineProperty.js\n\n\nvar defineProperty = (function() {\n  try {\n    var func = _getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _defineProperty = (defineProperty);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignValue.js\n\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && _defineProperty) {\n    _defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/* harmony default export */ const _baseAssignValue = (baseAssignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assignValue.js\n\n\n\n/** Used for built-in method references. */\nvar _assignValue_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\n/* harmony default export */ const _assignValue = (assignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyObject.js\n\n\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      _baseAssignValue(object, key, newValue);\n    } else {\n      _assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/* harmony default export */ const _copyObject = (copyObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseTimes.js\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseTimes = (baseTimes);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsArguments.js\n\n\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return lodash_es_isObjectLike(value) && _baseGetTag(value) == argsTag;\n}\n\n/* harmony default export */ const _baseIsArguments = (baseIsArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArguments.js\n\n\n\n/** Used for built-in method references. */\nvar isArguments_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {\n  return lodash_es_isObjectLike(value) && isArguments_hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/* harmony default export */ const lodash_es_isArguments = (isArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArray.js\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/* harmony default export */ const lodash_es_isArray = (isArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubFalse.js\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/* harmony default export */ const lodash_es_stubFalse = (stubFalse);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isBuffer.js\n\n\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || lodash_es_stubFalse;\n\n/* harmony default export */ const lodash_es_isBuffer = (isBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isIndex.js\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/* harmony default export */ const _isIndex = (isIndex);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isLength.js\n/** Used as references for various `Number` constants. */\nvar isLength_MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= isLength_MAX_SAFE_INTEGER;\n}\n\n/* harmony default export */ const lodash_es_isLength = (isLength);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsTypedArray.js\n\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsTypedArray_argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    _baseIsTypedArray_funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    _baseIsTypedArray_objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[_baseIsTypedArray_objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return lodash_es_isObjectLike(value) &&\n    lodash_es_isLength(value.length) && !!typedArrayTags[_baseGetTag(value)];\n}\n\n/* harmony default export */ const _baseIsTypedArray = (baseIsTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseUnary.js\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/* harmony default export */ const _baseUnary = (baseUnary);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nodeUtil.js\n\n\n/** Detect free variable `exports`. */\nvar _nodeUtil_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _nodeUtil_freeModule = _nodeUtil_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _nodeUtil_moduleExports = _nodeUtil_freeModule && _nodeUtil_freeModule.exports === _nodeUtil_freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = _nodeUtil_moduleExports && _freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = _nodeUtil_freeModule && _nodeUtil_freeModule.require && _nodeUtil_freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _nodeUtil = (nodeUtil);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isTypedArray.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;\n\n/* harmony default export */ const lodash_es_isTypedArray = (isTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayLikeKeys.js\n\n\n\n\n\n\n\n/** Used for built-in method references. */\nvar _arrayLikeKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = lodash_es_isArray(value),\n      isArg = !isArr && lodash_es_isArguments(value),\n      isBuff = !isArr && !isArg && lodash_es_isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? _baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           _isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayLikeKeys = (arrayLikeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isPrototype.js\n/** Used for built-in method references. */\nvar _isPrototype_objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || _isPrototype_objectProto;\n\n  return value === proto;\n}\n\n/* harmony default export */ const _isPrototype = (isPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeys.js\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = _overArg(Object.keys, Object);\n\n/* harmony default export */ const _nativeKeys = (nativeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeys.js\n\n\n\n/** Used for built-in method references. */\nvar _baseKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!_isPrototype(object)) {\n    return _nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeys = (baseKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArrayLike.js\n\n\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);\n}\n\n/* harmony default export */ const lodash_es_isArrayLike = (isArrayLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keys.js\n\n\n\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);\n}\n\n/* harmony default export */ const lodash_es_keys = (keys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssign.js\n\n\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && _copyObject(source, lodash_es_keys(source), object);\n}\n\n/* harmony default export */ const _baseAssign = (baseAssign);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeysIn.js\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _nativeKeysIn = (nativeKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeysIn.js\n\n\n\n\n/** Used for built-in method references. */\nvar _baseKeysIn_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!lodash_es_isObject(object)) {\n    return _nativeKeysIn(object);\n  }\n  var isProto = _isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeysIn = (baseKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keysIn.js\n\n\n\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);\n}\n\n/* harmony default export */ const lodash_es_keysIn = (keysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignIn.js\n\n\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && _copyObject(source, lodash_es_keysIn(source), object);\n}\n\n/* harmony default export */ const _baseAssignIn = (baseAssignIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneBuffer.js\n\n\n/** Detect free variable `exports`. */\nvar _cloneBuffer_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _cloneBuffer_freeModule = _cloneBuffer_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _cloneBuffer_moduleExports = _cloneBuffer_freeModule && _cloneBuffer_freeModule.exports === _cloneBuffer_freeExports;\n\n/** Built-in value references. */\nvar _cloneBuffer_Buffer = _cloneBuffer_moduleExports ? _root.Buffer : undefined,\n    allocUnsafe = _cloneBuffer_Buffer ? _cloneBuffer_Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/* harmony default export */ const _cloneBuffer = (cloneBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyArray.js\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _copyArray = (copyArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayFilter.js\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayFilter = (arrayFilter);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubArray.js\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/* harmony default export */ const lodash_es_stubArray = (stubArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbols.js\n\n\n\n/** Used for built-in method references. */\nvar _getSymbols_objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return _arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return _getSymbols_propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/* harmony default export */ const _getSymbols = (getSymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbols.js\n\n\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return _copyObject(source, _getSymbols(source), object);\n}\n\n/* harmony default export */ const _copySymbols = (copySymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayPush.js\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayPush = (arrayPush);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbolsIn.js\n\n\n\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  var result = [];\n  while (object) {\n    _arrayPush(result, _getSymbols(object));\n    object = _getPrototype(object);\n  }\n  return result;\n};\n\n/* harmony default export */ const _getSymbolsIn = (getSymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbolsIn.js\n\n\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return _copyObject(source, _getSymbolsIn(source), object);\n}\n\n/* harmony default export */ const _copySymbolsIn = (copySymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetAllKeys.js\n\n\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));\n}\n\n/* harmony default export */ const _baseGetAllKeys = (baseGetAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeys.js\n\n\n\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);\n}\n\n/* harmony default export */ const _getAllKeys = (getAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeysIn.js\n\n\n\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);\n}\n\n/* harmony default export */ const _getAllKeysIn = (getAllKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_DataView.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar DataView = _getNative(_root, 'DataView');\n\n/* harmony default export */ const _DataView = (DataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Promise.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Promise_Promise = _getNative(_root, 'Promise');\n\n/* harmony default export */ const _Promise = (_Promise_Promise);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Set.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar Set = _getNative(_root, 'Set');\n\n/* harmony default export */ const _Set = (Set);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_WeakMap.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _WeakMap_WeakMap = _getNative(_root, 'WeakMap');\n\n/* harmony default export */ const _WeakMap = (_WeakMap_WeakMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getTag.js\n\n\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _getTag_mapTag = '[object Map]',\n    _getTag_objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    _getTag_setTag = '[object Set]',\n    _getTag_weakMapTag = '[object WeakMap]';\n\nvar _getTag_dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = _toSource(_DataView),\n    mapCtorString = _toSource(_Map),\n    promiseCtorString = _toSource(_Promise),\n    setCtorString = _toSource(_Set),\n    weakMapCtorString = _toSource(_WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = _baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != _getTag_dataViewTag) ||\n    (_Map && getTag(new _Map) != _getTag_mapTag) ||\n    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||\n    (_Set && getTag(new _Set) != _getTag_setTag) ||\n    (_WeakMap && getTag(new _WeakMap) != _getTag_weakMapTag)) {\n  getTag = function(value) {\n    var result = _baseGetTag(value),\n        Ctor = result == _getTag_objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? _toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return _getTag_dataViewTag;\n        case mapCtorString: return _getTag_mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return _getTag_setTag;\n        case weakMapCtorString: return _getTag_weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const _getTag = (getTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneArray.js\n/** Used for built-in method references. */\nvar _initCloneArray_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/* harmony default export */ const _initCloneArray = (initCloneArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Uint8Array.js\n\n\n/** Built-in value references. */\nvar Uint8Array = _root.Uint8Array;\n\n/* harmony default export */ const _Uint8Array = (Uint8Array);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneArrayBuffer.js\n\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));\n  return result;\n}\n\n/* harmony default export */ const _cloneArrayBuffer = (cloneArrayBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneDataView.js\n\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/* harmony default export */ const _cloneDataView = (cloneDataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneRegExp.js\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/* harmony default export */ const _cloneRegExp = (cloneRegExp);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneSymbol.js\n\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/* harmony default export */ const _cloneSymbol = (cloneSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneTypedArray.js\n\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/* harmony default export */ const _cloneTypedArray = (cloneTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneByTag.js\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _initCloneByTag_boolTag = '[object Boolean]',\n    _initCloneByTag_dateTag = '[object Date]',\n    _initCloneByTag_mapTag = '[object Map]',\n    _initCloneByTag_numberTag = '[object Number]',\n    _initCloneByTag_regexpTag = '[object RegExp]',\n    _initCloneByTag_setTag = '[object Set]',\n    _initCloneByTag_stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',\n    _initCloneByTag_dataViewTag = '[object DataView]',\n    _initCloneByTag_float32Tag = '[object Float32Array]',\n    _initCloneByTag_float64Tag = '[object Float64Array]',\n    _initCloneByTag_int8Tag = '[object Int8Array]',\n    _initCloneByTag_int16Tag = '[object Int16Array]',\n    _initCloneByTag_int32Tag = '[object Int32Array]',\n    _initCloneByTag_uint8Tag = '[object Uint8Array]',\n    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _initCloneByTag_uint16Tag = '[object Uint16Array]',\n    _initCloneByTag_uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case _initCloneByTag_arrayBufferTag:\n      return _cloneArrayBuffer(object);\n\n    case _initCloneByTag_boolTag:\n    case _initCloneByTag_dateTag:\n      return new Ctor(+object);\n\n    case _initCloneByTag_dataViewTag:\n      return _cloneDataView(object, isDeep);\n\n    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:\n    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:\n    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:\n      return _cloneTypedArray(object, isDeep);\n\n    case _initCloneByTag_mapTag:\n      return new Ctor;\n\n    case _initCloneByTag_numberTag:\n    case _initCloneByTag_stringTag:\n      return new Ctor(object);\n\n    case _initCloneByTag_regexpTag:\n      return _cloneRegExp(object);\n\n    case _initCloneByTag_setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return _cloneSymbol(object);\n  }\n}\n\n/* harmony default export */ const _initCloneByTag = (initCloneByTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseCreate.js\n\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!lodash_es_isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/* harmony default export */ const _baseCreate = (baseCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneObject.js\n\n\n\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !_isPrototype(object))\n    ? _baseCreate(_getPrototype(object))\n    : {};\n}\n\n/* harmony default export */ const _initCloneObject = (initCloneObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsMap.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsMap_mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsMap_mapTag;\n}\n\n/* harmony default export */ const _baseIsMap = (baseIsMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isMap.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsMap = _nodeUtil && _nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;\n\n/* harmony default export */ const lodash_es_isMap = (isMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsSet.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsSet_setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsSet_setTag;\n}\n\n/* harmony default export */ const _baseIsSet = (baseIsSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSet.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsSet = _nodeUtil && _nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;\n\n/* harmony default export */ const lodash_es_isSet = (isSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseClone.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar _baseClone_argsTag = '[object Arguments]',\n    _baseClone_arrayTag = '[object Array]',\n    _baseClone_boolTag = '[object Boolean]',\n    _baseClone_dateTag = '[object Date]',\n    _baseClone_errorTag = '[object Error]',\n    _baseClone_funcTag = '[object Function]',\n    _baseClone_genTag = '[object GeneratorFunction]',\n    _baseClone_mapTag = '[object Map]',\n    _baseClone_numberTag = '[object Number]',\n    _baseClone_objectTag = '[object Object]',\n    _baseClone_regexpTag = '[object RegExp]',\n    _baseClone_setTag = '[object Set]',\n    _baseClone_stringTag = '[object String]',\n    _baseClone_symbolTag = '[object Symbol]',\n    _baseClone_weakMapTag = '[object WeakMap]';\n\nvar _baseClone_arrayBufferTag = '[object ArrayBuffer]',\n    _baseClone_dataViewTag = '[object DataView]',\n    _baseClone_float32Tag = '[object Float32Array]',\n    _baseClone_float64Tag = '[object Float64Array]',\n    _baseClone_int8Tag = '[object Int8Array]',\n    _baseClone_int16Tag = '[object Int16Array]',\n    _baseClone_int32Tag = '[object Int32Array]',\n    _baseClone_uint8Tag = '[object Uint8Array]',\n    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _baseClone_uint16Tag = '[object Uint16Array]',\n    _baseClone_uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =\ncloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =\ncloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =\ncloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =\ncloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =\ncloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =\ncloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =\ncloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =\ncloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =\ncloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =\ncloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;\ncloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =\ncloneableTags[_baseClone_weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!lodash_es_isObject(value)) {\n    return value;\n  }\n  var isArr = lodash_es_isArray(value);\n  if (isArr) {\n    result = _initCloneArray(value);\n    if (!isDeep) {\n      return _copyArray(value, result);\n    }\n  } else {\n    var tag = _getTag(value),\n        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;\n\n    if (lodash_es_isBuffer(value)) {\n      return _cloneBuffer(value, isDeep);\n    }\n    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : _initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? _copySymbolsIn(value, _baseAssignIn(result, value))\n          : _copySymbols(value, _baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = _initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new _Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (lodash_es_isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (lodash_es_isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? _getAllKeysIn : _getAllKeys)\n    : (isFlat ? lodash_es_keysIn : lodash_es_keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  _arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/* harmony default export */ const _baseClone = (baseClone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/clone.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar clone_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return _baseClone(value, clone_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_clone = (clone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayMap.js\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayMap = (arrayMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSymbol.js\n\n\n\n/** `Object#toString` result references. */\nvar isSymbol_symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (lodash_es_isObjectLike(value) && _baseGetTag(value) == isSymbol_symbolTag);\n}\n\n/* harmony default export */ const lodash_es_isSymbol = (isSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/memoize.js\n\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || _MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = _MapCache;\n\n/* harmony default export */ const lodash_es_memoize = (memoize);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_memoizeCapped.js\n\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = lodash_es_memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\n/* harmony default export */ const _memoizeCapped = (memoizeCapped);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stringToPath.js\n\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = _memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/* harmony default export */ const _stringToPath = (stringToPath);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toKey.js\n\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || lodash_es_isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _toKey = (toKey);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseToString.js\n\n\n\n\n\n/** Used as references for various `Number` constants. */\nvar _baseToString_INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar _baseToString_symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolToString = _baseToString_symbolProto ? _baseToString_symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (lodash_es_isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return _arrayMap(value, baseToString) + '';\n  }\n  if (lodash_es_isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -_baseToString_INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _baseToString = (baseToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toString.js\n\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString_toString(value) {\n  return value == null ? '' : _baseToString(value);\n}\n\n/* harmony default export */ const lodash_es_toString = (toString_toString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toPath.js\n\n\n\n\n\n\n\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (lodash_es_isArray(value)) {\n    return _arrayMap(value, _toKey);\n  }\n  return lodash_es_isSymbol(value) ? [value] : _copyArray(_stringToPath(lodash_es_toString(value)));\n}\n\n/* harmony default export */ const lodash_es_toPath = (toPath);\n\n;// CONCATENATED MODULE: ../../../node_modules/tiny-warning/dist/tiny-warning.esm.js\nvar isProduction = \"production\" === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/* harmony default export */ const tiny_warning_esm = (warning);\n\n// EXTERNAL MODULE: ../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(\"../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/cloneDeep.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar cloneDeep_CLONE_DEEP_FLAG = 1,\n    cloneDeep_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_cloneDeep = (cloneDeep);\n\n;// CONCATENATED MODULE: ../../../node_modules/formik/dist/formik.esm.js\n\n\n\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/** @private is the value an empty array? */\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\nvar formik_esm_isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\nvar formik_esm_isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return external_react_.Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\nvar isPromise = function isPromise(value) {\n  return formik_esm_isObject(value) && formik_esm_isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && formik_esm_isObject(value) && formik_esm_isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = lodash_es_toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\nfunction setIn(obj, path, value) {\n  var res = lodash_es_clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = lodash_es_toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (formik_esm_isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = lodash_es_clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (formik_esm_isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nvar FormikContext = /*#__PURE__*/(0,external_react_.createContext)(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\nfunction useFormikContext() {\n  var formik = (0,external_react_.useContext)(FormikContext);\n  !!!formik ?  false ? 0 : tiny_warning_esm(false) : void 0;\n  return formik;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (react_fast_compare_default()(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = (0,external_react_.useRef)(props.initialValues);\n  var initialErrors = (0,external_react_.useRef)(props.initialErrors || emptyErrors);\n  var initialTouched = (0,external_react_.useRef)(props.initialTouched || emptyTouched);\n  var initialStatus = (0,external_react_.useRef)(props.initialStatus);\n  var isMounted = (0,external_react_.useRef)(false);\n  var fieldRegistry = (0,external_react_.useRef)({});\n\n  if (false) {}\n\n  (0,external_react_.useEffect)(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useReducer = (0,external_react_.useReducer)(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  }),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var runValidateHandler = (0,external_react_.useCallback)(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (false) {}\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = (0,external_react_.useCallback)(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = formik_esm_isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (false) {}\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = (0,external_react_.useCallback)(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = (0,external_react_.useCallback)(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return formik_esm_isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = (0,external_react_.useCallback)(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = es.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  (0,external_react_.useEffect)(function () {\n    if (validateOnMount && isMounted.current === true && react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = (0,external_react_.useCallback)(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched]);\n  (0,external_react_.useEffect)(function () {\n    if (isMounted.current === true && !react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && formik_esm_isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: error[name]\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = (0,external_react_.useCallback)(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = (0,external_react_.useCallback)(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = (0,external_react_.useCallback)(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = formik_esm_isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = (0,external_react_.useCallback)(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = (0,external_react_.useCallback)(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && \"production\" !== \"production\") {}\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = (0,external_react_.useCallback)(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && \"production\" !== \"production\") {}\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = (0,external_react_.useCallback)(function (stateOrCb) {\n    if (formik_esm_isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = (0,external_react_.useCallback)(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = (0,external_react_.useCallback)(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (false) { var activeElement; }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = (0,external_react_.useCallback)(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = (0,external_react_.useCallback)(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = (0,external_react_.useCallback)(function (nameOrOptions) {\n    var isAnObject = formik_esm_isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = (0,external_react_.useMemo)(function () {\n    return !react_fast_compare_default()(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = (0,external_react_.useMemo)(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && formik_esm_isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  (0,external_react_.useImperativeHandle)(innerRef, function () {\n    return formikbag;\n  });\n\n  if (false) {}\n\n  return (0,external_react_.createElement)(FormikProvider, {\n    value: formikbag\n  }, component ? (0,external_react_.createElement)(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? formik_esm_isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  if (context === void 0) {\n    context = {};\n  }\n\n  var validateData = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || lodash_es_isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (lodash_es_isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? es(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = es(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? external_react_.useLayoutEffect : external_react_.useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = (0,external_react_.useRef)(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return (0,external_react_.useCallback)(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = formik_esm_isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (false) {}\n\n  !fieldName ?  false ? 0 : invariant(false) : void 0;\n  return [getFieldProps(props), getFieldMeta(fieldName), getFieldHelpers(fieldName)];\n}\nfunction Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (false) {} // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  (0,external_react_.useEffect)(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (formik_esm_isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(component, _extends({\n        ref: innerRef\n      }, field, rest), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return (0,external_react_.createElement)(component, _extends({\n      field: field,\n      form: formik\n    }, props), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return (0,external_react_.createElement)(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest), children);\n  }\n\n  return (0,external_react_.createElement)(asElement, _extends({}, field, props), children);\n}\n\nvar Form = /*#__PURE__*/(0,external_react_.forwardRef)(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return (0,external_react_.createElement)(\"form\", Object.assign({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        _this = _React$Component.apply(this, arguments) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return formik_esm_isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n        /**\r\n         * Just avoiding a render callback for perf here\r\n         */\n\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, Object.assign({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, Object.assign({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ?  false ? 0 : invariant(false) : void 0;\n      return createElement(Comp, Object.assign({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n\n/**\r\n * Some array helpers!\r\n */\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        var updateTouched = typeof alterTouched === 'function' ? alterTouched : fn; // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [lodash_es_cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    }; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !react_fast_compare_default()(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (formik_esm_isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      }\n\n      return copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array;\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? (0,external_react_.createElement)(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(external_react_.Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FieldArrayInner)));\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? formik_esm_isFunction(render) ? render(error) : null : children ? formik_esm_isFunction(children) ? children(error) : null : component ? (0,external_react_.createElement)(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(external_react_.Component);\n\nvar ErrorMessage = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(ErrorMessageImpl)));\n\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && render) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(is && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (formik_esm_isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return (0,external_react_.createElement)(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return (0,external_react_.createElement)(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return (0,external_react_.createElement)(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(external_react_.Component);\n\nvar FastField = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FastFieldInner)));\n\n\n//# sourceMappingURL=formik.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/formik/dist/formik.esm.js\n");

/***/ }),

/***/ "../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar reactIs = __webpack_require__(\"../../../node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkwY2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.debounce/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.debounce/index.js\n");

/***/ }),

/***/ "../../../node_modules/mobx-persist-store/lib/esm5/index.js":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// UNUSED EXPORTS: PersistStore, PersistStoreMap, StorageAdapter, clearPersistedStore, configurePersistable, getPersistedStore, hydrateStore, isHydrated, isPersisting, makePersistable, mpsConfig, mpsReactionOptions, pausePersisting, startPersisting, stopPersisting\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStoreMap.js\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar PersistStoreMap_PersistStoreMap = new Map();\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/clearPersistedStore.js\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar clearPersistedStore = function (target) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.clearPersistedStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/configurePersistable.js\nvar mpsConfig = {};\nvar mpsReactionOptions = {};\nvar configurePersistable = function (config, reactionOptions) {\n    if (reactionOptions === void 0) { reactionOptions = {}; }\n    mpsConfig = config;\n    mpsReactionOptions = reactionOptions;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/getPersistedStore.js\nvar getPersistedStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar getPersistedStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar getPersistedStore = function (target) { return getPersistedStore_awaiter(void 0, void 0, void 0, function () {\n    var _a, _b;\n    return getPersistedStore_generator(this, function (_c) {\n        return [2 /*return*/, (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.getPersistedStore()) !== null && _b !== void 0 ? _b : null];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/hydrateStore.js\nvar hydrateStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar hydrateStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar hydrateStore = function (target) { return hydrateStore_awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return hydrateStore_generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.hydrateStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isHydrated.js\n\nvar isHydrated = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isHydrated) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isPersisting.js\n\nvar isPersisting = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isPersisting) !== null && _b !== void 0 ? _b : false;\n};\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/utils.js\nvar buildExpireTimestamp = function (milliseconds) {\n    return new Date().getTime() + milliseconds;\n};\nvar hasTimestampExpired = function (milliseconds) {\n    var dateTimeNow = new Date().getTime();\n    var dateTimeExpiration = new Date(milliseconds).getTime();\n    return dateTimeExpiration <= dateTimeNow;\n};\nvar isDefined = function (t) { return t != null; };\n/**\n * Check if the data is an object.\n */\nvar isObject = function (data) {\n    return Boolean(data) && Array.isArray(data) === false && typeof data === 'object';\n};\n/**\n * Check the data is an object with properties.\n */\nvar isObjectWithProperties = function (data) {\n    return isObject(data) && Object.keys(data).length > 0;\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nvar isFunction = function (functionToCheck) {\n    return functionToCheck && functionToCheck instanceof Function;\n};\nvar isStorageControllerLike = function (value) {\n    // \"typeof Storage\" fixes issue with React Native\n    if (typeof Storage !== 'undefined' && value instanceof Storage) {\n        return true;\n    }\n    return [\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('getItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('removeItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('setItem'),\n        isFunction(value === null || value === void 0 ? void 0 : value.getItem),\n        isFunction(value === null || value === void 0 ? void 0 : value.removeItem),\n        isFunction(value === null || value === void 0 ? void 0 : value.setItem),\n    ].every(Boolean);\n};\nvar isBrowser = typeof window !== 'undefined';\nvar isNotProductionBuild = \"production\" !== 'production';\nvar invalidStorageAdaptorWarningIf = function (storageAdaptor, storageName) {\n    if (isBrowser && isNotProductionBuild && !isStorageControllerLike(storageAdaptor)) {\n        console.warn(\"mobx-persist-store: \".concat(storageName, \" does not have a valid storage adaptor.\\n\\n* Make sure the storage controller has 'getItem', 'setItem' and 'removeItem' methods.\\\"\"));\n    }\n};\nvar utils_duplicatedStoreWarningIf = function (hasPersistedStoreAlready, storageName) {\n    if (isBrowser && isNotProductionBuild && hasPersistedStoreAlready) {\n        console.warn(\"mobx-persist-store: 'makePersistable' was called was called with the same storage name \\\"\".concat(storageName, \"\\\".\\n\\n * Make sure you call \\\"stopPersisting\\\" before recreating \\\"\").concat(storageName, \"\\\" to avoid memory leaks. \\n * Or double check you did not have two stores with the same name.\"));\n    }\n};\nvar computedPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is computed and will not persist.\"));\n    }\n};\nvar actionPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is an action and will not persist.\"));\n    }\n};\nvar consoleDebug = function (isDebugMode, message, content) {\n    if (content === void 0) { content = ''; }\n    if (isDebugMode && isBrowser && isNotProductionBuild) {\n        console.info(\"%c mobx-persist-store: (Debug Mode) \".concat(message, \" \"), 'background: #4B8CC5; color: black; display: block;', content);\n    }\n};\nvar isArrayForMap = function (value) {\n    if (Array.isArray(value)) {\n        return value.every(function (v) { return Array.isArray(v); });\n    }\n    return false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/StorageAdapter.js\nvar StorageAdapter_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar StorageAdapter_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar StorageAdapter = /** @class */ (function () {\n    function StorageAdapter(options) {\n        this.options = options;\n    }\n    StorageAdapter.prototype.setItem = function (key, item) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, _c, stringify, _d, debugMode, data, content;\n            return StorageAdapter_generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _b = this.options, _c = _b.stringify, stringify = _c === void 0 ? true : _c, _d = _b.debugMode, debugMode = _d === void 0 ? false : _d;\n                        data = this.options.expireIn\n                            ? Object.assign({}, item, {\n                                __mps__: {\n                                    expireInTimestamp: buildExpireTimestamp(this.options.expireIn),\n                                },\n                            })\n                            : item;\n                        content = stringify ? JSON.stringify(data) : data;\n                        consoleDebug(debugMode, \"\".concat(key, \" - setItem:\"), content);\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.setItem(key, content))];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.getItem = function (key) {\n        var _a, _b;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _c, _d, removeOnExpiration, _e, debugMode, storageData, parsedData, hasExpired;\n            return StorageAdapter_generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _c = this.options, _d = _c.removeOnExpiration, removeOnExpiration = _d === void 0 ? true : _d, _e = _c.debugMode, debugMode = _e === void 0 ? false : _e;\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.getItem(key))];\n                    case 1:\n                        storageData = _f.sent();\n                        try {\n                            parsedData = JSON.parse(storageData) || {};\n                        }\n                        catch (error) {\n                            parsedData = storageData || {};\n                        }\n                        hasExpired = hasTimestampExpired((_b = parsedData.__mps__) === null || _b === void 0 ? void 0 : _b.expireInTimestamp);\n                        consoleDebug(debugMode, \"\".concat(key, \" - hasExpired\"), hasExpired);\n                        if (!(hasExpired && removeOnExpiration)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.removeItem(key)];\n                    case 2:\n                        _f.sent();\n                        _f.label = 3;\n                    case 3:\n                        parsedData = hasExpired ? {} : parsedData;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (getItem):\"), parsedData);\n                        return [2 /*return*/, parsedData];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.removeItem = function (key) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, debugMode;\n            return StorageAdapter_generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = this.options.debugMode, debugMode = _b === void 0 ? false : _b;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (removeItem): storage was removed\"));\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.removeItem(key))];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StorageAdapter;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/serializableProperty.js\n\n\nvar isSerializableProperty = function (obj) {\n    var keys = ['key', 'serialize', 'deserialize'];\n    if (!isObject(obj)) {\n        consoleDebug(!!mpsConfig.debugMode, 'passed value is not an object', { obj: obj });\n        return false;\n    }\n    return keys.every(function (key) {\n        if (obj.hasOwnProperty(key) && typeof key !== 'undefined') {\n            return true;\n        }\n        ;\n        consoleDebug(!!mpsConfig.debugMode, \"\".concat(key, \" not found in SerializableProperty\"), { key: key, obj: obj });\n        return false;\n    });\n};\nvar makeSerializableProperties = function (properties) {\n    return properties.reduce(function (acc, curr) {\n        if (typeof curr === 'string') {\n            acc.push({\n                key: curr,\n                serialize: function (value) { return value; },\n                deserialize: function (value) { return value; }\n            });\n            return acc;\n        }\n        if (isSerializableProperty(curr)) {\n            acc.push(curr);\n            return acc;\n        }\n        return acc;\n    }, []);\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStore.js\nvar PersistStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PersistStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\nvar PersistStore_PersistStore = /** @class */ (function () {\n    function PersistStore(target, options, reactionOptions) {\n        if (reactionOptions === void 0) { reactionOptions = {}; }\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n        this.debugMode = false;\n        this.isHydrated = false;\n        this.isPersisting = false;\n        this.storageName = '';\n        this.target = target;\n        this.storageName = options.name;\n        this.properties = makeSerializableProperties(options.properties);\n        this.reactionOptions = Object.assign({ fireImmediately: true }, mpsReactionOptions, reactionOptions);\n        this.debugMode = (_b = (_a = options.debugMode) !== null && _a !== void 0 ? _a : mpsConfig.debugMode) !== null && _b !== void 0 ? _b : false;\n        this.storageAdapter = new StorageAdapter({\n            expireIn: (_c = options.expireIn) !== null && _c !== void 0 ? _c : mpsConfig.expireIn,\n            removeOnExpiration: (_e = (_d = options.removeOnExpiration) !== null && _d !== void 0 ? _d : mpsConfig.removeOnExpiration) !== null && _e !== void 0 ? _e : true,\n            stringify: (_g = (_f = options.stringify) !== null && _f !== void 0 ? _f : mpsConfig.stringify) !== null && _g !== void 0 ? _g : true,\n            storage: options.storage ? options.storage : mpsConfig.storage,\n            debugMode: this.debugMode,\n        });\n        (0,external_mobx_.makeObservable)(this, {\n            clearPersistedStore: external_mobx_.action,\n            hydrateStore: external_mobx_.action,\n            isHydrated: external_mobx_.observable,\n            isPersisting: external_mobx_.observable,\n            pausePersisting: external_mobx_.action,\n            startPersisting: external_mobx_.action,\n            stopPersisting: external_mobx_.action,\n        }, { autoBind: true, deep: false });\n        invalidStorageAdaptorWarningIf(this.storageAdapter.options.storage, this.storageName);\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (makePersistable)\"), {\n            properties: this.properties,\n            storageAdapter: this.storageAdapter,\n            reactionOptions: this.reactionOptions,\n        });\n    }\n    PersistStore.prototype.init = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hydrateStore()];\n                    case 1:\n                        _a.sent();\n                        this.startPersisting();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.hydrateStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            var isBeingWatched, data_1, target_1;\n            var _this = this;\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isBeingWatched = Boolean(this.cancelWatch);\n                        if (this.isPersisting) {\n                            this.pausePersisting();\n                        }\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = false;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - (hydrateStore) isHydrated:\"), _this.isHydrated);\n                        });\n                        if (!(this.storageAdapter && this.target)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.getItem(this.storageName)];\n                    case 1:\n                        data_1 = _a.sent();\n                        target_1 = this.target;\n                        if (data_1) {\n                            (0,external_mobx_.runInAction)(function () {\n                                _this.properties.forEach(function (property) {\n                                    var allowPropertyHydration = [\n                                        target_1.hasOwnProperty(property.key),\n                                        typeof data_1[property.key] !== 'undefined',\n                                    ].every(Boolean);\n                                    if (allowPropertyHydration) {\n                                        var propertyData = data_1[property.key];\n                                        if (target_1[property.key] instanceof external_mobx_.ObservableMap && isArrayForMap(propertyData)) {\n                                            target_1[property.key] = property.deserialize(new Map(propertyData));\n                                        }\n                                        else {\n                                            target_1[property.key] = property.deserialize(propertyData);\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = true;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - isHydrated:\"), _this.isHydrated);\n                        });\n                        if (isBeingWatched) {\n                            this.startPersisting();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.startPersisting = function () {\n        var _this = this;\n        if (!this.storageAdapter || !this.target || this.cancelWatch) {\n            return;\n        }\n        // Reassigning so TypeScript doesn't complain (Object is possibly 'null') about and this.target within reaction\n        var target = this.target;\n        this.cancelWatch = (0,external_mobx_.reaction)(function () {\n            var propertiesToWatch = {};\n            _this.properties.forEach(function (property) {\n                var isComputedProperty = (0,external_mobx_.isComputedProp)(target, property.key);\n                var isActionProperty = (0,external_mobx_.isAction)(target[property.key]);\n                computedPersistWarningIf(isComputedProperty, String(property.key));\n                actionPersistWarningIf(isActionProperty, String(property.key));\n                if (!isComputedProperty && !isActionProperty) {\n                    var propertyData = property.serialize(target[property.key]);\n                    if (propertyData instanceof external_mobx_.ObservableMap) {\n                        var mapArray_1 = [];\n                        propertyData.forEach(function (v, k) {\n                            mapArray_1.push([k, (0,external_mobx_.toJS)(v)]);\n                        });\n                        propertyData = mapArray_1;\n                    }\n                    propertiesToWatch[property.key] = (0,external_mobx_.toJS)(propertyData);\n                }\n            });\n            return propertiesToWatch;\n        }, function (dataToSave) { return PersistStore_awaiter(_this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.setItem(this.storageName, dataToSave)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); }, this.reactionOptions);\n        this.isPersisting = true;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (startPersisting) isPersisting:\"), this.isPersisting);\n    };\n    PersistStore.prototype.pausePersisting = function () {\n        this.isPersisting = false;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - pausePersisting (isPersisting):\"), this.isPersisting);\n        if (this.cancelWatch) {\n            this.cancelWatch();\n            this.cancelWatch = null;\n        }\n    };\n    PersistStore.prototype.stopPersisting = function () {\n        this.pausePersisting();\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (stopPersisting)\"));\n        PersistStoreMap_PersistStoreMap[\"delete\"](this.target);\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n    };\n    PersistStore.prototype.clearPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (clearPersistedStore)\"));\n                        return [4 /*yield*/, this.storageAdapter.removeItem(this.storageName)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.getPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                if (this.storageAdapter) {\n                    consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (getPersistedStore)\"));\n                    // @ts-ignore\n                    return [2 /*return*/, this.storageAdapter.getItem(this.storageName)];\n                }\n                return [2 /*return*/, null];\n            });\n        });\n    };\n    return PersistStore;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/makePersistable.js\nvar makePersistable_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar makePersistable_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar makePersistable = function (target, storageOptions, reactionOptions) { return makePersistable_awaiter(void 0, void 0, void 0, function () {\n    var mobxPersistStore, hasPersistedStoreAlready;\n    return makePersistable_generator(this, function (_a) {\n        mobxPersistStore = new PersistStore(target, storageOptions, reactionOptions);\n        hasPersistedStoreAlready = Array.from(PersistStoreMap.values())\n            .map(function (item) { return item.storageName; })\n            .includes(mobxPersistStore.storageName);\n        duplicatedStoreWarningIf(hasPersistedStoreAlready, mobxPersistStore.storageName);\n        PersistStoreMap.set(target, mobxPersistStore);\n        return [2 /*return*/, mobxPersistStore.init()];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/pausePersisting.js\n\nvar pausePersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.pausePersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/startPersisting.js\n\nvar startPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.startPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/stopPersisting.js\n\nvar stopPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.stopPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/mobx-persist-store/lib/esm5/index.js\n");

/***/ }),

/***/ "../../../node_modules/mobx-react-lite/es/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Pi\": () => (/* reexport */ observer)\n});\n\n// UNUSED EXPORTS: Observer, clearTimers, enableStaticRendering, isObserverBatched, isUsingStaticRendering, observerBatching, useAsObservableSource, useLocalObservable, useLocalStore, useObserver, useStaticRendering\n\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/assertEnvironment.js\n\n\nif (!external_react_.useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\nif (!external_mobx_.makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\");\n}\n//# sourceMappingURL=assertEnvironment.js.map\n// EXTERNAL MODULE: external \"react-dom\"\nvar external_react_dom_ = __webpack_require__(\"react-dom\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\n\n//# sourceMappingURL=reactBatchedUpdates.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerBatching.js\n\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nfunction observerBatching(reactionScheduler) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch;\n        if (false) {}\n    }\n    (0,external_mobx_.configure)({ reactionScheduler: reactionScheduler });\n}\nvar isObserverBatched = function () {\n    if (false) {}\n    return true;\n};\n//# sourceMappingURL=observerBatching.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/printDebugValue.js\n\nfunction printDebugValue(v) {\n    return (0,external_mobx_.getDependencyTree)(v);\n}\n//# sourceMappingURL=printDebugValue.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js\nvar FinalizationRegistryLocal = typeof FinalizationRegistry === \"undefined\" ? undefined : FinalizationRegistry;\n\n//# sourceMappingURL=FinalizationRegistryWrapper.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js\nfunction createTrackingData(reaction) {\n    var trackingData = {\n        reaction: reaction,\n        mounted: false,\n        changedBeforeMount: false,\n        cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS\n    };\n    return trackingData;\n}\n/**\n * The minimum time before we'll clean up a Reaction created in a render\n * for a component that hasn't managed to run its effects. This needs to\n * be big enough to ensure that a component won't turn up and have its\n * effects run without being re-rendered.\n */\nvar CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10000;\n/**\n * The frequency with which we'll check for leaked reactions.\n */\nvar CLEANUP_TIMER_LOOP_MILLIS = 10000;\n//# sourceMappingURL=reactionCleanupTrackingCommon.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js\n\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nfunction createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n    var cleanupTokenToReactionTrackingMap = new Map();\n    var globalCleanupTokensCounter = 1;\n    var registry = new FinalizationRegistry(function cleanupFunction(token) {\n        var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n        if (trackedReaction) {\n            trackedReaction.reaction.dispose();\n            cleanupTokenToReactionTrackingMap.delete(token);\n        }\n    });\n    return {\n        addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n            var token = globalCleanupTokensCounter++;\n            registry.register(objectRetainedByReact, token, reactionTrackingRef);\n            reactionTrackingRef.current = createTrackingData(reaction);\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n            return reactionTrackingRef.current;\n        },\n        recordReactionAsCommitted: function (reactionRef) {\n            registry.unregister(reactionRef);\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n                cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n            }\n        },\n        forceCleanupTimerToRunNowForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        },\n        resetCleanupScheduleForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        }\n    };\n}\n//# sourceMappingURL=createReactionCleanupTrackingUsingFinalizationRegister.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\n/**\n * timers, gc-style, uncommitted reaction cleanup\n */\nfunction createTimerBasedReactionCleanupTracking() {\n    /**\n     * Reactions created by components that have yet to be fully mounted.\n     */\n    var uncommittedReactionRefs = new Set();\n    /**\n     * Latest 'uncommitted reactions' cleanup timer handle.\n     */\n    var reactionCleanupHandle;\n    /* istanbul ignore next */\n    /**\n     * Only to be used by test functions; do not export outside of mobx-react-lite\n     */\n    function forceCleanupTimerToRunNowForTests() {\n        // This allows us to control the execution of the cleanup timer\n        // to force it to run at awkward times in unit tests.\n        if (reactionCleanupHandle) {\n            clearTimeout(reactionCleanupHandle);\n            cleanUncommittedReactions();\n        }\n    }\n    /* istanbul ignore next */\n    function resetCleanupScheduleForTests() {\n        var e_1, _a;\n        if (uncommittedReactionRefs.size > 0) {\n            try {\n                for (var uncommittedReactionRefs_1 = __values(uncommittedReactionRefs), uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next(); !uncommittedReactionRefs_1_1.done; uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next()) {\n                    var ref = uncommittedReactionRefs_1_1.value;\n                    var tracking = ref.current;\n                    if (tracking) {\n                        tracking.reaction.dispose();\n                        ref.current = null;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (uncommittedReactionRefs_1_1 && !uncommittedReactionRefs_1_1.done && (_a = uncommittedReactionRefs_1.return)) _a.call(uncommittedReactionRefs_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            uncommittedReactionRefs.clear();\n        }\n        if (reactionCleanupHandle) {\n            clearTimeout(reactionCleanupHandle);\n            reactionCleanupHandle = undefined;\n        }\n    }\n    function ensureCleanupTimerRunning() {\n        if (reactionCleanupHandle === undefined) {\n            reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS);\n        }\n    }\n    function scheduleCleanupOfReactionIfLeaked(ref) {\n        uncommittedReactionRefs.add(ref);\n        ensureCleanupTimerRunning();\n    }\n    function recordReactionAsCommitted(reactionRef) {\n        uncommittedReactionRefs.delete(reactionRef);\n    }\n    /**\n     * Run by the cleanup timer to dispose any outstanding reactions\n     */\n    function cleanUncommittedReactions() {\n        reactionCleanupHandle = undefined;\n        // Loop through all the candidate leaked reactions; those older\n        // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.\n        var now = Date.now();\n        uncommittedReactionRefs.forEach(function (ref) {\n            var tracking = ref.current;\n            if (tracking) {\n                if (now >= tracking.cleanAt) {\n                    // It's time to tidy up this leaked reaction.\n                    tracking.reaction.dispose();\n                    ref.current = null;\n                    uncommittedReactionRefs.delete(ref);\n                }\n            }\n        });\n        if (uncommittedReactionRefs.size > 0) {\n            // We've just finished a round of cleanups but there are still\n            // some leak candidates outstanding.\n            ensureCleanupTimerRunning();\n        }\n    }\n    return {\n        addReactionToTrack: function (reactionTrackingRef, reaction, \n        /**\n         * On timer based implementation we don't really need this object,\n         * but we keep the same api\n         */\n        objectRetainedByReact) {\n            reactionTrackingRef.current = createTrackingData(reaction);\n            scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);\n            return reactionTrackingRef.current;\n        },\n        recordReactionAsCommitted: recordReactionAsCommitted,\n        forceCleanupTimerToRunNowForTests: forceCleanupTimerToRunNowForTests,\n        resetCleanupScheduleForTests: resetCleanupScheduleForTests\n    };\n}\n//# sourceMappingURL=createTimerBasedReactionCleanupTracking.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js\n\n\n\nvar _a = FinalizationRegistryLocal\n    ? createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistryLocal)\n    : createTimerBasedReactionCleanupTracking(), addReactionToTrack = _a.addReactionToTrack, recordReactionAsCommitted = _a.recordReactionAsCommitted, resetCleanupScheduleForTests = _a.resetCleanupScheduleForTests, forceCleanupTimerToRunNowForTests = _a.forceCleanupTimerToRunNowForTests;\n\n//# sourceMappingURL=reactionCleanupTracking.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/staticRendering.js\nvar globalIsUsingStaticRendering = false;\nfunction staticRendering_enableStaticRendering(enable) {\n    globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n    return globalIsUsingStaticRendering;\n}\n//# sourceMappingURL=staticRendering.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useObserver.js\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n\nfunction observerComponentNameFor(baseComponentName) {\n    return \"observer\".concat(baseComponentName);\n}\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nvar ObjectToBeRetainedByReact = /** @class */ (function () {\n    function ObjectToBeRetainedByReact() {\n    }\n    return ObjectToBeRetainedByReact;\n}());\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact();\n}\nfunction useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (isUsingStaticRendering()) {\n        return fn();\n    }\n    var _a = __read(external_react_default().useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a[0];\n    // Force update, see #2982\n    var _b = __read(external_react_default().useState(), 2), setState = _b[1];\n    var forceUpdate = function () { return setState([]); };\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    var reactionTrackingRef = external_react_default().useRef(null);\n    if (!reactionTrackingRef.current) {\n        // First render for this component (or first time since a previous\n        // reaction from an abandoned render was disposed).\n        var newReaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (trackingData_1.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate();\n            }\n            else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                trackingData_1.changedBeforeMount = true;\n            }\n        });\n        var trackingData_1 = addReactionToTrack(reactionTrackingRef, newReaction, objectRetainedByReact);\n    }\n    var reaction = reactionTrackingRef.current.reaction;\n    external_react_default().useDebugValue(reaction, printDebugValue);\n    external_react_default().useEffect(function () {\n        // Called on first mount only\n        recordReactionAsCommitted(reactionTrackingRef);\n        if (reactionTrackingRef.current) {\n            // Great. We've already got our reaction from our render;\n            // all we need to do is to record that it's now mounted,\n            // to allow future observable changes to trigger re-renders\n            reactionTrackingRef.current.mounted = true;\n            // Got a change before first mount, force an update\n            if (reactionTrackingRef.current.changedBeforeMount) {\n                reactionTrackingRef.current.changedBeforeMount = false;\n                forceUpdate();\n            }\n        }\n        else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n            // Re-create the reaction\n            reactionTrackingRef.current = {\n                reaction: new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n                    // We've definitely already been mounted at this point\n                    forceUpdate();\n                }),\n                mounted: true,\n                changedBeforeMount: false,\n                cleanAt: Infinity\n            };\n            forceUpdate();\n        }\n        return function () {\n            reactionTrackingRef.current.reaction.dispose();\n            reactionTrackingRef.current = null;\n        };\n    }, []);\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    var rendering;\n    var exception;\n    reaction.track(function () {\n        try {\n            rendering = fn();\n        }\n        catch (e) {\n            exception = e;\n        }\n    });\n    if (exception) {\n        throw exception; // re-throw any exceptions caught during rendering\n    }\n    return rendering;\n}\n//# sourceMappingURL=useObserver.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/observer.js\n\n\n\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nvar ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof external_react_.forwardRef === \"function\" && (0,external_react_.forwardRef)(function (props) { return null; })[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof external_react_.memo === \"function\" && (0,external_react_.memo)(function (props) { return null; })[\"$$typeof\"];\n// n.b. base case is not used for actual typings or exported in the typing files\nfunction observer(baseComponent, \n// TODO remove in next major\noptions) {\n    var _a;\n    if (false) {}\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n    }\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent;\n    }\n    var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n    var render = baseComponent;\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true;\n        render = baseComponent[\"render\"];\n        if (typeof render !== \"function\") {\n            throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n        }\n    }\n    var observerComponent = function (props, ref) {\n        return useObserver(function () { return render(props, ref); }, baseComponentName);\n    };\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;\n        observerComponent.displayName = baseComponentName;\n    }\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if (baseComponent.contextTypes) {\n        ;\n        observerComponent.contextTypes = baseComponent.contextTypes;\n    }\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = (0,external_react_.forwardRef)(observerComponent);\n    }\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = (0,external_react_.memo)(observerComponent);\n    copyStaticProperties(baseComponent, observerComponent);\n    if (false) {}\n    return observerComponent;\n}\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nvar hoistBlackList = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n};\nfunction copyStaticProperties(base, target) {\n    Object.keys(base).forEach(function (key) {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n        }\n    });\n}\n//# sourceMappingURL=observer.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/ObserverComponent.js\n\nfunction ObserverComponent(_a) {\n    var children = _a.children, render = _a.render;\n    var component = children || render;\n    if (typeof component !== \"function\") {\n        return null;\n    }\n    return useObserver(component);\n}\nif (false) {}\nObserverComponent.displayName = \"Observer\";\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n    var extraKey = key === \"children\" ? \"render\" : \"children\";\n    var hasProp = typeof props[key] === \"function\";\n    var hasExtraProp = typeof props[extraKey] === \"function\";\n    if (hasProp && hasExtraProp) {\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n    }\n    if (hasProp || hasExtraProp) {\n        return null;\n    }\n    return new Error(\"Invalid prop `\" +\n        propFullName +\n        \"` of type `\" +\n        typeof props[key] +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`, expected `function`.\");\n}\n//# sourceMappingURL=ObserverComponent.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalObservable.js\n\n\nfunction useLocalObservable(initializer, annotations) {\n    return useState(function () { return observable(initializer(), annotations, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalObservable.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useAsObservableSource.js\nvar useAsObservableSource_read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\nfunction useAsObservableSource_useAsObservableSource(current) {\n    if (false)\n        {}\n    var _a = useAsObservableSource_read(useState(function () { return observable(current, {}, { deep: false }); }), 1), res = _a[0];\n    runInAction(function () {\n        Object.assign(res, current);\n    });\n    return res;\n}\n//# sourceMappingURL=useAsObservableSource.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalStore.js\n\n\n\n\nfunction useLocalStore(initializer, current) {\n    if (false)\n        {}\n    var source = current && useAsObservableSource(current);\n    return useState(function () { return observable(initializer(source), undefined, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalStore.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/index.js\n\n\n\n\n\n\nobserverBatching(external_react_dom_.unstable_batchedUpdates);\n\n\n\n\n\n\n\nfunction es_useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (false) {}\n    return useObserverOriginal(fn, baseComponentName);\n}\n\nfunction useStaticRendering(enable) {\n    if (false) {}\n    enableStaticRendering(enable);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/mobx-react-lite/es/index.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/factoryWithThrowingShims.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(\"../../../node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/ZGMwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYmlnaW50OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/factoryWithThrowingShims.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(\"../../../node_modules/prop-types/factoryWithThrowingShims.js\")();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2Nhc2hpZXIvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanM/NzBkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/index.js\n");

/***/ }),

/***/ "../../../node_modules/prop-types/lib/ReactPropTypesSecret.js":
/***/ ((module) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcz9hZDgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "../../../node_modules/react-fast-compare/index.js":
/***/ ((module) => {

"use strict";
eval("\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhc3QtY29tcGFyZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jYXNoaWVyLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXN0LWNvbXBhcmUvaW5kZXguanM/NjZmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBrZXlMaXN0ID0gT2JqZWN0LmtleXM7XG52YXIgaGFzUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbmZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFyckEgPSBpc0FycmF5KGEpXG4gICAgICAsIGFyckIgPSBpc0FycmF5KGIpXG4gICAgICAsIGlcbiAgICAgICwgbGVuZ3RoXG4gICAgICAsIGtleTtcblxuICAgIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYXJyQSAhPSBhcnJCKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocmVnZXhwQSAmJiByZWdleHBCKSByZXR1cm4gYS50b1N0cmluZygpID09IGIudG9TdHJpbmcoKTtcblxuICAgIHZhciBrZXlzID0ga2V5TGlzdChhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcblxuICAgIGlmIChsZW5ndGggIT09IGtleUxpc3QoYikubGVuZ3RoKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbiAgICAvLyBzdGFydCByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCAmJiBiIGluc3RhbmNlb2YgRWxlbWVudClcbiAgICAgIHJldHVybiBhID09PSBiO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdFxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChrZXkgPT09ICdfb3duZXInICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lci5cbiAgICAgICAgLy8gIF9vd25lciBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzXG4gICAgICAgIC8vIGFuZCBpcyBub3QgbmVlZGVkIHdoZW4gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgYSByZWFjdCBlbGVtZW50XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgICBpZiAoIWVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBlbmQgcmVhY3QtZmFzdC1jb21wYXJlXG5cbiAgICAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXhwb3J0ZWRFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpIHx8IChlcnJvci5udW1iZXIgPT09IC0yMTQ2ODI4MjYwKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiByZWFjdC1mYXN0LWNvbXBhcmUgZG9lcyBub3QgaGFuZGxlIGNpcmN1bGFyIHJlZmVyZW5jZXMuJywgZXJyb3IubmFtZSwgZXJyb3IubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIHNvbWUgb3RoZXIgZXJyb3IuIHdlIHNob3VsZCBkZWZpbml0ZWx5IGtub3cgYWJvdXQgdGhlc2VcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-fast-compare/index.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/cjs/react-is.production.min.js":
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzPzBhOTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/cjs/react-is.production.min.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (true) {\n  module.exports = __webpack_require__(\"../../../node_modules/react-is/cjs/react-is.production.min.js\");\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NzZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/index.js\n");

/***/ }),

/***/ "@deriv/components":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;

/***/ }),

/***/ "@deriv/shared":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;

/***/ }),

/***/ "@deriv/translations":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;

/***/ }),

/***/ "mobx":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;

/***/ }),

/***/ "react":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ }),

/***/ "react-router":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_router__;

/***/ }),

/***/ "react-router-dom":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_router_dom__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./pages/payment-agent/index.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});